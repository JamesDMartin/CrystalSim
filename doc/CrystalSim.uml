<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="__SCEUJAQEeOq6NMfztjeOg" name="CrystalSim">
    <eAnnotations xmi:id="_BN8XYJAREeOq6NMfztjeOg" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_BN8XYZAREeOq6NMfztjeOg" source="codegen">
        <details xmi:id="_BN8XYpAREeOq6NMfztjeOg" key="codegenDirectory" value="/CrystalSim/src"/>
        <details xmi:id="_BSgHQJAREeOq6NMfztjeOg" key="AssociatedSourceCode" value="/CrystalSim/src/simulation/Simulation.java;2188236907/1;/CrystalSim/src/simulation/Lattice.java;1438083105/1;/CrystalSim/src/simulation/Crystal.java;612441065/1;/CrystalSim/src/simulation/CrystalFactory.java;3215002586/1;/CrystalSim/src/simulation/DimensionalityOptions.java;3869321175/1;/CrystalSim/src/simulation/ExplodeCrystal.java;1877288972/1;/CrystalSim/src/simulation/FittableParametersOptions.java;976519657/1;/CrystalSim/src/simulation/FittingType.java;1338275840/1;/CrystalSim/src/simulation/IndividualCrystalliteAnisotropy.java;2005604516/1;/CrystalSim/src/simulation/Nucleation.java;1525535067/1;/CrystalSim/src/simulation/NucleationEvent.java;3570742480/1;/CrystalSim/src/simulation/NucleationLocation.java;3062437110/1;/CrystalSim/src/simulation/NucleationOrientation.java;1151160688/1;/CrystalSim/src/simulation/Sample.java;1759998494/1;/CrystalSim/src/simulation/ShapeTypes.java;279290676/1;/CrystalSim/src/simulation/SimulSetupParams.java;736614184/1;/CrystalSim/src/simulation/Termination.java;3298390119/1;/CrystalSim/src/ui/SimulationController_UI.java;262808214/1;/CrystalSim/src/ui/UI.java;2136710050/1;/CrystalSim/src/ui/UIViewer.java;2926660457/1;/CrystalSim/src/ui/RunningSimulationPanel.java;2483539079/1;/CrystalSim/src/shapes/Cubic.java;1198321322/1;/CrystalSim/src/shapes/Cylindrical.java;1502177413/1;/CrystalSim/src/shapes/Orthorhombic.java;113527724/1;/CrystalSim/src/shapes/RectangularPrism.java;812403150/1;/CrystalSim/src/shapes/RectangularPrismTest.java;3390837583/1;/CrystalSim/src/shapes/Shape.java;3687016417/1;/CrystalSim/src/shapes/ShapeFactory.java;3728867574/1;/CrystalSim/src/shapes/ShapeTypes.java;1089890762/1;/CrystalSim/src/shapes/Spherical.java;1803806270/1;/CrystalSim/src/shapes/Tetragonal.java;4294467662/1;/CrystalSim/src/analysis/Analysis.java;751445701/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_BMrzIJAREeOq6NMfztjeOg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_BMsaMJAREeOq6NMfztjeOg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_BMsaMZAREeOq6NMfztjeOg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_BMsaMpAREeOq6NMfztjeOg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_BMsaM5AREeOq6NMfztjeOg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_BMsaNJAREeOq6NMfztjeOg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_BMsaNZAREeOq6NMfztjeOg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_BMsaNpAREeOq6NMfztjeOg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_BMtBQJAREeOq6NMfztjeOg">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_BMtBQZAREeOq6NMfztjeOg" name="geometry">
      <packagedElement xmi:type="uml:Class" xmi:id="_BOtMYJAREeOq6NMfztjeOg" name="JVector"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_BMtBQpAREeOq6NMfztjeOg" name="io">
      <packagedElement xmi:type="uml:Class" xmi:id="_BOtMYpAREeOq6NMfztjeOg" name="MyPrintStream"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_BOtzcZAREeOq6NMfztjeOg" name="StringConverter"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_VbkuUJAREeOq6NMfztjeOg" name="MyFileInputStream"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Vbt4QpAREeOq6NMfztjeOg" name="PrintToZip"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_BMtoUJAREeOq6NMfztjeOg" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_BMtoUZAREeOq6NMfztjeOg" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_BOtzc5AREeOq6NMfztjeOg" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BOuagZAREeOq6NMfztjeOg" name="FileNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BOuag5AREeOq6NMfztjeOg" name="FileOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BOvBkZAREeOq6NMfztjeOg" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BOvooJAREeOq6NMfztjeOg" name="PrintStream"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_BOvoopAREeOq6NMfztjeOg" name="Serializable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_ZfAHgJAREeOq6NMfztjeOg" name="ObjectOutputStream"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_BMtoUpAREeOq6NMfztjeOg" name="util">
        <packagedElement xmi:type="uml:DataType" xmi:id="_BOwPsJAREeOq6NMfztjeOg" name="Date"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_BOwPspAREeOq6NMfztjeOg" name="Iterator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BOw2wZAREeOq6NMfztjeOg" name="Observable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_BOw2w5AREeOq6NMfztjeOg" name="Random"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_VZBJkZAREeOq6NMfztjeOg" name="zip">
          <packagedElement xmi:type="uml:Class" xmi:id="_VbufUJAREeOq6NMfztjeOg" name="ZipOutputStream"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_ZfAukZAREeOq6NMfztjeOg" name="ZipException"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_VbcygJAREeOq6NMfztjeOg" name="Arrays"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_VbcygpAREeOq6NMfztjeOg" name="Observer"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_VbdZkZAREeOq6NMfztjeOg" name="Vector"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Vbgc4JAREeOq6NMfztjeOg" name="EmptyStackException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Vbgc4pAREeOq6NMfztjeOg" name="Stack"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_VblVYZAREeOq6NMfztjeOg" name="Scanner"/>
        <packagedElement xmi:type="uml:Package" xmi:id="_ZejbkJAREeOq6NMfztjeOg" name="concurrent">
          <packagedElement xmi:type="uml:Interface" xmi:id="_ZfAHgpAREeOq6NMfztjeOg" name="Executor"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_hSw-wpAREeOq6NMfztjeOg" name="ExecutorService"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_hSxl0ZAREeOq6NMfztjeOg" name="Executors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_n6uKMZAREeOq6NMfztjeOg" name="LinkedList"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_BPKfYJAREeOq6NMfztjeOg" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_BPKfYZAREeOq6NMfztjeOg" name="Runnable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Vb-W85AREeOq6NMfztjeOg" name="Object"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_VcEdkJAREeOq6NMfztjeOg" name="Cloneable"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_dOuhkJAREeOq6NMfztjeOg" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_dOvIoJAREeOq6NMfztjeOg" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_dRJjcZAREeOq6NMfztjeOg" name="ActionEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dRJjc5AREeOq6NMfztjeOg" name="ActionListener"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_dRKKgZAREeOq6NMfztjeOg" name="FocusEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_dRKKg5AREeOq6NMfztjeOg" name="FocusListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRHHMJAREeOq6NMfztjeOg" name="BorderLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRHuQZAREeOq6NMfztjeOg" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRHuQ5AREeOq6NMfztjeOg" name="Component"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRIVUZAREeOq6NMfztjeOg" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRIVU5AREeOq6NMfztjeOg" name="Font"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRI8YZAREeOq6NMfztjeOg" name="GridLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRI8Y5AREeOq6NMfztjeOg" name="Insets"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hSw-wJAREeOq6NMfztjeOg" name="Container"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_n6tjJZAREeOq6NMfztjeOg" name="List"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_BMuPYJAREeOq6NMfztjeOg" name="ui">
      <packagedElement xmi:type="uml:Class" xmi:id="_BOxd0ZAREeOq6NMfztjeOg" clientDependency="_ZfBVo5AREeOq6NMfztjeOg" name="SimulationController_UI">
        <generalization xmi:id="_ZfDx5ZAREeOq6NMfztjeOg" general="_BOw2wZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_ZfIDUJAREeOq6NMfztjeOg" name="sp" type="_BPLtgJAREeOq6NMfztjeOg" association="_ZfSbYJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_ZfIDUpAREeOq6NMfztjeOg" name="fName" visibility="private" type="_BOtzc5AREeOq6NMfztjeOg" association="_ZfSbY5AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_ZfIqYZAREeOq6NMfztjeOg" name="desiredIterations" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZfIqZJAREeOq6NMfztjeOg" name="totalVolume" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZfJRc5AREeOq6NMfztjeOg" name="simulations" visibility="private" type="_VbdZkZAREeOq6NMfztjeOg" association="_ZfTCcZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_ZfJ4gpAREeOq6NMfztjeOg" name="simulReturnIndex" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZfJ4g5AREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZfJ4hZAREeOq6NMfztjeOg" name="e" visibility="private" type="_ZfAHgpAREeOq6NMfztjeOg" association="_ZfTCdJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_ZfKfkZAREeOq6NMfztjeOg" name="ps_object" visibility="private" type="_BOvooJAREeOq6NMfztjeOg" association="_ZfTpgZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_ZfKflJAREeOq6NMfztjeOg" name="objOut" visibility="private" type="_ZfAHgJAREeOq6NMfztjeOg" association="_ZfTphJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_ZfLGoJAREeOq6NMfztjeOg" name="zip" visibility="private" type="_Vbt4QpAREeOq6NMfztjeOg" association="_ZfUQkZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_ZfLGopAREeOq6NMfztjeOg" name="totalThreads" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZfLGpJAREeOq6NMfztjeOg" name="numThreadsFinished" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZfLGpZAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZfLtsJAREeOq6NMfztjeOg" name="isRunning" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZfLtsZAREeOq6NMfztjeOg" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZfLts5AREeOq6NMfztjeOg" name="kill" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZfLttJAREeOq6NMfztjeOg" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZfLttpAREeOq6NMfztjeOg" name="UPDATE_PERCENT" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZfLtt5AREeOq6NMfztjeOg" value="&quot;update percent&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZfMUwZAREeOq6NMfztjeOg" name="MESSAGE" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZfMUwpAREeOq6NMfztjeOg" value="&quot;message: &quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZfMUxJAREeOq6NMfztjeOg" name="THREAD_COMPLETE" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZfMUxZAREeOq6NMfztjeOg" value="&quot;thread complete&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZfM70JAREeOq6NMfztjeOg" name="ALL_THREADS_COMPLETE" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZfM70ZAREeOq6NMfztjeOg" value="&quot;all threads complete&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZfM705AREeOq6NMfztjeOg" name="ALL_THREADS_KILLED" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_ZfM71JAREeOq6NMfztjeOg" value="&quot;all simulations terminated&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZfPYFpAREeOq6NMfztjeOg" name="whichFitting" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZfP_IpAREeOq6NMfztjeOg" name="currentVolume">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_ZfP_JZAREeOq6NMfztjeOg" name="ps_analysis" visibility="private" type="_BOvooJAREeOq6NMfztjeOg" association="_ZfUQlJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_XHvqUJATEeOq6NMfztjeOg" name="currentSimulation" visibility="private" type="_BN7wUJAREeOq6NMfztjeOg" association="_XH7QgJATEeOq6NMfztjeOg"/>
        <interfaceRealization xmi:id="_ZfBVo5AREeOq6NMfztjeOg" client="_BOxd0ZAREeOq6NMfztjeOg" supplier="_VbcygpAREeOq6NMfztjeOg" contract="_VbcygpAREeOq6NMfztjeOg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfOJ8JAREeOq6NMfztjeOg" name="SimulationController_UI" specification="_ZfB8sJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfOJ8ZAREeOq6NMfztjeOg" name="ssp" type="_BPLtgJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_ZfOJ8pAREeOq6NMfztjeOg" type="_BOxd0ZAREeOq6NMfztjeOg" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>sp = ssp;&#xD;
		initializeStreams();&#xD;
		simulations = new Stack&lt;Simulation>();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfOJ85AREeOq6NMfztjeOg" name="getCurrentVolume" specification="_ZetMkJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfOJ9JAREeOq6NMfztjeOg" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
          <language>java</language>
          <body>return currentVolume; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfOJ9ZAREeOq6NMfztjeOg" name="isRunning" specification="_ZetzoZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfOJ9pAREeOq6NMfztjeOg" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return isRunning;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfOJ95AREeOq6NMfztjeOg" name="initializeStreams" specification="_Zetzo5AREeOq6NMfztjeOg">
          <language>java</language>
          <body>FileOutputStream fos;&#xD;
		FileOutputStream fosObj;&#xD;
		try {&#xD;
			fos = new FileOutputStream(sp.getAnalysisFile());&#xD;
			ps_analysis = new PrintStream(fos);&#xD;
			&#xD;
			fosObj = new FileOutputStream(sp.getObjectsFile());&#xD;
			objOut = new ObjectOutputStream(fosObj);&#xD;
			zip = sp.getZipPrinter_Fits();&#xD;
		} catch (FileNotFoundException e) {&#xD;
			sp.getFolderOutput();&#xD;
			e.printStackTrace();&#xD;
		} catch (IOException e) {&#xD;
			sp.getFolderOutput();&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfOJ-JAREeOq6NMfztjeOg" name="longToTime" specification="_ZetzpJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfOJ-ZAREeOq6NMfztjeOg" name="elapsedSeconds">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ZfOJ-pAREeOq6NMfztjeOg" direction="return">
            <name xsi:nil="true"/>
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>long secondsPerMinute = 60;&#xD;
		long secondsPerHour = secondsPerMinute * 60;&#xD;
		long secondsPerDay = secondsPerHour * 24;&#xD;
		long days = elapsedSeconds / secondsPerDay;&#xD;
		elapsedSeconds -= days * secondsPerDay;&#xD;
		long hours = elapsedSeconds / secondsPerHour;&#xD;
		elapsedSeconds -= hours * secondsPerHour;&#xD;
		long minutes = elapsedSeconds / secondsPerMinute;&#xD;
		elapsedSeconds -= minutes * secondsPerMinute;&#xD;
		long seconds = elapsedSeconds;&#xD;
		return days + &quot;:&quot; + hours + &quot;:&quot; + minutes + &quot;:&quot; + seconds;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfOJ-5AREeOq6NMfztjeOg" name="kill" specification="_ZeuaspAREeOq6NMfztjeOg">
          <language>java</language>
          <body>kill = true;&#xD;
		if(simulations == null) {&#xD;
			setChanged();&#xD;
			notifyObservers(ALL_THREADS_KILLED);&#xD;
		}&#xD;
		for(int i = 0; i &lt; simulations.size(); i++) {&#xD;
			simulations.get(i).keepRunning = false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfOxAJAREeOq6NMfztjeOg" name="getNextSimulation" specification="_Zeuas5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfOxAZAREeOq6NMfztjeOg" type="_BN7wUJAREeOq6NMfztjeOg" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>if(simulReturnIndex &lt; simulations.size()) {&#xD;
			return simulations.get(simulReturnIndex++);&#xD;
		}&#xD;
		return null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfOxApAREeOq6NMfztjeOg" name="peekAtNextSimulation" specification="_ZeuatJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfOxA5AREeOq6NMfztjeOg" type="_BN7wUJAREeOq6NMfztjeOg" direction="return">
            <name xsi:nil="true"/>
          </ownedParameter>
          <language>java</language>
          <body>if(simulReturnIndex &lt; simulations.size()) {&#xD;
			return simulations.get(simulReturnIndex);&#xD;
		}&#xD;
		return null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfOxBJAREeOq6NMfztjeOg" name="initialize" specification="_ZevBwJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>isRunning = true;&#xD;
		totalThreads = 0;&#xD;
		SimulSetupParams ssp;&#xD;
		initializeStreams();&#xD;
		for(int i = 0; i &lt; sp.getNumberOfSimulationsToRun(); i ++) {&#xD;
			ssp = new SimulSetupParams();&#xD;
			ssp.copy(sp);&#xD;
			Simulation simul = new Simulation(ssp, i);&#xD;
			simulations.add(simul);&#xD;
			simul.addObserver(this);&#xD;
			totalVolume = simul.getTotalVolume();&#xD;
			totalThreads++;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfOxBZAREeOq6NMfztjeOg" name="print" specification="_ZfCjxpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfOxBpAREeOq6NMfztjeOg" name="ps" type="_BOvooJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_ZfOxB5AREeOq6NMfztjeOg" name="toPrint">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>ps.print(toPrint);&#xD;
		ps.flush();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfOxCJAREeOq6NMfztjeOg" name="println" specification="_ZfDK0JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfOxCZAREeOq6NMfztjeOg" name="ps" type="_BOvooJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_ZfOxCpAREeOq6NMfztjeOg" name="toPrint">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>ps.println(toPrint);&#xD;
		ps.flush();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfOxC5AREeOq6NMfztjeOg" name="writeObject" specification="_ZfG1MJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfOxDJAREeOq6NMfztjeOg" name="oos" type="_ZfAHgJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_ZfOxDZAREeOq6NMfztjeOg" name="o" type="_Vb-W85AREeOq6NMfztjeOg"/>
          <language>java</language>
          <body>oos.writeObject(o);&#xD;
		oos.flush();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfOxDpAREeOq6NMfztjeOg" name="closeStreams" specification="_ZevBwZAREeOq6NMfztjeOg">
          <language>java</language>
          <body>zip.closeStream();&#xD;
		objOut.close();&#xD;
		ps_analysis.close();&#xD;
		sp.nullify();&#xD;
		for(Simulation simul : simulations)&#xD;
			simul.closeStreams();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfPYEJAREeOq6NMfztjeOg" name="analyze" specification="_Zevo0JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfPYEZAREeOq6NMfztjeOg" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>Simulation curSimul = simulations.get(index);&#xD;
		if(curSimul.keepRunning) {&#xD;
			String excel = &quot;&quot;;		&#xD;
			&#xD;
			setChanged();		&#xD;
			notifyObservers(new String[] {MESSAGE, &quot;Analyzing simulation...&quot;});&#xD;
			&#xD;
			Analysis a = new Analysis(sp.getFittingType());&#xD;
			// set up zip printer?&#xD;
			a.zipPrinter = zip;&#xD;
			FittableParametersOptions whichFixed = sp.getFittableParameterSelection();&#xD;
			&#xD;
			setChanged();&#xD;
			notifyObservers(new String[] {MESSAGE, &quot;Fitting with: &quot; + whichFixed.name()});&#xD;
			&#xD;
			DimensionalityOptions dimensionalitySelection = sp.getDimensionalitySelection();&#xD;
			&#xD;
			setChanged();&#xD;
			notifyObservers(new String[] {MESSAGE, &quot;Fix n method: &quot; + dimensionalitySelection.name()});&#xD;
			&#xD;
			a.setPrintStream(curSimul.getPrintStream());&#xD;
			excel = a.analyze(curSimul, whichFixed, dimensionalitySelection);&#xD;
			if(excel.compareTo(&quot;bad&quot;) != 0) {&#xD;
				print(ps_analysis, excel);&#xD;
			} else {&#xD;
				println(ps_analysis, excel);&#xD;
			}&#xD;
			notifyObservers(&quot;Analysis complete. Written to file: &quot; + sp.getAnalysisFile().getAbsolutePath());&#xD;
			curSimul.getSample().setLatticeToNull();&#xD;
			setChanged();&#xD;
			notifyObservers(&quot;Writing simulation object to file: &quot; + sp.getObjectsFile().getAbsolutePath());&#xD;
			curSimul.nullify();&#xD;
			curSimul.deleteObservers();&#xD;
			writeObject(objOut, curSimul);&#xD;
		}&#xD;
		numThreadsFinished++;&#xD;
		checkIsDone();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfPYEpAREeOq6NMfztjeOg" name="checkIsDone" specification="_Zevo0pAREeOq6NMfztjeOg">
          <language>java</language>
          <body>if(numThreadsFinished == totalThreads) {&#xD;
			try {&#xD;
				closeStreams();&#xD;
			} catch (ZipException e) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e.printStackTrace();&#xD;
			} catch (IOException e) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
			setChanged();&#xD;
			if(kill) {&#xD;
				isRunning = false;&#xD;
				notifyObservers(ALL_THREADS_KILLED);&#xD;
			} else {&#xD;
				isRunning = false;&#xD;
				notifyObservers(ALL_THREADS_COMPLETE);&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ZfPYE5AREeOq6NMfztjeOg" name="update" specification="_ZfDK05AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfPYFJAREeOq6NMfztjeOg" name="arg0" type="_BOw2wZAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_ZfPYFZAREeOq6NMfztjeOg" name="arg1" type="_Vb-W85AREeOq6NMfztjeOg"/>
          <language>java</language>
          <body>if(arg0 instanceof Simulation) {&#xD;
			Simulation s = (Simulation) arg0;&#xD;
			if(arg1 instanceof String[]) {&#xD;
				String[] complexMessage = (String[]) arg1;&#xD;
				if(complexMessage[0].compareTo(Simulation.SIMULATION_COMPLETE) == 0) {&#xD;
					try {&#xD;
						analyze(s.getSimulationIndex());&#xD;
					} catch (IOException e) {&#xD;
						e.printStackTrace();&#xD;
					}&#xD;
					setChanged();&#xD;
					notifyObservers(new String[] {THREAD_COMPLETE, numThreadsFinished + &quot;&quot;});&#xD;
				}  else if(complexMessage[0].compareTo(Simulation.UPDATE_PERCENT) == 0 &amp;&amp; !kill) {&#xD;
					setChanged();&#xD;
					notifyObservers(new String[] {UPDATE_PERCENT, complexMessage[1] + &quot;&quot;});&#xD;
				} else if(complexMessage[0].compareTo(Simulation.MESSAGE) == 0) {&#xD;
					setChanged();&#xD;
					notifyObservers(complexMessage);&#xD;
				}&#xD;
			} else if(arg1 instanceof String) {&#xD;
				String message = (String) arg1;&#xD;
				if(message.compareTo(Simulation.SIMULATION_KILLED) == 0) {&#xD;
					numThreadsFinished++;&#xD;
					checkIsDone();&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_ZetMkJAREeOq6NMfztjeOg" name="getCurrentVolume" method="_ZfOJ85AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZetzoJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ZetzoZAREeOq6NMfztjeOg" name="isRunning" method="_ZfOJ9ZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZetzopAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Zetzo5AREeOq6NMfztjeOg" name="initializeStreams" method="_ZfOJ95AREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_ZetzpJAREeOq6NMfztjeOg" name="longToTime" visibility="private" method="_ZfOJ-JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZeuasJAREeOq6NMfztjeOg" name="elapsedSeconds">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
          <ownedParameter xmi:id="_ZeuasZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ZeuaspAREeOq6NMfztjeOg" name="kill" method="_ZfOJ-5AREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_Zeuas5AREeOq6NMfztjeOg" name="getNextSimulation" method="_ZfOxAJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfCjxJAREeOq6NMfztjeOg" type="_BN7wUJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ZeuatJAREeOq6NMfztjeOg" name="peekAtNextSimulation" method="_ZfOxApAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfCjxZAREeOq6NMfztjeOg" type="_BN7wUJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ZevBwJAREeOq6NMfztjeOg" name="initialize" method="_ZfOxBJAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_ZevBwZAREeOq6NMfztjeOg" name="closeStreams" method="_ZfOxDpAREeOq6NMfztjeOg" raisedException="_ZfAukZAREeOq6NMfztjeOg _BOvBkZAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_Zevo0JAREeOq6NMfztjeOg" name="analyze" method="_ZfPYEJAREeOq6NMfztjeOg" raisedException="_BOvBkZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Zevo0ZAREeOq6NMfztjeOg" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Zevo0pAREeOq6NMfztjeOg" name="checkIsDone" visibility="private" method="_ZfPYEpAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_ZfB8sJAREeOq6NMfztjeOg" name="SimulationController_UI" method="_ZfOJ8JAREeOq6NMfztjeOg" raisedException="_BOvBkZAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_ZfCjwZAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_ZfCjwpAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_ZfCjwJAREeOq6NMfztjeOg" name="ssp" type="_BPLtgJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_ZfCjw5AREeOq6NMfztjeOg" type="_BOxd0ZAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ZfCjxpAREeOq6NMfztjeOg" name="print" method="_ZfOxBZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfCjx5AREeOq6NMfztjeOg" name="ps" type="_BOvooJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_ZfCjyJAREeOq6NMfztjeOg" name="toPrint">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ZfDK0JAREeOq6NMfztjeOg" name="println" method="_ZfOxCJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfDK0ZAREeOq6NMfztjeOg" name="ps" type="_BOvooJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_ZfDK0pAREeOq6NMfztjeOg" name="toPrint">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_ZfDK05AREeOq6NMfztjeOg" name="update" method="_ZfPYE5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfDx4JAREeOq6NMfztjeOg" name="arg0" type="_BOw2wZAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_ZfDx4ZAREeOq6NMfztjeOg" name="arg1" type="_Vb-W85AREeOq6NMfztjeOg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_ZfG1MJAREeOq6NMfztjeOg" name="writeObject" method="_ZfOxC5AREeOq6NMfztjeOg" raisedException="_BOvBkZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_ZfG1MZAREeOq6NMfztjeOg" name="oos" type="_ZfAHgJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_ZfG1MpAREeOq6NMfztjeOg" name="o" type="_Vb-W85AREeOq6NMfztjeOg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_ZfSbYJAREeOq6NMfztjeOg" name="" memberEnd="_ZfSbYZAREeOq6NMfztjeOg _ZfIDUJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_ZfSbYZAREeOq6NMfztjeOg" name="" type="_BOxd0ZAREeOq6NMfztjeOg" association="_ZfSbYJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_ZfSbY5AREeOq6NMfztjeOg" name="" memberEnd="_ZfSbZJAREeOq6NMfztjeOg _ZfIDUpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_ZfSbZJAREeOq6NMfztjeOg" name="" type="_BOxd0ZAREeOq6NMfztjeOg" association="_ZfSbY5AREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_ZfTCcZAREeOq6NMfztjeOg" name="" memberEnd="_ZfTCcpAREeOq6NMfztjeOg _ZfJRc5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_ZfTCcpAREeOq6NMfztjeOg" name="" type="_BOxd0ZAREeOq6NMfztjeOg" association="_ZfTCcZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_ZfTCdJAREeOq6NMfztjeOg" name="" memberEnd="_ZfTCdZAREeOq6NMfztjeOg _ZfJ4hZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_ZfTCdZAREeOq6NMfztjeOg" name="" type="_BOxd0ZAREeOq6NMfztjeOg" association="_ZfTCdJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_ZfTpgZAREeOq6NMfztjeOg" name="" memberEnd="_ZfTpgpAREeOq6NMfztjeOg _ZfKfkZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_ZfTpgpAREeOq6NMfztjeOg" name="" type="_BOxd0ZAREeOq6NMfztjeOg" association="_ZfTpgZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_ZfTphJAREeOq6NMfztjeOg" name="" memberEnd="_ZfTphZAREeOq6NMfztjeOg _ZfKflJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_ZfTphZAREeOq6NMfztjeOg" name="" type="_BOxd0ZAREeOq6NMfztjeOg" association="_ZfTphJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_ZfUQkZAREeOq6NMfztjeOg" name="" memberEnd="_ZfUQkpAREeOq6NMfztjeOg _ZfLGoJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_ZfUQkpAREeOq6NMfztjeOg" name="" type="_BOxd0ZAREeOq6NMfztjeOg" association="_ZfUQkZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_ZfUQlJAREeOq6NMfztjeOg" name="" memberEnd="_ZfUQlZAREeOq6NMfztjeOg _ZfP_JZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_ZfUQlZAREeOq6NMfztjeOg" name="" type="_BOxd0ZAREeOq6NMfztjeOg" association="_ZfUQlJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_dPA1cJAREeOq6NMfztjeOg" clientDependency="_dRQRIJAREeOq6NMfztjeOg" name="UI">
        <generalization xmi:id="_dRpStZAREeOq6NMfztjeOg" general="_dRMmxJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRs9EJAREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dRs9EZAREeOq6NMfztjeOg" value="-2276152899197003090L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dRtkIJAREeOq6NMfztjeOg" name="pnlMain" visibility="private" type="_dRNN05AREeOq6NMfztjeOg" association="_dSDiYJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRtkIpAREeOq6NMfztjeOg" name="pnlTab" visibility="private" type="_dROb8ZAREeOq6NMfztjeOg" association="_dSDiY5AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRtkJJAREeOq6NMfztjeOg" name="simPanel" visibility="private" type="_dRh98JAREeOq6NMfztjeOg" association="_dSEJcZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRuLMZAREeOq6NMfztjeOg" name="currentParams" visibility="private" type="_BPLtgJAREeOq6NMfztjeOg" association="_dSEJdJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRuLM5AREeOq6NMfztjeOg" name="pnlSettings" visibility="private" type="_dRNN05AREeOq6NMfztjeOg" association="_dSEwgZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRuLNZAREeOq6NMfztjeOg" name="pnlParams" visibility="private" type="_dRNN05AREeOq6NMfztjeOg" association="_dSEwhJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRuyQZAREeOq6NMfztjeOg" name="pnlRates" visibility="private" type="_dRNN05AREeOq6NMfztjeOg" association="_dSFXkJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRuyQ5AREeOq6NMfztjeOg" name="pnlSampleUnitsSpherical" visibility="private" type="_dRNN05AREeOq6NMfztjeOg" association="_dSFXk5AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRvZUJAREeOq6NMfztjeOg" name="txtRate1" visibility="private" type="_dRPDAJAREeOq6NMfztjeOg" association="_dSFXlpAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRvZU5AREeOq6NMfztjeOg" name="lblRate1" visibility="private" type="_dRNN0ZAREeOq6NMfztjeOg" association="_dSF-oZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRwAYZAREeOq6NMfztjeOg" name="txtUnits1" visibility="private" type="_dRPDAJAREeOq6NMfztjeOg" association="_dSF-pJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRwAZJAREeOq6NMfztjeOg" name="lblUnits1" visibility="private" type="_dRNN0ZAREeOq6NMfztjeOg" association="_dSGlsZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRwncpAREeOq6NMfztjeOg" name="lblApproxVolume" visibility="private" type="_dRNN0ZAREeOq6NMfztjeOg" association="_dSGltJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRwndJAREeOq6NMfztjeOg" name="messages" visibility="private" type="_dROb85AREeOq6NMfztjeOg" association="_dSHMwZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRxOgZAREeOq6NMfztjeOg" name="scroll" visibility="private" type="_dRN045AREeOq6NMfztjeOg" association="_dSHMxJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRxOg5AREeOq6NMfztjeOg" name="txtFileRoot" visibility="private" type="_dRPDAJAREeOq6NMfztjeOg" association="_dSHz0ZAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dRxOhJAREeOq6NMfztjeOg" value="new JTextField(10)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dRx1kJAREeOq6NMfztjeOg" name="txtNumThreads" visibility="private" type="_dRPDAJAREeOq6NMfztjeOg" association="_dSHz1JAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dRx1kZAREeOq6NMfztjeOg" value="new JTextField(5)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dRx1k5AREeOq6NMfztjeOg" name="txtDeltaT" visibility="private" type="_dRPDAJAREeOq6NMfztjeOg" association="_dSIa4ZAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dRx1lJAREeOq6NMfztjeOg" value="new JTextField(5)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dRx1lpAREeOq6NMfztjeOg" name="txtFixedN" visibility="private" type="_dRPDAJAREeOq6NMfztjeOg" association="_dSIa5JAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dRycoJAREeOq6NMfztjeOg" value="new JTextField(5)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dRycopAREeOq6NMfztjeOg" name="txtFixedK" visibility="private" type="_dRPDAJAREeOq6NMfztjeOg" association="_dSIa55AREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dRyco5AREeOq6NMfztjeOg" value="new JTextField(5)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dRycpZAREeOq6NMfztjeOg" name="btnRunSimulation" visibility="private" type="_dRL_sZAREeOq6NMfztjeOg" association="_dSJB8ZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRzDsZAREeOq6NMfztjeOg" name="badEntryColor" visibility="private" type="_dRHuQZAREeOq6NMfztjeOg" association="_dSJB9JAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dRzDspAREeOq6NMfztjeOg" value="Color.YELLOW"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dRzDtJAREeOq6NMfztjeOg" name="okEntryColor" visibility="private" type="_dRHuQZAREeOq6NMfztjeOg" association="_dSJpAZAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dRzDtZAREeOq6NMfztjeOg" value="txtFileRoot.getBackground()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dRzDt5AREeOq6NMfztjeOg" name="uneditable" visibility="private" type="_dRHuQZAREeOq6NMfztjeOg" association="_dSJpBJAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dRzqwJAREeOq6NMfztjeOg" value="Color.GRAY"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dRzqwpAREeOq6NMfztjeOg" name="nucOrientSet" visibility="private" type="_dPIKMpAREeOq6NMfztjeOg" association="_dSKQEZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dRzqxJAREeOq6NMfztjeOg" name="btnOrientationSettings" visibility="private" type="_dRL_sZAREeOq6NMfztjeOg" association="_dSKQFJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dR0R0JAREeOq6NMfztjeOg" name="numProcessorsToUse" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_dR0R0ZAREeOq6NMfztjeOg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_dR80sJAREeOq6NMfztjeOg" name="pnlSampleUnitsCubic" visibility="private" type="_dRNN05AREeOq6NMfztjeOg" association="_dSK3IJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dR80s5AREeOq6NMfztjeOg" name="pnlSampleUnitsCylindrical" visibility="private" type="_dRNN05AREeOq6NMfztjeOg" association="_dSK3I5AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dR9bwJAREeOq6NMfztjeOg" name="txtRate2" visibility="private" type="_dRPDAJAREeOq6NMfztjeOg" association="_dSLeMJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dR9bw5AREeOq6NMfztjeOg" name="txtRate3" visibility="private" type="_dRPDAJAREeOq6NMfztjeOg" association="_dSLeM5AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dR9bxpAREeOq6NMfztjeOg" name="lblRate2" visibility="private" type="_dRNN0ZAREeOq6NMfztjeOg" association="_dSLeNpAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dR-C0pAREeOq6NMfztjeOg" name="lblRate3" visibility="private" type="_dRNN0ZAREeOq6NMfztjeOg" association="_dSMFQZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dR-C1ZAREeOq6NMfztjeOg" name="txtUnits2" visibility="private" type="_dRPDAJAREeOq6NMfztjeOg" association="_dSMFRJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dR-p4ZAREeOq6NMfztjeOg" name="txtUnits3" visibility="private" type="_dRPDAJAREeOq6NMfztjeOg" association="_dSMsUZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dR-p5JAREeOq6NMfztjeOg" name="lblUnits2" visibility="private" type="_dRNN0ZAREeOq6NMfztjeOg" association="_dSMsVJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_dR-p55AREeOq6NMfztjeOg" name="lblUnits3" visibility="private" type="_dRNN0ZAREeOq6NMfztjeOg" association="_dSNTYJAREeOq6NMfztjeOg"/>
        <interfaceRealization xmi:id="_dRQRIJAREeOq6NMfztjeOg" client="_dPA1cJAREeOq6NMfztjeOg" supplier="_VbcygpAREeOq6NMfztjeOg" contract="_VbcygpAREeOq6NMfztjeOg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR38MJAREeOq6NMfztjeOg" name="UI" specification="_dPCDkJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR38MZAREeOq6NMfztjeOg" type="_dPA1cJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>currentParams = new SimulSetupParams();&#xD;
		setup();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR38MpAREeOq6NMfztjeOg" name="setup" specification="_dPDRsJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>pnlMain = new JPanel();&#xD;
		pnlTab = new JTabbedPane();&#xD;
		pnlTab.addTab(&quot;Simulation Settings&quot;, setupSettings());&#xD;
		pnlMain.setLayout(new BorderLayout());&#xD;
		pnlMain.add(pnlTab, BorderLayout.CENTER);&#xD;
		pnlMain.add(setupMessageWindow(), BorderLayout.SOUTH);&#xD;
		&#xD;
		JScrollPane scroll = new JScrollPane(pnlMain);&#xD;
		scroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);&#xD;
		scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);&#xD;
		&#xD;
		add(scroll);&#xD;
		setDefaultCloseOperation(EXIT_ON_CLOSE);&#xD;
		updateParamValues();&#xD;
		setSize(1500, 1000);&#xD;
		pack();&#xD;
		setVisible(true);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR38M5AREeOq6NMfztjeOg" name="getSpacer" specification="_dRkaMJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR38NJAREeOq6NMfztjeOg" name="d" type="_dRIVUZAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_dR38NZAREeOq6NMfztjeOg" type="_dRNN0ZAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>JLabel spacer = new JLabel();&#xD;
		spacer.setMaximumSize(d);&#xD;
		spacer.setSize(spacer.getMaximumSize());&#xD;
		return spacer;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR38NpAREeOq6NMfztjeOg" name="setupMessageWindow" specification="_dPDRsZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR38N5AREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>//		Box box = Box.createHorizontalBox();&#xD;
		messages = new JTextArea(15, 50);&#xD;
		messages.setMargin(new Insets(0, 5, 0, 5));&#xD;
		scroll = new JScrollPane(messages);&#xD;
		scroll.setVisible(true);&#xD;
		scroll.setSize(messages.getSize());&#xD;
//		box.add(scroll);&#xD;
//		box.add(Box.createHorizontalGlue());&#xD;
		return scroll;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR38OJAREeOq6NMfztjeOg" name="setupSettings" specification="_dPDRspAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR38OZAREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>pnlSettings = new JPanel();&#xD;
		pnlSettings.setLayout(new BorderLayout());&#xD;
		pnlSettings.add(setupParameters(), BorderLayout.EAST);&#xD;
		JPanel pnlInput = new JPanel();&#xD;
		pnlInput.setLayout(new BoxLayout(pnlInput, BoxLayout.Y_AXIS));&#xD;
		/*JLabel lbl = new JLabel();&#xD;
		lbl.setText(&quot;Press Enter after modifying a value.&quot;);&#xD;
		Font f = lbl.getFont();&#xD;
		lbl.setFont(new Font(f.getName(), Font.BOLD, 16));&#xD;
		lbl.setForeground(Color.blue);&#xD;
		pnlInput.add(lbl);*/&#xD;
		pnlInput.add(setupNucleation());&#xD;
		JPanel pnl = new JPanel();&#xD;
		pnl.setLayout(new BoxLayout(pnl, BoxLayout.X_AXIS));&#xD;
		pnl.add(setupSample());&#xD;
		pnl.add(setupSimulationEndConditions());&#xD;
		pnl.add(setupDimensionalityOptions());&#xD;
		pnlInput.add(pnl);&#xD;
		Box boxH = Box.createHorizontalBox();&#xD;
		boxH.add(setupMiscOptions());&#xD;
		boxH.add(setupFittingParameters());&#xD;
		pnlInput.add(boxH);&#xD;
		pnl = new JPanel();&#xD;
		pnl.setLayout(new BoxLayout(pnl, BoxLayout.X_AXIS));&#xD;
		pnl.add(setupFileIO());&#xD;
		pnl.add(setupSimulationExecutionPanel());&#xD;
		pnlInput.add(pnl);&#xD;
		pnlSettings.add(pnlInput, BorderLayout.CENTER);&#xD;
		return pnlSettings;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR4jQJAREeOq6NMfztjeOg" name="setupSimulationExecutionPanel" specification="_dPD4wJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR4jQZAREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>Box box = Box.createVerticalBox();&#xD;
		&#xD;
		box.setBorder(getBoldTitledBorder(&quot;Simulation Execution&quot;, true, Color.GRAY));&#xD;
		&#xD;
		btnRunSimulation = new JButton(&quot;Run Simulation&quot;);&#xD;
		Font f = btnRunSimulation.getFont();&#xD;
		btnRunSimulation.setFont(new Font(f.getName(), Font.BOLD, 24));&#xD;
		btnRunSimulation.setMaximumSize(btnRunSimulation.getPreferredSize());&#xD;
		btnRunSimulation.addActionListener(new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent arg0) {&#xD;
				try {&#xD;
					launch();&#xD;
				} catch (IOException e) {&#xD;
					e.printStackTrace();&#xD;
				}&#xD;
			}&#xD;
		});&#xD;
		Box box1 = Box.createHorizontalBox();&#xD;
		box1.add(btnRunSimulation);&#xD;
//		box1.add(Box.createHorizontalGlue());&#xD;
		box.add(box1);&#xD;
		box.add(Box.createVerticalStrut(10));&#xD;
		simPanel = new RunningSimulationPanel();&#xD;
		simPanel.addObserver(this);&#xD;
		box.add(simPanel.getBox());&#xD;
		return box;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR4jQpAREeOq6NMfztjeOg" name="setupSimulationEndConditions" specification="_dPD4wZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR4jQ5AREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>JPanel pnl = new JPanel();&#xD;
		JPanel[] pnls = {new JPanel(), new JPanel(), new JPanel() };&#xD;
		&#xD;
		pnl.setBorder(getBoldTitledBorder(&quot;Simulation End Conditions&quot;, true, Color.GRAY));&#xD;
		&#xD;
		pnl.setLayout(new BoxLayout(pnl, BoxLayout.Y_AXIS));&#xD;
		pnls[0].setLayout(new GridLayout(1, 2));&#xD;
		pnls[1].setLayout(new GridLayout(1, 2));&#xD;
		final String[] labels = {&quot;Fraction Transformed&quot;, &quot;Time Elapsed&quot;, &quot;After&quot;};&#xD;
		final JTextField[] fields = {new JTextField(5), new JTextField(5), new JTextField(5) };&#xD;
		fields[0].setMaximumSize(fields[0].getPreferredSize());&#xD;
		fields[0].setText(&quot;1.0&quot;);&#xD;
		fields[1].setMaximumSize(fields[1].getPreferredSize());&#xD;
		fields[2].setMaximumSize(fields[2].getPreferredSize());&#xD;
		&#xD;
		fields[0].addFocusListener(new DataTypeChecker(DataTypeChecker.DOUBLE, 0, 1));&#xD;
		fields[1].addFocusListener(new DataTypeChecker(DataTypeChecker.INTEGER, 1, -1));&#xD;
		fields[2].addFocusListener(new DataTypeChecker(DataTypeChecker.INTEGER, 1, -1));&#xD;
		&#xD;
		ActionListener listener = new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent arg0) {&#xD;
				JRadioButton btn = (JRadioButton) arg0.getSource();&#xD;
				String s = btn.getText();&#xD;
				int idx = 0;&#xD;
				for(int i = 0; i &lt; labels.length; i++) {&#xD;
					fields[i].setEnabled(false);&#xD;
					fields[i].setBackground(uneditable);&#xD;
					if(labels[i].compareTo(s) == 0) {&#xD;
						idx = i;&#xD;
						fields[i].setEnabled(true);&#xD;
						fields[i].setBackground(okEntryColor);&#xD;
					}&#xD;
				}&#xD;
				currentParams.setTerm(Termination.values()[idx]);&#xD;
				message(&quot;Termination type: &quot; + currentParams.getTerm()+ &quot; has been updated.&quot;);&#xD;
			}&#xD;
		};&#xD;
		ButtonGroup group = new ButtonGroup();&#xD;
		JRadioButton btn = null;&#xD;
		for(int i = 0; i &lt; labels.length; i++) {&#xD;
			btn = new JRadioButton(labels[i]);&#xD;
			btn.addActionListener(listener);&#xD;
			if(i == 0) { btn.setSelected(true); }&#xD;
			group.add(btn);&#xD;
			pnls[i].add(btn);&#xD;
			if(i == 0) {&#xD;
				listener.actionPerformed(new ActionEvent(btn, 0, &quot;&quot;));&#xD;
			}&#xD;
			if(i == 2) {&#xD;
				pnls[i].add(getSpacer(new Dimension(15, 5)));&#xD;
			}&#xD;
			pnls[i].add(fields[i]);&#xD;
		}&#xD;
		fields[0].addFocusListener(new DataTypeChecker(DataTypeChecker.DOUBLE, 0, 1));&#xD;
		fields[0].addFocusListener(new FocusListener() {&#xD;
&#xD;
			double previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
					currentParams.setTermVal(newVal);&#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Termination value: &quot; + currentParams.getTermVal() + &quot; has been updated.&quot;);&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
		});&#xD;
		FocusListener focus = new FocusListener() {&#xD;
&#xD;
			int previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Integer.parseInt(((JTextField) e.getSource()).getText());&#xD;
					currentParams.setTermVal(newVal);&#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Termination value: &quot; + currentParams.getTermVal() + &quot; has been updated.&quot;);&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Integer.parseInt(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
		};&#xD;
			&#xD;
		fields[1].addFocusListener(focus);&#xD;
		fields[1].addFocusListener(new DataTypeChecker(DataTypeChecker.INTEGER, 0, Double.MAX_VALUE));&#xD;
		fields[2].addFocusListener(focus);&#xD;
		fields[2].addFocusListener(new DataTypeChecker(DataTypeChecker.INTEGER, 0, Double.MAX_VALUE));&#xD;
		JLabel lbl = new JLabel(&quot;crystals have nucleated.&quot;);&#xD;
		pnls[2].add(getSpacer(new Dimension(15, 5)));&#xD;
		pnls[2].add(lbl);&#xD;
		pnl.add(pnls[0]);&#xD;
		pnl.add(pnls[1]);&#xD;
		pnl.add(pnls[2]);&#xD;
		pnl.setMaximumSize(pnl.getPreferredSize());&#xD;
		return pnl;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR4jRJAREeOq6NMfztjeOg" name="setupFileIO" specification="_dPD4wpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR4jRZAREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>JPanel pnlMain = new JPanel();&#xD;
		pnlMain.setBorder(getBoldTitledBorder(&quot;File I/O&quot;, true, Color.GRAY));&#xD;
		&#xD;
		Box boxMain = Box.createVerticalBox();&#xD;
		final JLabel lblXYZ = new JLabel(currentParams.getXYZsFolder().toString()),&#xD;
				lblMovie= new JLabel(currentParams.getMoviesFile().toString()),&#xD;
				lblZip= new JLabel(currentParams.getZipFile().toString()),&#xD;
				lblTrans= new JLabel(currentParams.getTransformationsFolder().toString()),&#xD;
				lblObj= new JLabel(currentParams.getObjectsFile().toString());&#xD;
		&#xD;
		final String[] btnLabels = {&quot;Y&quot;, &quot;N&quot;};&#xD;
		int spacerSize = 15;&#xD;
		// output folder&#xD;
		{&#xD;
			Box box = Box.createHorizontalBox();&#xD;
			&#xD;
			JButton btn = new JButton(&quot;Set output folder&quot;);&#xD;
&#xD;
			final JLabel lbl = new JLabel(currentParams.getFolderOutput().getAbsolutePath());&#xD;
			&#xD;
			btn.addActionListener(new ActionListener() {&#xD;
				@Override&#xD;
				public void actionPerformed(ActionEvent e) {&#xD;
					JFileChooser fc = new JFileChooser(currentParams.getFolderOutput());&#xD;
					fc.setMultiSelectionEnabled(false);&#xD;
					fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);&#xD;
					int returnVal = fc.showSaveDialog(null);&#xD;
					if(returnVal == JFileChooser.APPROVE_OPTION) {&#xD;
						currentParams.setFolderOutput(fc.getSelectedFile());&#xD;
						lbl.setText(currentParams.getFolderOutput().getAbsolutePath());&#xD;
					}&#xD;
				}&#xD;
			});&#xD;
&#xD;
			box.add(btn);&#xD;
			box.add(Box.createHorizontalStrut(spacerSize));&#xD;
			box.add(lbl);&#xD;
			box.add(Box.createHorizontalGlue());&#xD;
&#xD;
			box.add(Box.createHorizontalGlue());&#xD;
			&#xD;
			boxMain.add(box);&#xD;
		}&#xD;
		{&#xD;
			Box box = Box.createHorizontalBox();&#xD;
			&#xD;
			JLabel lbl = new JLabel(&quot;Project file root&quot;);&#xD;
			txtFileRoot.setText(currentParams.getCurrentFileRoot());&#xD;
			txtFileRoot.addFocusListener(new FocusListener() {&#xD;
&#xD;
				String previousVal = &quot;&quot;, newVal, defaultVal = &quot;CrystallizationSimulation&quot;;&#xD;
				@Override&#xD;
				public void focusLost(FocusEvent e) {&#xD;
					try {&#xD;
						newVal = ((JTextField) e.getSource()).getText();&#xD;
						if(previousVal.compareTo(&quot;&quot;) == 0) &#xD;
							previousVal = newVal;&#xD;
						if(previousVal.compareTo(newVal) != 0) {&#xD;
							if(newVal.compareTo(&quot;&quot;) == 0) {&#xD;
								newVal = defaultVal;&#xD;
								((JTextField) e.getSource()).setText(defaultVal);&#xD;
							}&#xD;
							currentParams.setCurrentFileRoot(newVal);&#xD;
							lblXYZ.setText(currentParams.getXYZsFolder().getName());&#xD;
							lblMovie.setText(currentParams.getMoviesFile().getName());&#xD;
							lblZip.setText(currentParams.getZipFile().getName());&#xD;
							lblTrans.setText(currentParams.getTransformationsFolder().getName());&#xD;
							lblObj.setText(currentParams.getObjectsFile().getName());&#xD;
							message(&quot;Project file root updated to: &quot; + newVal);&#xD;
							updateParamValues();&#xD;
						}&#xD;
					}&#xD;
					catch (NumberFormatException nfe) {&#xD;
						((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
					}&#xD;
				}&#xD;
				@Override&#xD;
				public void focusGained(FocusEvent e) { &#xD;
					previousVal = ((JTextField) e.getSource()).getText();&#xD;
					((JTextField) e.getSource()).selectAll(); &#xD;
				}&#xD;
			});&#xD;
			box.add(lbl);&#xD;
			box.add(Box.createHorizontalStrut(spacerSize));&#xD;
			box.add(txtFileRoot);&#xD;
			box.add(Box.createHorizontalGlue());&#xD;
&#xD;
			boxMain.add(box);&#xD;
		}&#xD;
		{&#xD;
			Box box = Box.createHorizontalBox();&#xD;
			box.add(new JLabel(&quot;Output options: &quot;));&#xD;
			box.add(Box.createHorizontalGlue());&#xD;
			boxMain.add(box);&#xD;
		}&#xD;
		&#xD;
		// xyz folder&#xD;
		{&#xD;
			Box box = Box.createHorizontalBox();&#xD;
			ButtonGroup grp1 = new ButtonGroup();&#xD;
			JCheckBox chk1 = new JCheckBox(btnLabels[0]);&#xD;
			JCheckBox chk2 = new JCheckBox(btnLabels[1]);&#xD;
&#xD;
			ActionListener al1 = new ActionListener() {&#xD;
				@Override&#xD;
				public void actionPerformed(ActionEvent e) {&#xD;
					JCheckBox chk = (JCheckBox) e.getSource();&#xD;
					if(chk.getText().compareTo(btnLabels[0]) == 0 &amp;&amp; !currentParams.isOutputtingXyz()) {&#xD;
						currentParams.setXyz(true);&#xD;
						message(&quot;Structure output enabled.&quot;);&#xD;
					} else if(chk.getText().compareTo(btnLabels[1]) == 0 &amp;&amp; currentParams.isOutputtingXyz()){&#xD;
						currentParams.setXyz(false);&#xD;
						message(&quot;Structure output disabled&quot;);&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
			&#xD;
			grp1.add(chk1);&#xD;
			grp1.add(chk2);&#xD;
			&#xD;
			chk1.addActionListener(al1);&#xD;
			chk2.addActionListener(al1);&#xD;
			if(currentParams.isOutputtingXyz()) {&#xD;
				chk1.setSelected(true);&#xD;
			} else {&#xD;
				chk2.setSelected(true);&#xD;
			}&#xD;
&#xD;
			box.add(chk1);&#xD;
			box.add(Box.createHorizontalStrut(spacerSize));&#xD;
			box.add(chk2);&#xD;
			box.add(Box.createHorizontalStrut(spacerSize));&#xD;
			box.add(lblXYZ);&#xD;
&#xD;
			box.add(Box.createHorizontalGlue());&#xD;
			&#xD;
			boxMain.add(box);&#xD;
		}&#xD;
			&#xD;
		// movie folder&#xD;
		{&#xD;
			Box box = Box.createHorizontalBox();&#xD;
			ButtonGroup grp1 = new ButtonGroup();&#xD;
			JCheckBox chk1 = new JCheckBox(btnLabels[0]);&#xD;
			JCheckBox chk2 = new JCheckBox(btnLabels[1]);&#xD;
&#xD;
			ActionListener al1 = new ActionListener() {&#xD;
				@Override&#xD;
				public void actionPerformed(ActionEvent e) {&#xD;
					JCheckBox chk = (JCheckBox) e.getSource();&#xD;
					if(chk.getText().compareTo(btnLabels[0]) == 0 &amp;&amp; !currentParams.isOutputtingMovie()) {&#xD;
						currentParams.setMovie(true);&#xD;
						message(&quot;Movie output enabled.&quot;);&#xD;
					} else if(chk.getText().compareTo(btnLabels[1]) == 0 &amp;&amp; currentParams.isOutputtingMovie()){&#xD;
						currentParams.setMovie(false);&#xD;
						message(&quot;Movie output disabled&quot;);&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
			&#xD;
			grp1.add(chk1);&#xD;
			grp1.add(chk2);&#xD;
			&#xD;
			chk1.addActionListener(al1);&#xD;
			chk2.addActionListener(al1);&#xD;
			if(currentParams.isOutputtingMovie()) {&#xD;
				chk1.setSelected(true);&#xD;
			} else {&#xD;
				chk2.setSelected(true);&#xD;
			}&#xD;
&#xD;
			box.add(chk1);&#xD;
			box.add(Box.createHorizontalStrut(spacerSize));&#xD;
			box.add(chk2);&#xD;
			box.add(Box.createHorizontalStrut(spacerSize));&#xD;
			box.add(lblMovie);&#xD;
			box.add(Box.createHorizontalGlue());&#xD;
&#xD;
			boxMain.add(box);&#xD;
		}&#xD;
		&#xD;
		// fitting folder&#xD;
		{&#xD;
			Box box = Box.createHorizontalBox();&#xD;
			ButtonGroup grp1 = new ButtonGroup();&#xD;
			JCheckBox chk1 = new JCheckBox(btnLabels[0]);&#xD;
			JCheckBox chk2 = new JCheckBox(btnLabels[1]);&#xD;
&#xD;
			ActionListener al1 = new ActionListener() {&#xD;
				@Override&#xD;
				public void actionPerformed(ActionEvent e) {&#xD;
					JCheckBox chk = (JCheckBox) e.getSource();&#xD;
					if(chk.getText().compareTo(btnLabels[0]) == 0 &amp;&amp; !currentParams.isFit()) {&#xD;
						currentParams.setFit(true);&#xD;
						message(&quot;Fitting output enabled.&quot;);&#xD;
					} else if(chk.getText().compareTo(btnLabels[1]) == 0 &amp;&amp; currentParams.isFit()){&#xD;
						currentParams.setFit(false);&#xD;
						message(&quot;Fitting output disabled&quot;);&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
			&#xD;
			grp1.add(chk1);&#xD;
			grp1.add(chk2);&#xD;
			&#xD;
			chk1.addActionListener(al1);&#xD;
			chk2.addActionListener(al1);&#xD;
			if(currentParams.isFit()) {&#xD;
				chk1.setSelected(true);&#xD;
			} else {&#xD;
				chk2.setSelected(true);&#xD;
			}&#xD;
&#xD;
			box.add(chk1);&#xD;
			box.add(Box.createHorizontalStrut(spacerSize));&#xD;
			box.add(chk2);&#xD;
			box.add(Box.createHorizontalStrut(spacerSize));&#xD;
			box.add(lblZip);&#xD;
			box.add(Box.createHorizontalGlue());&#xD;
&#xD;
			boxMain.add(box);&#xD;
		}&#xD;
		&#xD;
		// java objects folder&#xD;
		{&#xD;
			Box box = Box.createHorizontalBox();&#xD;
			ButtonGroup grp1 = new ButtonGroup();&#xD;
			JCheckBox chk1 = new JCheckBox(btnLabels[0]);&#xD;
			JCheckBox chk2 = new JCheckBox(btnLabels[1]);&#xD;
&#xD;
			ActionListener al1 = new ActionListener() {&#xD;
				@Override&#xD;
				public void actionPerformed(ActionEvent e) {&#xD;
					JCheckBox chk = (JCheckBox) e.getSource();&#xD;
					if(chk.getText().compareTo(btnLabels[0]) == 0 &amp;&amp; !currentParams.isObj()) {&#xD;
						currentParams.setObj(true);&#xD;
						message(&quot;Java objects output enabled.&quot;);&#xD;
					} else if(chk.getText().compareTo(btnLabels[1]) == 0 &amp;&amp; currentParams.isObj()){&#xD;
						currentParams.setObj(false);&#xD;
						message(&quot;Java objects output disabled&quot;);&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
			&#xD;
			grp1.add(chk1);&#xD;
			grp1.add(chk2);&#xD;
			&#xD;
			chk1.addActionListener(al1);&#xD;
			chk2.addActionListener(al1);&#xD;
			if(currentParams.isObj()) {&#xD;
				chk1.setSelected(true);&#xD;
			} else {&#xD;
				chk2.setSelected(true);&#xD;
			}&#xD;
&#xD;
			box.add(chk1);&#xD;
			box.add(Box.createHorizontalStrut(spacerSize));&#xD;
			box.add(chk2);&#xD;
			box.add(Box.createHorizontalStrut(spacerSize));&#xD;
			box.add(lblObj);&#xD;
			box.add(Box.createHorizontalGlue());&#xD;
&#xD;
			boxMain.add(box);&#xD;
		}&#xD;
		&#xD;
		// transformation output folder&#xD;
		{&#xD;
			Box box = Box.createHorizontalBox();&#xD;
			ButtonGroup grp1 = new ButtonGroup();&#xD;
			JCheckBox chk1 = new JCheckBox(btnLabels[0]);&#xD;
			JCheckBox chk2 = new JCheckBox(btnLabels[1]);&#xD;
&#xD;
			ActionListener al1 = new ActionListener() {&#xD;
				@Override&#xD;
				public void actionPerformed(ActionEvent e) {&#xD;
					JCheckBox chk = (JCheckBox) e.getSource();&#xD;
					if(chk.getText().compareTo(btnLabels[0]) == 0 &amp;&amp; !currentParams.isTransformed()) {&#xD;
						currentParams.setTransformed(true);&#xD;
						message(&quot;Transformation output enabled.&quot;);&#xD;
					} else if(chk.getText().compareTo(btnLabels[1]) == 0 &amp;&amp; currentParams.isTransformed()){&#xD;
						currentParams.setTransformed(false);&#xD;
						message(&quot;Transformation output disabled&quot;);&#xD;
					}&#xD;
				}&#xD;
			};&#xD;
			&#xD;
			grp1.add(chk1);&#xD;
			grp1.add(chk2);&#xD;
			&#xD;
			chk1.addActionListener(al1);&#xD;
			chk2.addActionListener(al1);&#xD;
			if(currentParams.isTransformed()) {&#xD;
				chk1.setSelected(true);&#xD;
			} else {&#xD;
				chk2.setSelected(true);&#xD;
			}&#xD;
&#xD;
			box.add(chk1);&#xD;
			box.add(Box.createHorizontalStrut(spacerSize));&#xD;
			box.add(chk2);&#xD;
			box.add(Box.createHorizontalStrut(spacerSize));&#xD;
			box.add(lblTrans);&#xD;
			box.add(Box.createHorizontalGlue());&#xD;
&#xD;
			boxMain.add(box);&#xD;
		}&#xD;
		lblXYZ.setText(currentParams.getXYZsFolder().getName());&#xD;
		lblMovie.setText(currentParams.getMoviesFile().getName());&#xD;
		lblZip.setText(currentParams.getZipFile().getName());&#xD;
		lblTrans.setText(currentParams.getTransformationsFolder().getName());&#xD;
		lblObj.setText(currentParams.getObjectsFile().getName());&#xD;
		pnlMain.add(boxMain);&#xD;
		return pnlMain;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR4jRpAREeOq6NMfztjeOg" name="setupSample" specification="_dPEf0JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR4jR5AREeOq6NMfztjeOg" type="_dRHuQ5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>Box boxMain = Box.createVerticalBox();&#xD;
		boxMain.setBorder(getBoldTitledBorder(&quot;Sample Volume&quot;, true, Color.GRAY));&#xD;
		Box box2 = Box.createHorizontalBox();&#xD;
		box2.add(setupSampleShape());&#xD;
		box2.add(Box.createHorizontalStrut(10));&#xD;
		box2.add(setupSampleUnits());&#xD;
		boxMain.add(box2);&#xD;
		&#xD;
		return boxMain;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR4jSJAREeOq6NMfztjeOg" name="setUnitsVisibility" specification="_dPEf0ZAREeOq6NMfztjeOg">
          <language>java</language>
          <body>switch(currentParams.getSampleShape()) {&#xD;
		case Cubic:&#xD;
			lblUnits1.setText(&quot;a&quot;);&#xD;
			lblUnits2.setText(&quot;&quot;);&#xD;
			lblUnits3.setText(&quot;&quot;);&#xD;
			txtUnits1.setEnabled(true);&#xD;
			txtUnits2.setEnabled(false);&#xD;
			txtUnits3.setEnabled(false);&#xD;
			break;&#xD;
		case Tetragonal:&#xD;
			lblUnits1.setText(&quot;a&quot;);&#xD;
			lblUnits2.setText(&quot;&quot;);&#xD;
			lblUnits3.setText(&quot;c&quot;);&#xD;
			txtUnits1.setEnabled(true);&#xD;
			txtUnits2.setEnabled(false);&#xD;
			txtUnits3.setEnabled(true);&#xD;
			break;&#xD;
		case Orthorhombic:&#xD;
			lblUnits1.setText(&quot;a&quot;);&#xD;
			lblUnits2.setText(&quot;b&quot;);&#xD;
			lblUnits3.setText(&quot;c&quot;);&#xD;
			txtUnits1.setEnabled(true);&#xD;
			txtUnits2.setEnabled(true);&#xD;
			txtUnits3.setEnabled(true);&#xD;
			break;&#xD;
		case Cylindrical:&#xD;
			lblUnits1.setText(&quot;r&quot;);&#xD;
			lblUnits2.setText(&quot;&quot;);&#xD;
			lblUnits3.setText(&quot;h&quot;);&#xD;
			txtUnits1.setEnabled(true);&#xD;
			txtUnits2.setEnabled(false);&#xD;
			txtUnits3.setEnabled(true);&#xD;
			break;&#xD;
		case Spherical:&#xD;
			lblUnits1.setText(&quot;r&quot;);&#xD;
			lblUnits2.setText(&quot;&quot;);&#xD;
			lblUnits3.setText(&quot;&quot;);&#xD;
			txtUnits1.setEnabled(true);&#xD;
			txtUnits2.setEnabled(false);&#xD;
			txtUnits3.setEnabled(false);&#xD;
			break;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR4jSZAREeOq6NMfztjeOg" name="setupFittingParameters" specification="_dPEf0pAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR4jSpAREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>JPanel pnlMain = new JPanel();&#xD;
		pnlMain.setBorder(getBoldTitledBorder(&quot;Fitting Parameters&quot;, true, Color.GRAY));&#xD;
		pnlMain.setLayout(new GridLayout(0, 3));&#xD;
		&#xD;
		ActionListener al = new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent arg0) {&#xD;
				if(arg0.getSource() instanceof JToggleButton) {&#xD;
					JToggleButton tog = (JToggleButton) arg0.getSource();&#xD;
					String togName = tog.getName();&#xD;
					String togText = tog.getText();&#xD;
					FittableParametersOptions option = FittableParametersOptions.valueOf(togName);&#xD;
&#xD;
					currentParams.setFittableParameterSelection(option);&#xD;
					message(&quot;Fitting type set to: &quot; + togText);&#xD;
					updateParamValues();&#xD;
				}&#xD;
			}&#xD;
		};&#xD;
		ButtonGroup bg = new ButtonGroup();&#xD;
		for(FittableParametersOptions options : FittableParametersOptions.values()) {&#xD;
			JToggleButton tog = new JToggleButton(options.toString());&#xD;
			tog.setName(options.name());&#xD;
			tog.addActionListener(al);&#xD;
			bg.add(tog);&#xD;
			pnlMain.add(tog);&#xD;
		}&#xD;
		&#xD;
		for(Component comp : pnlMain.getComponents()) {&#xD;
			String compName = comp.getName();&#xD;
			if(FittableParametersOptions.valueOf(compName) == currentParams.getFittableParameterSelection())&#xD;
				((JToggleButton) comp).doClick();&#xD;
		}&#xD;
		&#xD;
		return pnlMain;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR4jS5AREeOq6NMfztjeOg" name="setupDimensionalityOptions" specification="_dPEf05AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR4jTJAREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>JPanel pnlMain = new JPanel();&#xD;
		pnlMain.setBorder(getBoldTitledBorder(&quot;Dimensionality&quot;, true, Color.GRAY));&#xD;
		Box box = Box.createVerticalBox();&#xD;
		&#xD;
		ActionListener al = new ActionListener() {&#xD;
			@Override&#xD;
			public void actionPerformed(ActionEvent arg0) {&#xD;
				if(arg0.getSource() instanceof JToggleButton) {&#xD;
					JToggleButton tog = (JToggleButton) arg0.getSource();&#xD;
					String togName = tog.getName();&#xD;
					String togText = tog.getText();&#xD;
					DimensionalityOptions option = DimensionalityOptions.valueOf(togName);&#xD;
&#xD;
					currentParams.setDimensionalitySelection(option);&#xD;
					message(&quot;Fitting type set to: &quot; + togText);&#xD;
					updateParamValues();&#xD;
				}&#xD;
			}&#xD;
		};&#xD;
		ButtonGroup bg = new ButtonGroup();&#xD;
		for(DimensionalityOptions options : DimensionalityOptions.values()) {&#xD;
			JToggleButton tog = new JToggleButton(options.toString());&#xD;
			tog.setName(options.name());&#xD;
			tog.addActionListener(al);&#xD;
			bg.add(tog);&#xD;
			Box box1 = Box.createHorizontalBox();&#xD;
			box1.add(tog);&#xD;
			box.add(box1);&#xD;
		}&#xD;
//		for(Component comp : box.getComponents()) {&#xD;
//			String compName = comp.getName();&#xD;
//			if(DimensionalityOptions.valueOf(compName) == currentParams.getDimensionalitySelection())&#xD;
//				((JToggleButton) comp).doClick();&#xD;
//		}&#xD;
		pnlMain.add(box);&#xD;
		pnlMain.setMaximumSize(pnlMain.getPreferredSize());&#xD;
		return pnlMain;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5KUJAREeOq6NMfztjeOg" name="setupMiscOptions" specification="_dPFG4JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR5KUZAREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>Box boxMain = Box.createVerticalBox();&#xD;
		boxMain.setBorder(getBoldTitledBorder(&quot;Misc Options&quot;, true, Color.GRAY));&#xD;
		Box box2 = Box.createHorizontalBox();&#xD;
		Box box3 = Box.createHorizontalBox();&#xD;
		Box box4 = Box.createHorizontalBox();&#xD;
		&#xD;
		txtNumThreads = new JTextField(5);&#xD;
		txtNumThreads.setText(currentParams.getNumberOfSimulationsToRun() + &quot;&quot;);&#xD;
		txtNumThreads.setMaximumSize(txtNumThreads.getPreferredSize());&#xD;
		txtNumThreads.addFocusListener(new DataTypeChecker(DataTypeChecker.INTEGER, 1, Integer.MAX_VALUE));&#xD;
		txtNumThreads.addFocusListener(new FocusListener() {&#xD;
&#xD;
			int previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Integer.parseInt(((JTextField) e.getSource()).getText());&#xD;
					currentParams.setNumberOfSimulationsToRun(newVal);&#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Number of threads set to: &quot; + newVal);&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Integer.parseInt(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
		});&#xD;
		JLabel lblNumThreads = new JLabel(&quot;Number of simulations to compute with these selected parameters.&quot;);&#xD;
		&#xD;
		box2.add(txtNumThreads);&#xD;
		box2.add(Box.createHorizontalStrut(10));&#xD;
		box2.add(lblNumThreads);&#xD;
		box2.add(Box.createHorizontalGlue());&#xD;
&#xD;
		txtDeltaT = new JTextField(5);&#xD;
		txtDeltaT.setText(currentParams.getTimeStep() + &quot;&quot;);&#xD;
		txtDeltaT.setMaximumSize(txtDeltaT.getPreferredSize());&#xD;
		txtDeltaT.addFocusListener(new DataTypeChecker(DataTypeChecker.DOUBLE, 0, Double.MAX_VALUE));&#xD;
		txtDeltaT.addFocusListener(new FocusListener() {&#xD;
&#xD;
			double previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
					currentParams.setTimeStep(newVal);&#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Delta t set to: &quot; + newVal);&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
&#xD;
		});&#xD;
		box3.add(txtDeltaT);&#xD;
		box3.add(Box.createHorizontalStrut(10));&#xD;
		box3.add(new JLabel(&quot;Delta t&quot;));&#xD;
		box3.add(Box.createHorizontalGlue());&#xD;
		&#xD;
&#xD;
		txtFixedN = new JTextField(5);&#xD;
		txtFixedN.setText(currentParams.getInit_n() + &quot;&quot;);&#xD;
		txtFixedN.setMaximumSize(txtFixedN.getPreferredSize());&#xD;
		txtFixedN.addFocusListener(new DataTypeChecker(DataTypeChecker.DOUBLE, 0, Double.MAX_VALUE));&#xD;
		txtFixedN.addFocusListener(new FocusListener() {&#xD;
&#xD;
			double previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
					currentParams.setInit_n(newVal);&#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Initial n set to: &quot; + newVal);&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
&#xD;
		});&#xD;
		box4.add(new JLabel(&quot;Fixed n = &quot;));&#xD;
		box4.add(Box.createHorizontalStrut(10));&#xD;
		box4.add(txtFixedN);&#xD;
		box4.add(Box.createHorizontalStrut(10));&#xD;
		&#xD;
		txtFixedK = new JTextField(5);&#xD;
		txtFixedK.setText(currentParams.getInit_k_factor() + &quot;&quot;);&#xD;
		txtFixedK.setMaximumSize(txtFixedK.getPreferredSize());&#xD;
		txtFixedK.addFocusListener(new DataTypeChecker(DataTypeChecker.DOUBLE, 0, Double.MAX_VALUE));&#xD;
		txtFixedK.addFocusListener(new FocusListener() {&#xD;
&#xD;
			double previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
					currentParams.setInit_k_factor(newVal);&#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Initial k factor set to: &quot; + newVal);&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
&#xD;
		});&#xD;
		box4.add(new JLabel(&quot;initial k = v_pb / V^0.333 * &quot;));&#xD;
		box4.add(Box.createHorizontalStrut(10));&#xD;
		box4.add(txtFixedK);&#xD;
		box4.add(Box.createHorizontalGlue());&#xD;
		&#xD;
		boxMain.add(Box.createVerticalStrut(10));&#xD;
		boxMain.add(box2);&#xD;
		boxMain.add(Box.createVerticalStrut(10));&#xD;
		boxMain.add(box3);&#xD;
		boxMain.add(Box.createVerticalStrut(10));&#xD;
		boxMain.add(box4);&#xD;
		return boxMain;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5KUpAREeOq6NMfztjeOg" name="setupSampleUnits" specification="_dPFG4ZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR5KU5AREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>Box box = Box.createVerticalBox();&#xD;
		box.setBorder(getBoldTitledBorder(&quot;Sample Axes&quot;, false, Color.LIGHT_GRAY));&#xD;
		Box box1 = Box.createHorizontalBox();&#xD;
		box1.add(setupUnits());&#xD;
		setUnitsVisibility();&#xD;
		box.add(box1);&#xD;
		box.add(Box.createVerticalStrut(5));&#xD;
		box.add(setupSampleVolume());&#xD;
		box.setMaximumSize(box.getPreferredSize());&#xD;
		return box;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5KVJAREeOq6NMfztjeOg" name="setupSampleVolume" specification="_dPFG4pAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR5KVZAREeOq6NMfztjeOg" type="_dRHuQ5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>Box box = Box.createHorizontalBox();&#xD;
		int approxVolume = currentParams.getApproxVolume();&#xD;
		box.add(new JLabel(&quot;Vol: &quot;));&#xD;
		lblApproxVolume = new JLabel(approxVolume + &quot;&quot;);&#xD;
		box.add(Box.createHorizontalStrut(5));&#xD;
		box.add(lblApproxVolume);&#xD;
		box.add(Box.createHorizontalGlue());&#xD;
		return box;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5KVpAREeOq6NMfztjeOg" name="setupUnits" specification="_dPFG45AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR5KV5AREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>JPanel pnlMain = new JPanel();&#xD;
		&#xD;
		pnlMain.setLayout(new GridLayout(3, 2));&#xD;
		&#xD;
		lblUnits1 = new JLabel(&quot;1&quot;, JLabel.CENTER);&#xD;
		lblUnits2 = new JLabel(&quot;2&quot;, JLabel.CENTER);&#xD;
		lblUnits3 = new JLabel(&quot;3&quot;, JLabel.CENTER);&#xD;
		&#xD;
		txtUnits1 = new JTextField(5);&#xD;
		txtUnits2 = new JTextField(5);&#xD;
		txtUnits3 = new JTextField(5);&#xD;
		&#xD;
		txtUnits1.setMaximumSize(txtUnits1.getPreferredSize());&#xD;
		txtUnits2.setMaximumSize(txtUnits2.getPreferredSize());&#xD;
		txtUnits3.setMaximumSize(txtUnits3.getPreferredSize());&#xD;
&#xD;
		txtUnits1.setText(&quot;&quot; + currentParams.getSampleUnitsPerAxis()[0]);&#xD;
		txtUnits2.setText(&quot;&quot; + currentParams.getSampleUnitsPerAxis()[1]);&#xD;
		txtUnits3.setText(&quot;&quot; + currentParams.getSampleUnitsPerAxis()[2]);&#xD;
&#xD;
		// TODO Fix this so that it looks the same as the crystallite growth rates&#xD;
		pnlMain.add(lblUnits1);&#xD;
		pnlMain.add(txtUnits1);&#xD;
		pnlMain.add(lblUnits2);&#xD;
		pnlMain.add(txtUnits2);&#xD;
		pnlMain.add(lblUnits3);&#xD;
		pnlMain.add(txtUnits3);&#xD;
		&#xD;
		txtUnits1.addFocusListener(new FocusListener() {&#xD;
&#xD;
			int previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Integer.parseInt(((JTextField) e.getSource()).getText());&#xD;
					currentParams.getSampleUnitsPerAxis()[0] = newVal;&#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Sample size dimension a updated to: &quot; + newVal);&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Integer.parseInt(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
		});&#xD;
		&#xD;
		txtUnits2.addFocusListener(new FocusListener() {&#xD;
&#xD;
			int previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Integer.parseInt(((JTextField) e.getSource()).getText());&#xD;
					currentParams.getSampleUnitsPerAxis()[1] = newVal;&#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Sample size dimension a updated to: &quot; + newVal);&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Integer.parseInt(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
		});&#xD;
		txtUnits3.addFocusListener(new FocusListener() {&#xD;
&#xD;
			int previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Integer.parseInt(((JTextField) e.getSource()).getText());&#xD;
					currentParams.getSampleUnitsPerAxis()[2] = newVal;&#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Sample size dimension a updated to: &quot; + newVal);&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Integer.parseInt(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
		});&#xD;
		return pnlMain;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5KWJAREeOq6NMfztjeOg" name="setupSampleShape" specification="_dPFt8JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR5KWZAREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>JPanel pnl = new JPanel();&#xD;
		pnl.setLayout(new BoxLayout(pnl, BoxLayout.Y_AXIS));&#xD;
		pnl.setBorder(getBoldTitledBorder(&quot;Sample Shape&quot;, false, Color.LIGHT_GRAY));&#xD;
		pnl.setSize(pnl.getPreferredSize());&#xD;
		ShapeTypes[] types = ShapeTypes.values();&#xD;
		ButtonGroup btnCrystalShapes = new ButtonGroup();&#xD;
		JRadioButton btn;&#xD;
		ActionListener listener = new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				JRadioButton btn = (JRadioButton) e.getSource();&#xD;
				currentParams.setSampleShape(ShapeTypes.valueOf(btn.getText()));&#xD;
				message(&quot;Sample volume shape selection: &quot; + currentParams.getSampleShape() + &quot; has been updated.&quot;);&#xD;
				&#xD;
				//setRateVisibility();&#xD;
				setUnitsVisibility();&#xD;
			}	&#xD;
		};&#xD;
		for(int i = 0; i &lt; types.length; i++) {&#xD;
			btn = new JRadioButton(types[i].toString());&#xD;
			btn.addActionListener(listener);&#xD;
			btnCrystalShapes.add(btn);&#xD;
			pnl.add(btn);&#xD;
			if(types[i].equals(currentParams.getSampleShape())) {&#xD;
				btn.setSelected(true);	&#xD;
			}&#xD;
		}&#xD;
		return pnl;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5KWpAREeOq6NMfztjeOg" name="setupParameters" specification="_dPFt8ZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR5KW5AREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>pnlParams = new JPanel();&#xD;
		pnlParams.setBorder(getBoldTitledBorder(&quot;Current Parameters&quot;, true, Color.GRAY));&#xD;
		Box box = Box.createHorizontalBox();&#xD;
		box.add(paramLabels());&#xD;
		box.add(Box.createHorizontalStrut(10));&#xD;
		box.add(paramValues());&#xD;
		return pnlParams;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5KXJAREeOq6NMfztjeOg" name="updateParamValues" specification="_dPFt8pAREeOq6NMfztjeOg">
          <language>java</language>
          <body>pnlParams.removeAll();		&#xD;
		Box box = Box.createHorizontalBox();&#xD;
		box.add(paramLabels());&#xD;
		box.add(Box.createHorizontalStrut(10));&#xD;
		box.add(paramValues());&#xD;
		pnlParams.add(box);&#xD;
		repaint();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5KXZAREeOq6NMfztjeOg" name="paramLabels" specification="_dPFt85AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR5KXpAREeOq6NMfztjeOg" type="_dRKxkpAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>String s = &quot;&quot;;&#xD;
		Box box = Box.createVerticalBox();&#xD;
		int height = 2;&#xD;
		&#xD;
		// labels&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		Box boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		boxH.add(new JLabel(&quot;Number of seed crystals&quot;));&#xD;
		box.add(boxH);&#xD;
&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		boxH.add(new JLabel(&quot;Maximum number of crystallites in simulation&quot;));&#xD;
		box.add(boxH);&#xD;
		&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Probability of continuous nucleation&quot;));&#xD;
		box.add(boxH);&#xD;
&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Delta t&quot;));&#xD;
		box.add(boxH);&#xD;
&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Fixed n&quot;));&#xD;
		box.add(boxH);&#xD;
		&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Orientation strategy of nucleation events&quot;));&#xD;
		box.add(boxH);&#xD;
		&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Location strategy of nucleation events&quot;));&#xD;
		box.add(boxH);&#xD;
		&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Geometric shape of nucleation events&quot;));&#xD;
		box.add(boxH);&#xD;
		&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		switch(currentParams.getNucShape()) {&#xD;
		case Cubic:&#xD;
			s = &quot;(a, a, a)&quot;;&#xD;
			break;&#xD;
		case Tetragonal:&#xD;
			s = &quot;(a, a, c)&quot;;&#xD;
			break;&#xD;
		case Orthorhombic:&#xD;
			s = &quot;(a, b, c)&quot;;&#xD;
			break;&#xD;
		case Cylindrical:&#xD;
			s = &quot;(r, r, h)&quot;;&#xD;
			break;&#xD;
		case Spherical:&#xD;
			s = &quot;(r, r, r)&quot;;&#xD;
			break;&#xD;
		}&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Axial growth rates &quot; + s));&#xD;
		box.add(boxH);&#xD;
		&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Simulation termination conditions&quot;));&#xD;
		box.add(boxH);&#xD;
		&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Sample bounding shape&quot;));&#xD;
		box.add(boxH);&#xD;
		&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		switch(currentParams.getSampleShape()) {&#xD;
		case Cubic:&#xD;
		case Tetragonal:&#xD;
		case Orthorhombic:&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			boxH.add(new JLabel(&quot;Alignment axis 1&quot;));&#xD;
			box.add(boxH);&#xD;
			&#xD;
			boxH = Box.createHorizontalBox();&#xD;
			boxH.add(Box.createHorizontalGlue());&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			boxH.add(new JLabel(&quot;Alignment axis 2&quot;));&#xD;
			box.add(boxH);&#xD;
			&#xD;
			boxH = Box.createHorizontalBox();&#xD;
			boxH.add(Box.createHorizontalGlue());&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			boxH.add(new JLabel(&quot;Alignment axis 3&quot;));&#xD;
			box.add(boxH);&#xD;
			&#xD;
			boxH = Box.createHorizontalBox();&#xD;
			boxH.add(Box.createHorizontalGlue());&#xD;
			break;&#xD;
		case Cylindrical:&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			boxH.add(new JLabel(&quot;Cylindrical axis&quot;));&#xD;
			box.add(boxH);&#xD;
			&#xD;
			boxH = Box.createHorizontalBox();&#xD;
			boxH.add(Box.createHorizontalGlue());&#xD;
			break;&#xD;
		case Spherical:&#xD;
			break;&#xD;
		}&#xD;
&#xD;
		switch(currentParams.getSampleShape()) {&#xD;
		case Cubic:&#xD;
			s = &quot;(a)&quot;;&#xD;
		case Tetragonal:&#xD;
			s = &quot;(a, c)&quot;;&#xD;
		case Orthorhombic:&#xD;
			s = &quot;(a, b, c)&quot;;&#xD;
			break;&#xD;
		case Cylindrical:&#xD;
			s = &quot;(r, r, h)&quot;;&#xD;
			break;&#xD;
		case Spherical:&#xD;
			s = &quot;(r, r, r)&quot;;&#xD;
			break;&#xD;
		}&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Units per axis &quot; + s));&#xD;
		box.add(boxH);&#xD;
		&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Output enabled&quot;));&#xD;
		box.add(boxH);&#xD;
		&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		if(currentParams.isOutput()) {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			boxH.add(new JLabel(&quot;Output folder location&quot;));&#xD;
			box.add(boxH);&#xD;
			&#xD;
			boxH = Box.createHorizontalBox();&#xD;
			boxH.add(Box.createHorizontalGlue());&#xD;
		}&#xD;
&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Structure output enabled&quot;));&#xD;
		box.add(boxH);&#xD;
		&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		if(currentParams.isOutputtingXyz()) {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			boxH.add(new JLabel(&quot;Structure output folder&quot;));&#xD;
			box.add(boxH);&#xD;
			&#xD;
			boxH = Box.createHorizontalBox();&#xD;
			boxH.add(Box.createHorizontalGlue());&#xD;
			&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			boxH.add(new JLabel(&quot;Current structure output location&quot;));&#xD;
			box.add(boxH);&#xD;
			&#xD;
			boxH = Box.createHorizontalBox();&#xD;
			boxH.add(Box.createHorizontalGlue());&#xD;
		}&#xD;
		&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Fitting output enabled&quot;));&#xD;
		box.add(boxH);&#xD;
		&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		if(currentParams.isOutput()) {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			boxH.add(new JLabel(&quot;Fitting output folder&quot;));&#xD;
			box.add(boxH);&#xD;
			&#xD;
			boxH = Box.createHorizontalBox();&#xD;
			boxH.add(Box.createHorizontalGlue());&#xD;
		}&#xD;
&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Movie output enabled&quot;));&#xD;
		box.add(boxH);&#xD;
		&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		if(currentParams.isOutputtingMovie()) {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			boxH.add(new JLabel(&quot;Movie output folder&quot;));&#xD;
			box.add(boxH);&#xD;
			&#xD;
			boxH = Box.createHorizontalBox();&#xD;
			boxH.add(Box.createHorizontalGlue());&#xD;
		}&#xD;
&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH.add(new JLabel(&quot;Java object output enabled&quot;));&#xD;
		box.add(boxH);&#xD;
		&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		if(currentParams.isObj()) {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			boxH.add(new JLabel(&quot;Java object output folder&quot;));&#xD;
			box.add(boxH);&#xD;
			&#xD;
			boxH = Box.createHorizontalBox();&#xD;
			boxH.add(Box.createHorizontalGlue());&#xD;
		}&#xD;
&#xD;
		if(currentParams.isTransformed()) {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			boxH.add(new JLabel(&quot;Current transformation data file name&quot;));&#xD;
			box.add(boxH);&#xD;
			&#xD;
			boxH = Box.createHorizontalBox();&#xD;
			boxH.add(Box.createHorizontalGlue());&#xD;
		}&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		boxH = Box.createHorizontalBox();&#xD;
		boxH.add(Box.createHorizontalGlue());&#xD;
		boxH.add(new JLabel(&quot;Fittable Parameters&quot;));&#xD;
		box.add(boxH);&#xD;
		return box;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5xYJAREeOq6NMfztjeOg" name="paramValues" specification="_dPGVAJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR5xYZAREeOq6NMfztjeOg" type="_dRKxkpAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>String s = &quot;&quot;;&#xD;
		Box box = Box.createVerticalBox();&#xD;
		// seed crystals&#xD;
		int height = 2;&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		box.add(new JLabel(&quot;&quot; + currentParams.getNucInitVal()));&#xD;
		// max crystallites&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		box.add(new JLabel(&quot;&quot; + currentParams.getMaxNumCrystals()));&#xD;
		// subsequent nucleation&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		box.add(new JLabel(&quot;&quot; + currentParams.getNucContVal()));&#xD;
		// delta t&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		box.add(new JLabel(&quot;&quot; + currentParams.getTimeStep()));&#xD;
		// initial n&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		box.add(new JLabel(&quot;&quot; + currentParams.getInit_n()));&#xD;
		// nucleation orientation&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		box.add(new JLabel(&quot;&quot; + currentParams.getNucOrient()));&#xD;
&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		box.add(new JLabel(&quot;&quot; + currentParams.getNucLoc()));&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		box.add(new JLabel(&quot;&quot; + currentParams.getNucShape()));&#xD;
		double ra = currentParams.getAxialGrowthRates()[0];&#xD;
		double rb = currentParams.getAxialGrowthRates()[1];&#xD;
		double rc = currentParams.getAxialGrowthRates()[2];&#xD;
		double[] newAxialGrowthRates = new double[] {ra, rb, rc};&#xD;
		switch(currentParams.getNucShape()) {&#xD;
		case Cubic:&#xD;
			newAxialGrowthRates = new double[] {ra, ra, ra};&#xD;
			s = &quot;(&quot; + ra + &quot;, &quot; + ra + &quot;, &quot; + ra + &quot;)&quot;;&#xD;
			break;&#xD;
		case Tetragonal:&#xD;
			newAxialGrowthRates = new double[] {ra, ra, rc};&#xD;
			s = &quot;(&quot; + ra + &quot;, &quot; + ra + &quot;, &quot; + rc + &quot;)&quot;;&#xD;
			break;&#xD;
		case Orthorhombic:&#xD;
			newAxialGrowthRates = new double[] {ra, rb, rc};&#xD;
			s = &quot;(&quot; + ra + &quot;, &quot; + rb + &quot;, &quot; + rc + &quot;)&quot;;&#xD;
			break;&#xD;
		case Cylindrical:&#xD;
			newAxialGrowthRates = new double[] {ra, ra, rc};&#xD;
			s = &quot;(&quot; + ra + &quot;, &quot; + ra + &quot;, &quot; + rc + &quot;)&quot;;&#xD;
			break;&#xD;
		case Spherical:&#xD;
			newAxialGrowthRates = new double[] {ra, ra, ra};&#xD;
			s = &quot;(&quot; + ra + &quot;, &quot; + ra + &quot;, &quot; + ra + &quot;)&quot;;&#xD;
			break;&#xD;
		}&#xD;
		if(!(txtRate1 == null || txtRate2 == null || txtRate3 == null)) {&#xD;
			txtRate1.setText(newAxialGrowthRates[0] + &quot;&quot;);&#xD;
			txtRate2.setText(newAxialGrowthRates[1] + &quot;&quot;);&#xD;
			txtRate3.setText(newAxialGrowthRates[2] + &quot;&quot;);&#xD;
		}&#xD;
		currentParams.setAxialGrowthRates(newAxialGrowthRates);&#xD;
		if(lblApproxVolume != null) {&#xD;
			lblApproxVolume.setText(currentParams.getApproxVolume() + &quot;&quot;);&#xD;
		}&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		box.add(new JLabel(&quot;&quot; + s));&#xD;
&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		box.add(new JLabel(&quot;&quot; + currentParams.getTerm() + &quot;(&quot; + currentParams.getTermVal().toString() + &quot;)&quot;));&#xD;
&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		box.add(new JLabel(&quot;&quot; + currentParams.getSampleShape()));&#xD;
&#xD;
		switch(currentParams.getSampleShape()) {&#xD;
		case Cubic:&#xD;
		case Tetragonal:&#xD;
		case Orthorhombic:&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(&quot;&quot; + currentParams.getSampleUnitAxes()[0].toString()));&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(&quot;&quot; + currentParams.getSampleUnitAxes()[1].toString()));&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(&quot;&quot; + currentParams.getSampleUnitAxes()[2].toString()));&#xD;
			break;&#xD;
		case Cylindrical:&#xD;
			currentParams.getSampleUnitAxes()[2] = JVector.z;&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(&quot;&quot; + currentParams.getSampleUnitAxes()[0].toString()));&#xD;
			break;&#xD;
		case Spherical:&#xD;
			break;&#xD;
		}&#xD;
&#xD;
		int a = currentParams.getSampleUnitsPerAxis()[0];&#xD;
		int b = currentParams.getSampleUnitsPerAxis()[1];&#xD;
		int c = currentParams.getSampleUnitsPerAxis()[2];&#xD;
		int[] newSampleUnitsPerAxis = new int[] {a, b, c};&#xD;
		switch(currentParams.getSampleShape()) {&#xD;
		case Cubic:&#xD;
			newSampleUnitsPerAxis = new int[] {a, a, a};&#xD;
			s = &quot;(&quot; + a + &quot;, &quot; + a + &quot;, &quot; + a + &quot;)&quot;;&#xD;
			break;&#xD;
		case Tetragonal:&#xD;
			newSampleUnitsPerAxis = new int[] {a, a, c};&#xD;
			s = &quot;(&quot; + a + &quot;, &quot; + a + &quot;, &quot; + c + &quot;)&quot;;&#xD;
			break;&#xD;
		case Orthorhombic:&#xD;
			newSampleUnitsPerAxis = new int[] {a, b, c};&#xD;
			s = &quot;(&quot; + a + &quot;, &quot; + b + &quot;, &quot; + c + &quot;)&quot;;&#xD;
			break;&#xD;
		case Cylindrical:&#xD;
			newSampleUnitsPerAxis = new int[] {a, a, c};&#xD;
			s = &quot;(&quot; + a + &quot;, &quot; + a + &quot;, &quot; + c + &quot;)&quot;;&#xD;
			break;&#xD;
		case Spherical:&#xD;
			newSampleUnitsPerAxis = new int[] {a, a, a};&#xD;
			s = &quot;(&quot; + a + &quot;, &quot; + a + &quot;, &quot; + a + &quot;)&quot;;&#xD;
			break;&#xD;
		}&#xD;
		if(!(txtUnits1 == null || txtUnits2 == null || txtUnits3 == null)) {&#xD;
			txtUnits1.setText(newSampleUnitsPerAxis[0] + &quot;&quot;);&#xD;
			txtUnits2.setText(newSampleUnitsPerAxis[1] + &quot;&quot;);&#xD;
			txtUnits3.setText(newSampleUnitsPerAxis[2] + &quot;&quot;);&#xD;
		}&#xD;
		currentParams.setSampleUnitsPerAxis(newSampleUnitsPerAxis);&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		box.add(new JLabel(s));&#xD;
&#xD;
&#xD;
		if(currentParams.isOutput()) {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(&quot;Yes&quot;));&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(currentParams.getFolderOutput() + &quot;&quot;));&#xD;
		} else {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(&quot;No&quot;));&#xD;
		}&#xD;
		&#xD;
		if(currentParams.isOutputtingXyz()) {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(&quot;Yes&quot;));&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(currentParams.getXYZsFolder() + &quot;&quot;));&#xD;
&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(currentParams.getXYZsFolder() + &quot;&quot;));&#xD;
		} else {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(&quot;No&quot;));&#xD;
		}&#xD;
		&#xD;
		if(currentParams.isFit()) {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(&quot;Yes&quot;));&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(currentParams.getZipFile() + &quot;&quot;));&#xD;
		} else {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(&quot;No&quot;));&#xD;
		}&#xD;
		&#xD;
		if(currentParams.isOutputtingMovie()) {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(&quot;Yes&quot;));&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(currentParams.getMoviesFile() + &quot;&quot;));&#xD;
		} else {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(&quot;No&quot;));&#xD;
		}&#xD;
		&#xD;
		if(currentParams.isObj()) {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(&quot;Yes&quot;));&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(currentParams.getObjectsFile() + &quot;&quot;));&#xD;
		} else {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(&quot;No&quot;));&#xD;
		}&#xD;
		&#xD;
		if(currentParams.isTransformed()) {&#xD;
			box.add(Box.createVerticalStrut(height));&#xD;
			box.add(new JLabel(currentParams.getTransformationsFolder() + &quot;&quot;));&#xD;
		}&#xD;
		box.add(Box.createVerticalStrut(height));&#xD;
		box.add(new JLabel(&quot;&quot; + currentParams.getFittableParameterSelection().toString()));&#xD;
		return box;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5xYpAREeOq6NMfztjeOg" name="setupNucleation" specification="_dPGVAZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR5xY5AREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>JPanel pnl = new JPanel();&#xD;
		pnl.setLayout(new BoxLayout(pnl, BoxLayout.X_AXIS));&#xD;
		pnl.setBorder(getBoldTitledBorder(&quot;Nucleation and Growth&quot;, true, Color.gray));&#xD;
//		Font f = b.getTitleFont();&#xD;
//		b.setTitleFont(new Font(f.getName(), Font.BOLD, f.getSize()));&#xD;
		pnl.add(setupNucleationShape());&#xD;
		pnl.add(setupGrowthRates());&#xD;
		pnl.add(setupNucleationType());&#xD;
		pnl.add(setupNucleationOrientation());&#xD;
		return pnl;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5xZJAREeOq6NMfztjeOg" name="setupGrowthRates" specification="_dPGVApAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR5xZZAREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>pnlRates = new JPanel();&#xD;
		pnlRates.setLayout(new BoxLayout(pnlRates, BoxLayout.X_AXIS));&#xD;
		pnlRates.setBorder(getBoldTitledBorder(&quot;Growth Rate&quot;, false, Color.LIGHT_GRAY));&#xD;
		pnlRates.add(setupRates());&#xD;
		setRateVisibility();&#xD;
		pnlRates.setMaximumSize(pnlRates.getPreferredSize());&#xD;
		return pnlRates;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5xZpAREeOq6NMfztjeOg" name="setRateVisibility" specification="_dPG8EJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>switch(currentParams.getNucShape()) {&#xD;
		case Cubic:&#xD;
			lblRate1.setText(&quot;a&quot;);&#xD;
			lblRate2.setText(&quot;&quot;);&#xD;
			lblRate3.setText(&quot;&quot;);&#xD;
			txtRate1.setEnabled(true);&#xD;
			txtRate2.setEnabled(false);&#xD;
			txtRate3.setEnabled(false);&#xD;
			break;&#xD;
		case Tetragonal:&#xD;
			lblRate1.setText(&quot;a&quot;);&#xD;
			lblRate2.setText(&quot;&quot;);&#xD;
			lblRate3.setText(&quot;c&quot;);&#xD;
			txtRate1.setEnabled(true);&#xD;
			txtRate2.setEnabled(false);&#xD;
			txtRate3.setEnabled(true);&#xD;
			break;&#xD;
		case Orthorhombic:&#xD;
			lblRate1.setText(&quot;a&quot;);&#xD;
			lblRate2.setText(&quot;b&quot;);&#xD;
			lblRate3.setText(&quot;c&quot;);&#xD;
			txtRate1.setEnabled(true);&#xD;
			txtRate2.setEnabled(true);&#xD;
			txtRate3.setEnabled(true);&#xD;
			break;&#xD;
		case Cylindrical:&#xD;
			lblRate1.setText(&quot;r&quot;);&#xD;
			lblRate2.setText(&quot;&quot;);&#xD;
			lblRate3.setText(&quot;h&quot;);&#xD;
			txtRate1.setEnabled(true);&#xD;
			txtRate2.setEnabled(false);&#xD;
			txtRate3.setEnabled(true);&#xD;
			break;&#xD;
		case Spherical:&#xD;
			lblRate1.setText(&quot;r&quot;);&#xD;
			lblRate2.setText(&quot;&quot;);&#xD;
			lblRate3.setText(&quot;&quot;);&#xD;
			txtRate1.setEnabled(true);&#xD;
			txtRate2.setEnabled(false);&#xD;
			txtRate3.setEnabled(false);&#xD;
			break;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5xZ5AREeOq6NMfztjeOg" name="setupRates" specification="_dPG8EZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR5xaJAREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>JPanel pnlMain = new JPanel();&#xD;
		&#xD;
		pnlMain.setLayout(new GridLayout(3, 2));&#xD;
		&#xD;
		lblRate1 = new JLabel(&quot;r1&quot;, JLabel.CENTER);&#xD;
		lblRate2 = new JLabel(&quot;r2&quot;, JLabel.CENTER);&#xD;
		lblRate3 = new JLabel(&quot;r3&quot;, JLabel.CENTER);&#xD;
		&#xD;
		txtRate1 = new JTextField(5);&#xD;
		txtRate2 = new JTextField(5);&#xD;
		txtRate3 = new JTextField(5);&#xD;
		&#xD;
		txtRate1.setMaximumSize(txtRate1.getPreferredSize());&#xD;
		txtRate2.setMaximumSize(txtRate2.getPreferredSize());&#xD;
		txtRate3.setMaximumSize(txtRate3.getPreferredSize());&#xD;
		&#xD;
		txtRate1.setText(&quot;&quot; + currentParams.getAxialGrowthRates()[0]);&#xD;
		txtRate2.setText(&quot;&quot; + currentParams.getAxialGrowthRates()[1]);&#xD;
		txtRate3.setText(&quot;&quot; + currentParams.getAxialGrowthRates()[2]);&#xD;
		&#xD;
		pnlMain.add(lblRate1);&#xD;
		pnlMain.add(txtRate1);&#xD;
		&#xD;
		pnlMain.add(lblRate2);&#xD;
		pnlMain.add(txtRate2);&#xD;
		&#xD;
		pnlMain.add(lblRate3);&#xD;
		pnlMain.add(txtRate3);&#xD;
		&#xD;
		txtRate1.addFocusListener(new FocusListener() {&#xD;
&#xD;
			double previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
					currentParams.getAxialGrowthRates()[0] = newVal;&#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Axial growth rate in the a direction updated to: &quot; + newVal);&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
		});&#xD;
		txtRate2.addFocusListener(new FocusListener() {&#xD;
&#xD;
			double previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
					currentParams.getAxialGrowthRates()[1] = newVal;&#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Axial growth rate in the b direction updated to: &quot; + newVal);&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
		});&#xD;
		txtRate3.addFocusListener(new FocusListener() {&#xD;
&#xD;
			double previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
					currentParams.getAxialGrowthRates()[2] = newVal;&#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Axial growth rate in the c direction updated to: &quot; + newVal);&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
		});&#xD;
		&#xD;
		pnlMain.setVisible(true);&#xD;
		pnlMain.setMaximumSize(pnlMain.getPreferredSize());&#xD;
		return pnlMain;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5xaZAREeOq6NMfztjeOg" name="setupNucleationOrientation" specification="_dPG8EpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR5xapAREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>JPanel pnl = new JPanel();&#xD;
		pnl.setLayout(new BoxLayout(pnl, BoxLayout.Y_AXIS));&#xD;
		pnl.setBorder(getBoldTitledBorder(&quot;Crystal Orientation&quot;, false, Color.LIGHT_GRAY));&#xD;
		pnl.setSize(pnl.getPreferredSize());&#xD;
		NucleationOrientation[] nucOrient = NucleationOrientation.values();&#xD;
		ButtonGroup group = new ButtonGroup();&#xD;
		JRadioButton btn;&#xD;
		nucOrientSet = new NucleationOrientationSettingsFrame();&#xD;
		for(int i = 0; i &lt; nucOrient.length; i++) {&#xD;
			btn = new JRadioButton(nucOrient[i].toString());&#xD;
			group.add(btn);&#xD;
			btn.addActionListener(new ActionListener() {&#xD;
				@Override&#xD;
				public void actionPerformed(ActionEvent e) {&#xD;
					JRadioButton btn = (JRadioButton) e.getSource();&#xD;
					currentParams.setNucOrient(NucleationOrientation.valueOf(btn.getText()));&#xD;
					message(&quot;Nucleation orientation setting: &quot; + currentParams.getNucOrient() + &quot; has been updated.&quot;);&#xD;
					switch(currentParams.getNucOrient()){&#xD;
					case SetOfOrientations:&#xD;
						btnOrientationSettings.setEnabled(true);&#xD;
						break;&#xD;
					case Random:&#xD;
						btnOrientationSettings.setEnabled(false);&#xD;
						break;&#xD;
					}&#xD;
				}&#xD;
			});&#xD;
			&#xD;
			if(nucOrient[i] == NucleationOrientation.SetOfOrientations) {&#xD;
				JPanel pnl1 = new JPanel();&#xD;
				pnl1.setLayout(new BoxLayout(pnl1, BoxLayout.Y_AXIS));&#xD;
				pnl1.add(btn);&#xD;
				btnOrientationSettings = new JButton(&quot;Orientation Settings&quot;);&#xD;
				btnOrientationSettings.addActionListener(new ActionListener() {&#xD;
&#xD;
					@Override&#xD;
					public void actionPerformed(ActionEvent e) {&#xD;
						nucOrientSet.setVisible(true);&#xD;
					}&#xD;
					&#xD;
				});&#xD;
				pnl.add(pnl1);&#xD;
				pnl1.add(btnOrientationSettings);&#xD;
			} else {&#xD;
				pnl.add(btn);&#xD;
			}&#xD;
			if(nucOrient[i].equals(currentParams.getNucOrient())) {&#xD;
				btn.setSelected(true);	&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		switch(currentParams.getNucOrient()){&#xD;
		case SetOfOrientations:&#xD;
			btnOrientationSettings.setEnabled(true);&#xD;
			break;&#xD;
		case Random:&#xD;
			btnOrientationSettings.setEnabled(false);&#xD;
			break;&#xD;
		}&#xD;
		return pnl;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR5xa5AREeOq6NMfztjeOg" name="setupNucleationShape" specification="_dPG8E5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR5xbJAREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>JPanel pnl = new JPanel();&#xD;
		pnl.setLayout(new BoxLayout(pnl, BoxLayout.Y_AXIS));&#xD;
		pnl.setBorder(getBoldTitledBorder(&quot;Crystal Shape&quot;, false, Color.LIGHT_GRAY));&#xD;
		pnl.setSize(pnl.getPreferredSize());&#xD;
		ShapeTypes[] types = ShapeTypes.values();&#xD;
		ButtonGroup btnCrystalShapes = new ButtonGroup();&#xD;
		JRadioButton btn;&#xD;
		ActionListener listener = new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				JRadioButton btn = (JRadioButton) e.getSource();&#xD;
				currentParams.setNucShape(ShapeTypes.valueOf(btn.getText()));&#xD;
				message(&quot;Nucleation selection: &quot; + currentParams.getNucShape() + &quot; has been updated.&quot;);&#xD;
				setRateVisibility();&#xD;
			}	&#xD;
		};&#xD;
		for(int i = 0; i &lt; types.length; i++) {&#xD;
			btn = new JRadioButton(types[i].toString());&#xD;
			btn.addActionListener(listener);&#xD;
			btnCrystalShapes.add(btn);&#xD;
			pnl.add(btn);&#xD;
			if(types[i].equals(currentParams.getNucShape())) {&#xD;
				btn.setSelected(true);	&#xD;
			}&#xD;
		}&#xD;
		return pnl;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR6YcJAREeOq6NMfztjeOg" name="setupNucleationType" specification="_dPHjIJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR6YcZAREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>Box boxMain = Box.createVerticalBox();&#xD;
		Box box1 = Box.createHorizontalBox();&#xD;
		Box box2 = Box.createHorizontalBox();&#xD;
		Box box3 = Box.createHorizontalBox();&#xD;
		boxMain.setBorder(getBoldTitledBorder(&quot;Nucleation&quot;, false, Color.LIGHT_GRAY));&#xD;
		&#xD;
		JLabel lbl1 = new JLabel(&quot;Initial number of seed crystals&quot;);&#xD;
		lbl1.setSize(lbl1.getPreferredSize());&#xD;
		final JTextField txtInitXtals = new JTextField(5);&#xD;
		txtInitXtals.setText(&quot;&quot; + currentParams.getNucInitVal());&#xD;
		txtInitXtals.setMaximumSize(txtInitXtals.getPreferredSize());&#xD;
		txtInitXtals.addFocusListener(new DataTypeChecker(DataTypeChecker.INTEGER, 0, Double.MAX_VALUE));&#xD;
		txtInitXtals.addFocusListener(new FocusListener() {&#xD;
&#xD;
			int previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Integer.parseInt(((JTextField) e.getSource()).getText());&#xD;
					currentParams.setNucInitVal(newVal); &#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Inital Number of crystallites: &quot; + currentParams.getNucInitVal() + &quot; has been updated.&quot;);&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Integer.parseInt(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
		});&#xD;
		box1.add(txtInitXtals);&#xD;
		box1.add(lbl1);&#xD;
		box1.add(Box.createHorizontalGlue());&#xD;
&#xD;
		JLabel lbl2 = new JLabel(&quot;Probability of subsequent nucleation (0 &lt;= P &lt;= 1)&quot;);&#xD;
		lbl2.setSize(lbl2.getPreferredSize());&#xD;
		final JTextField txtNucProb = new JTextField(5);&#xD;
		txtNucProb.setText(&quot;&quot; + currentParams.getNucContVal());&#xD;
		txtNucProb.addFocusListener(new DataTypeChecker(DataTypeChecker.DOUBLE, 0, 1));&#xD;
		txtNucProb.setMaximumSize(txtNucProb.getPreferredSize());&#xD;
		txtNucProb.addFocusListener(new FocusListener() {&#xD;
&#xD;
			double previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
					currentParams.setNucContVal(newVal);&#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Probability of continuous nucleation: &quot; + currentParams.getNucContVal() + &quot; has been updated.&quot;);&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Double.parseDouble(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
		});&#xD;
		box2.add(txtNucProb);&#xD;
		box2.add(lbl2);&#xD;
		box2.add(Box.createHorizontalGlue());&#xD;
		&#xD;
		JLabel lbl3 = new JLabel(&quot;Maximum Number of Crystallites in Simulation&quot;);&#xD;
		lbl3.setSize(lbl3.getPreferredSize());&#xD;
		final JTextField maxNumXtals = new JTextField(5);&#xD;
		maxNumXtals.setText(&quot;&quot; + currentParams.getMaxNumCrystals());&#xD;
		maxNumXtals.addFocusListener(new DataTypeChecker(DataTypeChecker.INTEGER, 0, -1));&#xD;
		maxNumXtals.setMaximumSize(maxNumXtals.getPreferredSize());&#xD;
		maxNumXtals.addFocusListener(new FocusListener() {&#xD;
&#xD;
			int previousVal = -1, newVal;&#xD;
			@Override&#xD;
			public void focusLost(FocusEvent e) {&#xD;
				try {&#xD;
					newVal = Integer.parseInt(((JTextField) e.getSource()).getText());&#xD;
					currentParams.setMaxNumCrystals(newVal);&#xD;
					((JTextField) e.getSource()).setBackground(okEntryColor);&#xD;
					if(previousVal == -1 || previousVal != newVal) {&#xD;
						message(&quot;Maximum number of crystallites in simulation has been updated to: &quot; + currentParams.getMaxNumCrystals());&#xD;
						updateParamValues();&#xD;
						previousVal = newVal;&#xD;
					}&#xD;
				}&#xD;
				catch (NumberFormatException nfe) {&#xD;
					((JTextField) e.getSource()).setBackground(badEntryColor);&#xD;
				}&#xD;
			}&#xD;
			@Override&#xD;
			public void focusGained(FocusEvent e) { &#xD;
				previousVal = Integer.parseInt(((JTextField) e.getSource()).getText());&#xD;
				((JTextField) e.getSource()).selectAll(); &#xD;
			}&#xD;
		});&#xD;
		box3.add(maxNumXtals);&#xD;
		box3.add(lbl3);&#xD;
		box3.add(Box.createHorizontalGlue());		&#xD;
		&#xD;
		boxMain.add(box1);&#xD;
		boxMain.add(box3);&#xD;
		boxMain.add(box2);&#xD;
		return boxMain;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR6YcpAREeOq6NMfztjeOg" name="launch" specification="_dPHjIZAREeOq6NMfztjeOg">
          <language>java</language>
          <body>simPanel.initialize(new SimulationController_UI(currentParams));&#xD;
		repaint();&#xD;
		btnRunSimulation.setEnabled(false);&#xD;
		javax.swing.SwingUtilities.invokeLater(new Runnable() {&#xD;
         public void run() {&#xD;
				simPanel.execute();&#xD;
			}&#xD;
     });&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR6Yc5AREeOq6NMfztjeOg" name="newSimulSetupParams" specification="_dPHjIpAREeOq6NMfztjeOg">
          <language>java</language>
          <body>SimulSetupParams ssp = new SimulSetupParams();&#xD;
		ssp.copy(currentParams);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR6YdJAREeOq6NMfztjeOg" name="message" specification="_dPIKMJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR6YdZAREeOq6NMfztjeOg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>if(messages != null) {&#xD;
			messages.setText(message + &quot;\n&quot; + messages.getText());&#xD;
			/*Dimension newDim = messages.getPreferredSize();&#xD;
			newDim.height = scroll.getHeight();&#xD;
			newDim.width = getWidth() - 50;&#xD;
			Dimension windowDim = getSize();&#xD;
			if(newDim.width > windowDim.width) {&#xD;
				newDim.width = windowDim.width - 25;&#xD;
			}&#xD;
			scroll.setSize(newDim);*/&#xD;
			messages.setCaretPosition(0);&#xD;
		}&#xD;
		//updateParamValues();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR6_jZAREeOq6NMfztjeOg" name="update" specification="_dRUikJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR6_jpAREeOq6NMfztjeOg" name="arg0" type="_BOw2wZAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_dR6_j5AREeOq6NMfztjeOg" name="arg1" type="_Vb-W85AREeOq6NMfztjeOg"/>
          <language>java</language>
          <body>if(arg1 instanceof String[] ) {&#xD;
			String[] complexMessage = (String[]) arg1;&#xD;
			if(complexMessage.length == 1)&#xD;
				message(complexMessage[0]);&#xD;
			else&#xD;
				message(complexMessage[1]);&#xD;
			if(arg0 instanceof RunningSimulationPanel) {&#xD;
				if(complexMessage[0].compareTo(RunningSimulationPanel.SIMULATION_COMPLETE) == 0) {&#xD;
					message(&quot;Simulation Complete.&quot;);&#xD;
					btnRunSimulation.setEnabled(true);&#xD;
//					SendMailTLS.send(&quot;fhou@ncsu.edu&quot;, currentParams.toString());&#xD;
				}&#xD;
				if(complexMessage[0].compareTo(RunningSimulationPanel.SIMULATION_TERMINATED) == 0) {&#xD;
					message(&quot;Simulation was terminated.&quot;);&#xD;
					btnRunSimulation.setEnabled(true);&#xD;
	//					repaint();&#xD;
	//					pack();&#xD;
				} &#xD;
			}&#xD;
		} else if(arg1 instanceof String) {&#xD;
			message((String) arg1);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR7mkJAREeOq6NMfztjeOg" name="getBoldTitledBorder" specification="_dRpSsJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dR7mkZAREeOq6NMfztjeOg" name="title">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dR7mkpAREeOq6NMfztjeOg" name="bold">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dR7mk5AREeOq6NMfztjeOg" name="borderColor" type="_dRHuQZAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_dR7mlJAREeOq6NMfztjeOg" type="_dRPqEZAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>int style = bold ? Font.BOLD : Font.PLAIN;&#xD;
		Font f = new JPanel().getFont();&#xD;
		Border border = BorderFactory.createLineBorder(borderColor, 2);&#xD;
		TitledBorder b = BorderFactory.createTitledBorder(border, &#xD;
				title, TitledBorder.CENTER , TitledBorder.TOP, &#xD;
				new Font(f.getName(), style, f.getSize()));&#xD;
		return b;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_dPCDkJAREeOq6NMfztjeOg" name="UI" method="_dR38MJAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_dPCDkZAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_dPCDkpAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_dPCDk5AREeOq6NMfztjeOg" type="_dPA1cJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPDRsJAREeOq6NMfztjeOg" name="setup" visibility="private" method="_dR38MpAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_dPDRsZAREeOq6NMfztjeOg" name="setupMessageWindow" visibility="private" method="_dR38NpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRlBQJAREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPDRspAREeOq6NMfztjeOg" name="setupSettings" visibility="private" method="_dR38OJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRlBQZAREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPD4wJAREeOq6NMfztjeOg" name="setupSimulationExecutionPanel" visibility="private" method="_dR4jQJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRlBQpAREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPD4wZAREeOq6NMfztjeOg" name="setupSimulationEndConditions" visibility="private" method="_dR4jQpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRlBQ5AREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPD4wpAREeOq6NMfztjeOg" name="setupFileIO" visibility="private" method="_dR4jRJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRlBRJAREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPEf0JAREeOq6NMfztjeOg" name="setupSample" visibility="private" method="_dR4jRpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRloUJAREeOq6NMfztjeOg" type="_dRHuQ5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPEf0ZAREeOq6NMfztjeOg" name="setUnitsVisibility" visibility="private" method="_dR4jSJAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_dPEf0pAREeOq6NMfztjeOg" name="setupFittingParameters" visibility="private" method="_dR4jSZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRloUZAREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPEf05AREeOq6NMfztjeOg" name="setupDimensionalityOptions" visibility="private" method="_dR4jS5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRloUpAREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPFG4JAREeOq6NMfztjeOg" name="setupMiscOptions" visibility="private" method="_dR5KUJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRloU5AREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPFG4ZAREeOq6NMfztjeOg" name="setupSampleUnits" visibility="private" method="_dR5KUpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRloVJAREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPFG4pAREeOq6NMfztjeOg" name="setupSampleVolume" visibility="private" method="_dR5KVJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRmPYJAREeOq6NMfztjeOg" type="_dRHuQ5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPFG45AREeOq6NMfztjeOg" name="setupUnits" visibility="private" method="_dR5KVpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRmPYZAREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPFt8JAREeOq6NMfztjeOg" name="setupSampleShape" visibility="private" method="_dR5KWJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRmPYpAREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPFt8ZAREeOq6NMfztjeOg" name="setupParameters" visibility="private" method="_dR5KWpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRmPY5AREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPFt8pAREeOq6NMfztjeOg" name="updateParamValues" visibility="private" method="_dR5KXJAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_dPFt85AREeOq6NMfztjeOg" name="paramLabels" visibility="private" method="_dR5KXZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRmPZJAREeOq6NMfztjeOg" type="_dRKxkpAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPGVAJAREeOq6NMfztjeOg" name="paramValues" visibility="private" method="_dR5xYJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRmPZZAREeOq6NMfztjeOg" type="_dRKxkpAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPGVAZAREeOq6NMfztjeOg" name="setupNucleation" visibility="private" method="_dR5xYpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRm2cJAREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPGVApAREeOq6NMfztjeOg" name="setupGrowthRates" visibility="private" method="_dR5xZJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRm2cZAREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPG8EJAREeOq6NMfztjeOg" name="setRateVisibility" visibility="private" method="_dR5xZpAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_dPG8EZAREeOq6NMfztjeOg" name="setupRates" visibility="private" method="_dR5xZ5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRm2cpAREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPG8EpAREeOq6NMfztjeOg" name="setupNucleationOrientation" visibility="private" method="_dR5xaZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRm2c5AREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPG8E5AREeOq6NMfztjeOg" name="setupNucleationShape" visibility="private" method="_dR5xa5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRm2dJAREeOq6NMfztjeOg" type="_dRNN05AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPHjIJAREeOq6NMfztjeOg" name="setupNucleationType" visibility="private" method="_dR6YcJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRndgJAREeOq6NMfztjeOg" type="_dRMmwJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dPHjIZAREeOq6NMfztjeOg" name="launch" method="_dR6YcpAREeOq6NMfztjeOg" raisedException="_BOvBkZAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_dPHjIpAREeOq6NMfztjeOg" name="newSimulSetupParams" method="_dR6Yc5AREeOq6NMfztjeOg">
          <ownedComment xmi:id="_dR_Q8pAREeOq6NMfztjeOg">
            <body>*</body>
          </ownedComment>
        </ownedOperation>
        <ownedOperation xmi:id="_dPIKMJAREeOq6NMfztjeOg" name="message" method="_dR6YdJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dPIKMZAREeOq6NMfztjeOg" name="message">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_dRUikJAREeOq6NMfztjeOg" name="update" method="_dR6_jZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRUikZAREeOq6NMfztjeOg" name="arg0" type="_BOw2wZAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_dRUikpAREeOq6NMfztjeOg" name="arg1" type="_Vb-W85AREeOq6NMfztjeOg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dRkaMJAREeOq6NMfztjeOg" name="getSpacer" visibility="private" method="_dR38M5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRkaMZAREeOq6NMfztjeOg" name="d" type="_dRIVUZAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_dRkaMpAREeOq6NMfztjeOg" type="_dRNN0ZAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_dRpSsJAREeOq6NMfztjeOg" name="getBoldTitledBorder" visibility="private" method="_dR7mkJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_dRpSsZAREeOq6NMfztjeOg" name="title">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dRpSspAREeOq6NMfztjeOg" name="bold">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_dRpSs5AREeOq6NMfztjeOg" name="borderColor" type="_dRHuQZAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_dRpStJAREeOq6NMfztjeOg" type="_dRPqEZAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <nestedClassifier xmi:type="uml:Class" xmi:id="_dPIKMpAREeOq6NMfztjeOg" name="NucleationOrientationSettingsFrame" visibility="package">
          <generalization xmi:id="_dRndgZAREeOq6NMfztjeOg" general="_dRMmxJAREeOq6NMfztjeOg"/>
          <ownedAttribute xmi:id="_dR0R05AREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_dR0R1JAREeOq6NMfztjeOg" value="6440047359787744736L"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR6YdpAREeOq6NMfztjeOg" name="NucleationOrientationSettingsFrame" specification="_dPIxQJAREeOq6NMfztjeOg">
            <ownedParameter xmi:id="_dR6Yd5AREeOq6NMfztjeOg" type="_dPIKMpAREeOq6NMfztjeOg" direction="return"/>
            <language>java</language>
            <body>super();&#xD;
			setup();&#xD;
			setPreferredSize(new Dimension(250, 250));&#xD;
			setDefaultCloseOperation(HIDE_ON_CLOSE);&#xD;
			pack();&#xD;
		</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR6YeJAREeOq6NMfztjeOg" name="setup" specification="_dPIxRJAREeOq6NMfztjeOg">
            <language>java</language>
            <body>JPanel pnl = new JPanel();&#xD;
			JTextField txt = new JTextField(10);&#xD;
			txt.setText(&quot;placeholder&quot;);&#xD;
			txt.setEditable(false);&#xD;
			add(txt);&#xD;
		</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_dPIxQJAREeOq6NMfztjeOg" name="NucleationOrientationSettingsFrame" method="_dR6YdpAREeOq6NMfztjeOg">
            <eAnnotations xmi:id="_dPIxQZAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_dPIxQpAREeOq6NMfztjeOg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_dPIxQ5AREeOq6NMfztjeOg" type="_dPIKMpAREeOq6NMfztjeOg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dPIxRJAREeOq6NMfztjeOg" name="setup" visibility="private" method="_dR6YeJAREeOq6NMfztjeOg"/>
        </nestedClassifier>
        <nestedClassifier xmi:type="uml:Class" xmi:id="_dPIxRZAREeOq6NMfztjeOg" clientDependency="_dRndgpAREeOq6NMfztjeOg _dRoEkJAREeOq6NMfztjeOg" name="DataTypeChecker" visibility="package">
          <ownedAttribute xmi:id="_dR0R1ZAREeOq6NMfztjeOg" name="INTEGER" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_dR044JAREeOq6NMfztjeOg" value="0"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dR044pAREeOq6NMfztjeOg" name="DOUBLE" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_dR0445AREeOq6NMfztjeOg" value="1"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dR045ZAREeOq6NMfztjeOg" name="STRING" isLeaf="true" isStatic="true" isReadOnly="true">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_dR045pAREeOq6NMfztjeOg" value="2"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dR1f8ZAREeOq6NMfztjeOg" name="dataType" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dR1f85AREeOq6NMfztjeOg" name="min" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dR2HAJAREeOq6NMfztjeOg" name="enforceBounds" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <defaultValue xmi:type="uml:LiteralString" xmi:id="_dR2HAZAREeOq6NMfztjeOg" value="false"/>
          </ownedAttribute>
          <ownedAttribute xmi:id="_dR_Q85AREeOq6NMfztjeOg" name="max" visibility="private">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedAttribute>
          <interfaceRealization xmi:id="_dRndgpAREeOq6NMfztjeOg" client="_dPIxRZAREeOq6NMfztjeOg" supplier="_dRKKg5AREeOq6NMfztjeOg" contract="_dRKKg5AREeOq6NMfztjeOg"/>
          <interfaceRealization xmi:id="_dRoEkJAREeOq6NMfztjeOg" client="_dPIxRZAREeOq6NMfztjeOg" supplier="_dRJjc5AREeOq6NMfztjeOg" contract="_dRJjc5AREeOq6NMfztjeOg"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR6YeZAREeOq6NMfztjeOg" name="DataTypeChecker" specification="_dPJYUJAREeOq6NMfztjeOg">
            <ownedParameter xmi:id="_dR6YepAREeOq6NMfztjeOg" name="dataType">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dR6Ye5AREeOq6NMfztjeOg" type="_dPIxRZAREeOq6NMfztjeOg" direction="return"/>
            <language>java</language>
            <body>this.dataType = dataType;&#xD;
		</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR6_gJAREeOq6NMfztjeOg" name="DataTypeChecker" specification="_dPJ_Y5AREeOq6NMfztjeOg">
            <ownedParameter xmi:id="_dR6_gZAREeOq6NMfztjeOg" name="dataType">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dR6_gpAREeOq6NMfztjeOg" name="min">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dR6_g5AREeOq6NMfztjeOg" name="max">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dR6_hJAREeOq6NMfztjeOg" type="_dPIxRZAREeOq6NMfztjeOg" direction="return"/>
            <language>java</language>
            <body>this.dataType = dataType;&#xD;
			this.min = min;&#xD;
			this.max = max;&#xD;
			enforceBounds = true;&#xD;
		</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR6_hZAREeOq6NMfztjeOg" name="focusGained" specification="_dRStYJAREeOq6NMfztjeOg">
            <ownedParameter xmi:id="_dR6_hpAREeOq6NMfztjeOg" name="e" type="_dRKKgZAREeOq6NMfztjeOg"/>
            <language>java</language>
            <body>check(e.getSource());&#xD;
		</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR6_h5AREeOq6NMfztjeOg" name="focusLost" specification="_dRTUc5AREeOq6NMfztjeOg">
            <ownedParameter xmi:id="_dR6_iJAREeOq6NMfztjeOg" name="e" type="_dRKKgZAREeOq6NMfztjeOg"/>
            <language>java</language>
            <body>check(e.getSource());&#xD;
		</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR6_iZAREeOq6NMfztjeOg" name="actionPerformed" specification="_dRoEkZAREeOq6NMfztjeOg">
            <ownedParameter xmi:id="_dR6_ipAREeOq6NMfztjeOg" name="e" type="_dRJjcZAREeOq6NMfztjeOg"/>
            <language>java</language>
            <body>check(e.getSource());&#xD;
		</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_dR6_i5AREeOq6NMfztjeOg" name="check" specification="_dRT7gpAREeOq6NMfztjeOg">
            <ownedParameter xmi:id="_dR6_jJAREeOq6NMfztjeOg" name="o" type="_Vb-W85AREeOq6NMfztjeOg"/>
            <language>java</language>
            <body>JTextField txt;&#xD;
			if(o instanceof JTextField) {&#xD;
				txt = (JTextField) o;&#xD;
				switch(dataType) {&#xD;
				case INTEGER:&#xD;
					try {&#xD;
						int val = Integer.parseInt(txt.getText());&#xD;
						if(enforceBounds) {&#xD;
							if(val &lt;= min ) {&#xD;
								txt.setText(&quot;&quot; + (int) min);&#xD;
							} else if (val >= max &amp;&amp; max >= min) {&#xD;
								txt.setText(&quot;&quot; + (int) max);&#xD;
							}&#xD;
						}&#xD;
					}&#xD;
					catch (NumberFormatException nfe) {&#xD;
						txt.setText(&quot;0&quot;);&#xD;
					}&#xD;
					break;&#xD;
				case DOUBLE:&#xD;
					try {&#xD;
						double val = Double.parseDouble(txt.getText());&#xD;
						if(enforceBounds) {&#xD;
							if(val &lt;= min ) {&#xD;
								txt.setText(min + &quot;&quot;);&#xD;
							} else if (val >= max) {&#xD;
								txt.setText(max + &quot;&quot;);&#xD;
							}&#xD;
						}&#xD;
					} &#xD;
					catch (NumberFormatException nfe) {&#xD;
						txt.setText(&quot;0&quot;);&#xD;
					}&#xD;
					break;&#xD;
				case STRING:&#xD;
					try {&#xD;
						txt.getText();&#xD;
					}&#xD;
					catch (NullPointerException npe) {&#xD;
						txt.setText(&quot;&quot;);&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_dPJYUJAREeOq6NMfztjeOg" name="DataTypeChecker" method="_dR6YeZAREeOq6NMfztjeOg">
            <eAnnotations xmi:id="_dPJ_YJAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_dPJ_YZAREeOq6NMfztjeOg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_dPJYUZAREeOq6NMfztjeOg" name="dataType">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dPJ_YpAREeOq6NMfztjeOg" type="_dPIxRZAREeOq6NMfztjeOg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dPJ_Y5AREeOq6NMfztjeOg" name="DataTypeChecker" method="_dR6_gJAREeOq6NMfztjeOg">
            <eAnnotations xmi:id="_dPJ_Z5AREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
              <details xmi:id="_dPKmcJAREeOq6NMfztjeOg" key="create"/>
            </eAnnotations>
            <ownedParameter xmi:id="_dPJ_ZJAREeOq6NMfztjeOg" name="dataType">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dPJ_ZZAREeOq6NMfztjeOg" name="min">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dPJ_ZpAREeOq6NMfztjeOg" name="max">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedParameter>
            <ownedParameter xmi:id="_dPKmcZAREeOq6NMfztjeOg" type="_dPIxRZAREeOq6NMfztjeOg" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dRStYJAREeOq6NMfztjeOg" name="focusGained" method="_dR6_hZAREeOq6NMfztjeOg">
            <ownedParameter xmi:id="_dRStYZAREeOq6NMfztjeOg" name="e" type="_dRKKgZAREeOq6NMfztjeOg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dRTUc5AREeOq6NMfztjeOg" name="focusLost" method="_dR6_h5AREeOq6NMfztjeOg">
            <ownedParameter xmi:id="_dRTUdJAREeOq6NMfztjeOg" name="e" type="_dRKKgZAREeOq6NMfztjeOg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dRT7gpAREeOq6NMfztjeOg" name="check" method="_dR6_i5AREeOq6NMfztjeOg">
            <ownedParameter xmi:id="_dRT7g5AREeOq6NMfztjeOg" name="o" type="_Vb-W85AREeOq6NMfztjeOg"/>
          </ownedOperation>
          <ownedOperation xmi:id="_dRoEkZAREeOq6NMfztjeOg" name="actionPerformed" method="_dR6_iZAREeOq6NMfztjeOg">
            <ownedParameter xmi:id="_dRoEkpAREeOq6NMfztjeOg" name="e" type="_dRJjcZAREeOq6NMfztjeOg"/>
          </ownedOperation>
        </nestedClassifier>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_dRh98JAREeOq6NMfztjeOg" clientDependency="_hSyM4ZAREeOq6NMfztjeOg" name="RunningSimulationPanel">
        <generalization xmi:id="_hSzbBpAREeOq6NMfztjeOg" general="_BOw2wZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_hS13QJAREeOq6NMfztjeOg" name="boxMain" visibility="private" isLeaf="true" type="_dRKxkpAREeOq6NMfztjeOg" isReadOnly="true" association="_hS8k8JAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_hS2eUZAREeOq6NMfztjeOg" name="simController" visibility="private" type="_BOxd0ZAREeOq6NMfztjeOg" association="_hS8k85AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_hS2eU5AREeOq6NMfztjeOg" name="bar1" visibility="private" type="_hSxl05AREeOq6NMfztjeOg" association="_hS9MAJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_hS3FYJAREeOq6NMfztjeOg" name="bar2" visibility="private" type="_hSxl05AREeOq6NMfztjeOg" association="_hS9MA5AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_hS3FYpAREeOq6NMfztjeOg" name="lblVolume" visibility="private" type="_dRNN0ZAREeOq6NMfztjeOg" association="_hS9MBpAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_hS3FZJAREeOq6NMfztjeOg" name="lblSampleShape" visibility="private" type="_dRNN0ZAREeOq6NMfztjeOg" association="_hS9zEZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_hS3scZAREeOq6NMfztjeOg" name="btnEnd" visibility="private" type="_dRL_sZAREeOq6NMfztjeOg" association="_hS9zFJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_hS3sc5AREeOq6NMfztjeOg" name="numSimulations" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_hS3sdJAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_hS4TgJAREeOq6NMfztjeOg" name="SIMULATION_TERMINATED" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_hS4TgZAREeOq6NMfztjeOg" value="&quot;simulation terminated&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_hS4Tg5AREeOq6NMfztjeOg" name="SIMULATION_COMPLETE" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_hS4ThJAREeOq6NMfztjeOg" value="&quot;simulation complete&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_hS4ThpAREeOq6NMfztjeOg" name="THREAD_COMPLETE" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_hS46kJAREeOq6NMfztjeOg" value="&quot;thread complete&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_hS46kpAREeOq6NMfztjeOg" name="es" visibility="private" type="_hSw-wpAREeOq6NMfztjeOg" association="_hS-aIZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_hS6vwJAREeOq6NMfztjeOg" name="lblSampleAxes" visibility="private" type="_dRNN0ZAREeOq6NMfztjeOg" association="_hS-aJJAREeOq6NMfztjeOg"/>
        <interfaceRealization xmi:id="_hSyM4ZAREeOq6NMfztjeOg" client="_dRh98JAREeOq6NMfztjeOg" supplier="_VbcygpAREeOq6NMfztjeOg" contract="_VbcygpAREeOq6NMfztjeOg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hS5hoJAREeOq6NMfztjeOg" name="RunningSimulationPanel" specification="_hSiVQJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_hS5hoZAREeOq6NMfztjeOg" type="_dRh98JAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>boxMain = Box.createVerticalBox();&#xD;
		setupPanel();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hS5hopAREeOq6NMfztjeOg" name="getBox" specification="_hSiVRJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_hS5ho5AREeOq6NMfztjeOg" type="_dRKxkpAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>boxMain.setSize(boxMain.getPreferredSize());&#xD;
		return boxMain; &#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hS5hpJAREeOq6NMfztjeOg" name="initialize" specification="_hSyz8ZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_hS5hpZAREeOq6NMfztjeOg" name="sc" type="_BOxd0ZAREeOq6NMfztjeOg"/>
          <language>java</language>
          <body>simController = sc;&#xD;
		simController.addObserver(this);&#xD;
		simController.initialize();&#xD;
		addSimulationController();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hS5hppAREeOq6NMfztjeOg" name="execute" specification="_hSi8UJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>es = Executors.newFixedThreadPool(1);&#xD;
		Simulation simul = simController.getNextSimulation();&#xD;
		while(simul != null) {&#xD;
			es.execute(simul);&#xD;
			simul = simController.getNextSimulation();&#xD;
		}&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hS5hp5AREeOq6NMfztjeOg" name="terminate" specification="_hSi8UZAREeOq6NMfztjeOg">
          <language>java</language>
          <body>if(simController.isRunning()) {&#xD;
			simController.kill();&#xD;
			es.shutdown();&#xD;
		} else {&#xD;
			resetLabels();&#xD;
			&#xD;
			setChanged();&#xD;
			notifyObservers(SIMULATION_TERMINATED);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hS5hqJAREeOq6NMfztjeOg" name="resetLabels" specification="_hSi8UpAREeOq6NMfztjeOg">
          <language>java</language>
          <body>btnEnd.setText(&quot;Terminate &lt;&lt;Experiment Name>>&quot;);&#xD;
		bar1.setValue(0);&#xD;
		bar2.setValue(0);&#xD;
		bar1.setString(&quot;0 / 0&quot;);&#xD;
		bar2.setString(&quot;0%&quot;);&#xD;
		lblSampleShape.setText(&quot;Sample shape&quot;);&#xD;
		lblSampleAxes.setText(&quot;Sample axes&quot;);&#xD;
		lblVolume.setText(&quot;Approximate Sample Volume = ??&quot;);&#xD;
		boxMain.repaint();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hS6IsJAREeOq6NMfztjeOg" name="setupPanel" specification="_hSi8U5AREeOq6NMfztjeOg">
          <language>java</language>
          <body>//box.remove(box.getComponentCount()-1);&#xD;
		&#xD;
		Box box0 = Box.createHorizontalBox();&#xD;
		btnEnd = new JButton(&quot;Terminate &quot;);&#xD;
		btnEnd.addActionListener(new ActionListener() {&#xD;
			public void actionPerformed(ActionEvent e) {&#xD;
				terminate();&#xD;
			}&#xD;
		});&#xD;
		&#xD;
		&#xD;
		box0.add(btnEnd);&#xD;
//		box0.add(Box.createHorizontalGlue());&#xD;
		&#xD;
		bar1 = new JProgressBar(0, 100);&#xD;
		bar1.setStringPainted(true);&#xD;
		bar1.setString(&quot;Simulation &quot; + numSimulations);&#xD;
		Box box1 = Box.createHorizontalBox();&#xD;
		box1.add(bar1);&#xD;
//		box1.add(Box.createHorizontalGlue());&#xD;
		&#xD;
		Box box2 = Box.createHorizontalBox();&#xD;
		bar2 = new JProgressBar(0, 100);&#xD;
		bar2.setStringPainted(true);&#xD;
		box2.add(bar2);&#xD;
//		box2.add(Box.createHorizontalGlue());&#xD;
		&#xD;
		&#xD;
		Box box3 = Box.createHorizontalBox();&#xD;
		lblSampleShape = new JLabel(ShapeTypes.Cubic.name() + &quot;&quot;);&#xD;
		box3.add(lblSampleShape);&#xD;
//		box3.add(Box.createHorizontalGlue());&#xD;
		&#xD;
		Box box4 = Box.createHorizontalBox();&#xD;
		lblSampleAxes = new JLabel(&quot;(a) = (50)&quot;);&#xD;
		box4.add(lblSampleAxes);&#xD;
//		box4.add(Box.createHorizontalGlue());&#xD;
		&#xD;
		Box box5 = Box.createHorizontalBox();&#xD;
		lblVolume = new JLabel(&quot;Approximate simulation volume = 0&quot;);&#xD;
		box5.add(lblVolume);&#xD;
//		box5.add(Box.createHorizontalGlue());&#xD;
&#xD;
		boxMain.add(box0);&#xD;
		boxMain.add(Box.createVerticalStrut(5));&#xD;
		boxMain.add(box1);&#xD;
		boxMain.add(Box.createVerticalStrut(5));&#xD;
		boxMain.add(box2);&#xD;
		boxMain.add(Box.createVerticalStrut(5));&#xD;
		boxMain.add(box3);&#xD;
		boxMain.add(Box.createVerticalStrut(5));&#xD;
		boxMain.add(box4);&#xD;
		boxMain.add(Box.createVerticalStrut(5));&#xD;
		boxMain.add(box5);&#xD;
		boxMain.add(Box.createVerticalStrut(5));&#xD;
//		boxMain.setMaximumSize(boxMain.getPreferredSize());&#xD;
		&#xD;
		boxMain.add(Box.createVerticalStrut(10));&#xD;
		boxMain.add(Box.createVerticalGlue());&#xD;
		resetLabels();&#xD;
		boxMain.repaint();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hS6IsZAREeOq6NMfztjeOg" name="addSimulationController" specification="_hSi8VJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>lblVolume.setText(&quot;Approximate simulation volume = &quot; + simController.getTotalVolume() + &quot;&quot;);&#xD;
		lblSampleShape.setText(simController.sp.getSampleShape().name() + &quot;&quot;);&#xD;
		lblSampleAxes.setText(simController.sp.getSampleAxes());&#xD;
		bar1.setString(&quot;0 / &quot; + simController.sp.getNumberOfSimulationsToRun());&#xD;
		btnEnd.setText(&quot;Terminate &quot; + simController.sp.getCurrentFileRoot());&#xD;
		boxMain.repaint();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hS6IspAREeOq6NMfztjeOg" name="removeSimulation" specification="_hSjjYJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_hS6Is5AREeOq6NMfztjeOg" name="idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>boxMain.remove(idx);&#xD;
		bar1.setValue(0);&#xD;
		bar2.setValue(0);&#xD;
		bar1.setString(&quot;0 / 0&quot;);&#xD;
		bar2.setString(&quot;0%&quot;);&#xD;
		lblVolume.setText(&quot;0&quot;);&#xD;
		boxMain.repaint();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hS6ItJAREeOq6NMfztjeOg" name="updateSimulationThreadComplete" specification="_hSjjYpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_hS6ItZAREeOq6NMfztjeOg" name="threadsComplete">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>double val = 100*((double) threadsComplete) / ((double) simController.sp.getNumberOfSimulationsToRun());&#xD;
		bar1.setValue((int) Math.rint(val));&#xD;
		bar1.setString(threadsComplete + &quot; / &quot; + simController.sp.getNumberOfSimulationsToRun());&#xD;
		boxMain.repaint();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hS6ItpAREeOq6NMfztjeOg" name="updateSimulationPercent" specification="_hSjjZJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_hS6It5AREeOq6NMfztjeOg" name="percentFinished">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>bar2.setValue((int) Math.rint(percentFinished*100));&#xD;
		bar2.repaint();&#xD;
		bar2.setString(Math.rint(percentFinished * 1000)/10. + &quot;%&quot;);&#xD;
		boxMain.repaint();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_hS6IuJAREeOq6NMfztjeOg" name="update" specification="_hSzbAJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_hS6IuZAREeOq6NMfztjeOg" name="arg0" type="_BOw2wZAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_hS6IupAREeOq6NMfztjeOg" name="arg1" type="_Vb-W85AREeOq6NMfztjeOg"/>
          <language>java</language>
          <body>if(arg0 instanceof SimulationController_UI) {&#xD;
			if(arg1 instanceof String[]) {&#xD;
				String[] complexMessage = (String[]) arg1;&#xD;
				if(complexMessage[0].compareTo(SimulationController_UI.THREAD_COMPLETE) == 0) {&#xD;
					int threadsComplete = Integer.valueOf(complexMessage[1]);&#xD;
					updateSimulationThreadComplete(threadsComplete);&#xD;
					notifyObservers(new String[] {THREAD_COMPLETE, threadsComplete + &quot;&quot;});&#xD;
				} else if(complexMessage[0].compareTo(SimulationController_UI.UPDATE_PERCENT) == 0) {&#xD;
					double percentComplete = Double.valueOf(complexMessage[1]);&#xD;
					updateSimulationPercent(percentComplete);&#xD;
				} else if(complexMessage[0].compareTo(SimulationController_UI.MESSAGE) == 0){&#xD;
					setChanged();&#xD;
					notifyObservers(complexMessage);&#xD;
				}&#xD;
			} else if(arg1 instanceof String) {&#xD;
				String message = (String) arg1;&#xD;
				if(message.compareTo(SimulationController_UI.ALL_THREADS_KILLED) == 0) {&#xD;
					terminate();&#xD;
					setChanged();&#xD;
					notifyObservers(new String[] {SIMULATION_TERMINATED});&#xD;
				} else if(message.compareTo(SimulationController_UI.ALL_THREADS_COMPLETE) == 0) {&#xD;
					setChanged();&#xD;
					notifyObservers(new String[] {SIMULATION_COMPLETE});&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_hSiVQJAREeOq6NMfztjeOg" name="RunningSimulationPanel" method="_hS5hoJAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_hSiVQZAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_hSiVQpAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_hSiVQ5AREeOq6NMfztjeOg" type="_dRh98JAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_hSiVRJAREeOq6NMfztjeOg" name="getBox" method="_hS5hopAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_hSyz8JAREeOq6NMfztjeOg" type="_dRKxkpAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_hSi8UJAREeOq6NMfztjeOg" name="execute" method="_hS5hppAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_hSi8UZAREeOq6NMfztjeOg" name="terminate" method="_hS5hp5AREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_hSi8UpAREeOq6NMfztjeOg" name="resetLabels" visibility="private" method="_hS5hqJAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_hSi8U5AREeOq6NMfztjeOg" name="setupPanel" method="_hS6IsJAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_hSi8VJAREeOq6NMfztjeOg" name="addSimulationController" visibility="private" method="_hS6IsZAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_hSjjYJAREeOq6NMfztjeOg" name="removeSimulation" method="_hS6IspAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_hSjjYZAREeOq6NMfztjeOg" name="idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hSjjYpAREeOq6NMfztjeOg" name="updateSimulationThreadComplete" visibility="private" method="_hS6ItJAREeOq6NMfztjeOg">
          <ownedComment xmi:id="_hS6vw5AREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param idx number of completed simulations</body>
          </ownedComment>
          <ownedParameter xmi:id="_hSjjY5AREeOq6NMfztjeOg" name="threadsComplete">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hSjjZJAREeOq6NMfztjeOg" name="updateSimulationPercent" visibility="private" method="_hS6ItpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_hSjjZZAREeOq6NMfztjeOg" name="percentFinished">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_hSyz8ZAREeOq6NMfztjeOg" name="initialize" method="_hS5hpJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_hSyz8pAREeOq6NMfztjeOg" name="sc" type="_BOxd0ZAREeOq6NMfztjeOg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_hSzbAJAREeOq6NMfztjeOg" name="update" method="_hS6IuJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_hSzbAZAREeOq6NMfztjeOg" name="arg0" type="_BOw2wZAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_hSzbApAREeOq6NMfztjeOg" name="arg1" type="_Vb-W85AREeOq6NMfztjeOg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSDiYJAREeOq6NMfztjeOg" name="" memberEnd="_dSDiYZAREeOq6NMfztjeOg _dRtkIJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSDiYZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSDiYJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSDiY5AREeOq6NMfztjeOg" name="" memberEnd="_dSDiZJAREeOq6NMfztjeOg _dRtkIpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSDiZJAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSDiY5AREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSEJcZAREeOq6NMfztjeOg" name="" memberEnd="_dSEJcpAREeOq6NMfztjeOg _dRtkJJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSEJcpAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSEJcZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSEJdJAREeOq6NMfztjeOg" name="" memberEnd="_dSEJdZAREeOq6NMfztjeOg _dRuLMZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSEJdZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSEJdJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSEwgZAREeOq6NMfztjeOg" name="" memberEnd="_dSEwgpAREeOq6NMfztjeOg _dRuLM5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSEwgpAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSEwgZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSEwhJAREeOq6NMfztjeOg" name="" memberEnd="_dSEwhZAREeOq6NMfztjeOg _dRuLNZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSEwhZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSEwhJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSFXkJAREeOq6NMfztjeOg" name="" memberEnd="_dSFXkZAREeOq6NMfztjeOg _dRuyQZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSFXkZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSFXkJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSFXk5AREeOq6NMfztjeOg" name="" memberEnd="_dSFXlJAREeOq6NMfztjeOg _dRuyQ5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSFXlJAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSFXk5AREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSFXlpAREeOq6NMfztjeOg" name="" memberEnd="_dSFXl5AREeOq6NMfztjeOg _dRvZUJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSFXl5AREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSFXlpAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSF-oZAREeOq6NMfztjeOg" name="" memberEnd="_dSF-opAREeOq6NMfztjeOg _dRvZU5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSF-opAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSF-oZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSF-pJAREeOq6NMfztjeOg" name="" memberEnd="_dSF-pZAREeOq6NMfztjeOg _dRwAYZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSF-pZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSF-pJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSGlsZAREeOq6NMfztjeOg" name="" memberEnd="_dSGlspAREeOq6NMfztjeOg _dRwAZJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSGlspAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSGlsZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSGltJAREeOq6NMfztjeOg" name="" memberEnd="_dSGltZAREeOq6NMfztjeOg _dRwncpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSGltZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSGltJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSHMwZAREeOq6NMfztjeOg" name="" memberEnd="_dSHMwpAREeOq6NMfztjeOg _dRwndJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSHMwpAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSHMwZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSHMxJAREeOq6NMfztjeOg" name="" memberEnd="_dSHMxZAREeOq6NMfztjeOg _dRxOgZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSHMxZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSHMxJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSHz0ZAREeOq6NMfztjeOg" name="" memberEnd="_dSHz0pAREeOq6NMfztjeOg _dRxOg5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSHz0pAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSHz0ZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSHz1JAREeOq6NMfztjeOg" name="" memberEnd="_dSHz1ZAREeOq6NMfztjeOg _dRx1kJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSHz1ZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSHz1JAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSIa4ZAREeOq6NMfztjeOg" name="" memberEnd="_dSIa4pAREeOq6NMfztjeOg _dRx1k5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSIa4pAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSIa4ZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSIa5JAREeOq6NMfztjeOg" name="" memberEnd="_dSIa5ZAREeOq6NMfztjeOg _dRx1lpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSIa5ZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSIa5JAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSIa55AREeOq6NMfztjeOg" name="" memberEnd="_dSIa6JAREeOq6NMfztjeOg _dRycopAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSIa6JAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSIa55AREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSJB8ZAREeOq6NMfztjeOg" name="" memberEnd="_dSJB8pAREeOq6NMfztjeOg _dRycpZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSJB8pAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSJB8ZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSJB9JAREeOq6NMfztjeOg" name="" memberEnd="_dSJB9ZAREeOq6NMfztjeOg _dRzDsZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSJB9ZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSJB9JAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSJpAZAREeOq6NMfztjeOg" name="" memberEnd="_dSJpApAREeOq6NMfztjeOg _dRzDtJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSJpApAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSJpAZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSJpBJAREeOq6NMfztjeOg" name="" memberEnd="_dSJpBZAREeOq6NMfztjeOg _dRzDt5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSJpBZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSJpBJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSKQEZAREeOq6NMfztjeOg" name="" memberEnd="_dSKQEpAREeOq6NMfztjeOg _dRzqwpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSKQEpAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSKQEZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSKQFJAREeOq6NMfztjeOg" name="" memberEnd="_dSKQFZAREeOq6NMfztjeOg _dRzqxJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSKQFZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSKQFJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSK3IJAREeOq6NMfztjeOg" name="" memberEnd="_dSK3IZAREeOq6NMfztjeOg _dR80sJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSK3IZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSK3IJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSK3I5AREeOq6NMfztjeOg" name="" memberEnd="_dSK3JJAREeOq6NMfztjeOg _dR80s5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSK3JJAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSK3I5AREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSLeMJAREeOq6NMfztjeOg" name="" memberEnd="_dSLeMZAREeOq6NMfztjeOg _dR9bwJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSLeMZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSLeMJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSLeM5AREeOq6NMfztjeOg" name="" memberEnd="_dSLeNJAREeOq6NMfztjeOg _dR9bw5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSLeNJAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSLeM5AREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSLeNpAREeOq6NMfztjeOg" name="" memberEnd="_dSLeN5AREeOq6NMfztjeOg _dR9bxpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSLeN5AREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSLeNpAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSMFQZAREeOq6NMfztjeOg" name="" memberEnd="_dSMFQpAREeOq6NMfztjeOg _dR-C0pAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSMFQpAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSMFQZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSMFRJAREeOq6NMfztjeOg" name="" memberEnd="_dSMFRZAREeOq6NMfztjeOg _dR-C1ZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSMFRZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSMFRJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSMsUZAREeOq6NMfztjeOg" name="" memberEnd="_dSMsUpAREeOq6NMfztjeOg _dR-p4ZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSMsUpAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSMsUZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSMsVJAREeOq6NMfztjeOg" name="" memberEnd="_dSMsVZAREeOq6NMfztjeOg _dR-p5JAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSMsVZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSMsVJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_dSNTYJAREeOq6NMfztjeOg" name="" memberEnd="_dSNTYZAREeOq6NMfztjeOg _dR-p55AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_dSNTYZAREeOq6NMfztjeOg" name="" type="_dPA1cJAREeOq6NMfztjeOg" association="_dSNTYJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_feVzwJAREeOq6NMfztjeOg" name="UIViewer">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_feZeIJAREeOq6NMfztjeOg" name="main" specification="_feVzwZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_feZeIZAREeOq6NMfztjeOg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_feZeIpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>try {&#xD;
	        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());&#xD;
	    }catch(Exception ex) {&#xD;
	        ex.printStackTrace();&#xD;
	    }		&#xD;
		javax.swing.SwingUtilities.invokeLater(new Runnable() {&#xD;
         public void run() {&#xD;
             new UI();&#xD;
         }&#xD;
     });&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_feVzwZAREeOq6NMfztjeOg" name="main" isStatic="true" method="_feZeIJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_feWa0JAREeOq6NMfztjeOg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_feWa0ZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_hS8k8JAREeOq6NMfztjeOg" name="" memberEnd="_hS8k8ZAREeOq6NMfztjeOg _hS13QJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_hS8k8ZAREeOq6NMfztjeOg" name="" type="_dRh98JAREeOq6NMfztjeOg" association="_hS8k8JAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_hS8k85AREeOq6NMfztjeOg" name="" memberEnd="_hS8k9JAREeOq6NMfztjeOg _hS2eUZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_hS8k9JAREeOq6NMfztjeOg" name="" type="_dRh98JAREeOq6NMfztjeOg" association="_hS8k85AREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_hS9MAJAREeOq6NMfztjeOg" name="" memberEnd="_hS9MAZAREeOq6NMfztjeOg _hS2eU5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_hS9MAZAREeOq6NMfztjeOg" name="" type="_dRh98JAREeOq6NMfztjeOg" association="_hS9MAJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_hS9MA5AREeOq6NMfztjeOg" name="" memberEnd="_hS9MBJAREeOq6NMfztjeOg _hS3FYJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_hS9MBJAREeOq6NMfztjeOg" name="" type="_dRh98JAREeOq6NMfztjeOg" association="_hS9MA5AREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_hS9MBpAREeOq6NMfztjeOg" name="" memberEnd="_hS9MB5AREeOq6NMfztjeOg _hS3FYpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_hS9MB5AREeOq6NMfztjeOg" name="" type="_dRh98JAREeOq6NMfztjeOg" association="_hS9MBpAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_hS9zEZAREeOq6NMfztjeOg" name="" memberEnd="_hS9zEpAREeOq6NMfztjeOg _hS3FZJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_hS9zEpAREeOq6NMfztjeOg" name="" type="_dRh98JAREeOq6NMfztjeOg" association="_hS9zEZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_hS9zFJAREeOq6NMfztjeOg" name="" memberEnd="_hS9zFZAREeOq6NMfztjeOg _hS3scZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_hS9zFZAREeOq6NMfztjeOg" name="" type="_dRh98JAREeOq6NMfztjeOg" association="_hS9zFJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_hS-aIZAREeOq6NMfztjeOg" name="" memberEnd="_hS-aIpAREeOq6NMfztjeOg _hS46kpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_hS-aIpAREeOq6NMfztjeOg" name="" type="_dRh98JAREeOq6NMfztjeOg" association="_hS-aIZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_hS-aJJAREeOq6NMfztjeOg" name="" memberEnd="_hS-aJZAREeOq6NMfztjeOg _hS6vwJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_hS-aJZAREeOq6NMfztjeOg" name="" type="_dRh98JAREeOq6NMfztjeOg" association="_hS-aJJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_XH7QgJATEeOq6NMfztjeOg" name="" memberEnd="_XH7QgZATEeOq6NMfztjeOg _XHvqUJATEeOq6NMfztjeOg">
        <ownedEnd xmi:id="_XH7QgZATEeOq6NMfztjeOg" name="" type="_BOxd0ZAREeOq6NMfztjeOg" association="_XH7QgJATEeOq6NMfztjeOg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_BM-uEJAREeOq6NMfztjeOg" name="simulation">
      <packagedElement xmi:type="uml:Class" xmi:id="_BN7wUJAREeOq6NMfztjeOg" clientDependency="_BPLGcZAREeOq6NMfztjeOg _BPLGcpAREeOq6NMfztjeOg" name="Simulation">
        <generalization xmi:id="_BPUQYJAREeOq6NMfztjeOg" general="_BOw2wZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_BPiS0JAREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_BPiS0ZAREeOq6NMfztjeOg" value="3062285315959996919L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BPi54JAREeOq6NMfztjeOg" name="numSimulations" visibility="private" isStatic="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_BPi54ZAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BPjg8JAREeOq6NMfztjeOg" name="sp" visibility="private" type="_BPLtgJAREeOq6NMfztjeOg" association="_BP8igJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_BPkIAJAREeOq6NMfztjeOg" name="cf" visibility="private" type="_BPMUkJAREeOq6NMfztjeOg" association="_BP9JkZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_BPkIApAREeOq6NMfztjeOg" name="sample" type="_BPM7oJAREeOq6NMfztjeOg" isReadOnly="true" association="_BP9JlJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_BPkvEJAREeOq6NMfztjeOg" name="r" visibility="private" type="_BOw2w5AREeOq6NMfztjeOg" association="_BP9woZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_BPlWIJAREeOq6NMfztjeOg" name="time" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BPlWIZAREeOq6NMfztjeOg" name="fractionComplete" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BPl9MJAREeOq6NMfztjeOg" name="boomFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_BPl9MZAREeOq6NMfztjeOg" value="1.5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BPmkQJAREeOq6NMfztjeOg" name="FINISHED" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_BPmkQZAREeOq6NMfztjeOg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BPmkQ5AREeOq6NMfztjeOg" name="MAX_ATTEMPTS" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_BPnLUJAREeOq6NMfztjeOg" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BPnLUpAREeOq6NMfztjeOg" name="output" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BPnyYZAREeOq6NMfztjeOg" name="mps" visibility="private" type="_BOtMYpAREeOq6NMfztjeOg" association="_BP9wpJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_BPoZcJAREeOq6NMfztjeOg" name="mps_movie" visibility="private" type="_BOtMYpAREeOq6NMfztjeOg" association="_BP-XsZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_BPpAgJAREeOq6NMfztjeOg" name="ps1" type="_BOvooJAREeOq6NMfztjeOg" association="_BP-XtJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_BPpAgpAREeOq6NMfztjeOg" name="keepRunning">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_BPpnkJAREeOq6NMfztjeOg" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BPpnkpAREeOq6NMfztjeOg" name="xyz" type="_BOtzc5AREeOq6NMfztjeOg" association="_BP--wZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_BPqOoZAREeOq6NMfztjeOg" name="simulationIndex" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BPq1sJAREeOq6NMfztjeOg" name="UPDATE_PERCENT" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_BPq1sZAREeOq6NMfztjeOg" value="SimulationController_UI.UPDATE_PERCENT"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BPq1s5AREeOq6NMfztjeOg" name="MESSAGE" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_BPrcwJAREeOq6NMfztjeOg" value="SimulationController_UI.MESSAGE"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BPrcwpAREeOq6NMfztjeOg" name="SIMULATION_COMPLETE" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_BPsD0JAREeOq6NMfztjeOg" value="&quot;simulation complete&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BPsD0pAREeOq6NMfztjeOg" name="SIMULATION_KILLED" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_BPsq4JAREeOq6NMfztjeOg" value="&quot; simulation killed&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_BPtR8JAREeOq6NMfztjeOg" name="idx" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_BPtR8ZAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_BPLGcZAREeOq6NMfztjeOg" client="_BN7wUJAREeOq6NMfztjeOg" supplier="_BPKfYZAREeOq6NMfztjeOg" contract="_BPKfYZAREeOq6NMfztjeOg"/>
        <interfaceRealization xmi:id="_BPLGcpAREeOq6NMfztjeOg" client="_BN7wUJAREeOq6NMfztjeOg" supplier="_BOvoopAREeOq6NMfztjeOg" contract="_BOvoopAREeOq6NMfztjeOg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BPzYkJAREeOq6NMfztjeOg" name="Simulation" specification="_BPQmAJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BPzYkZAREeOq6NMfztjeOg" name="sp" type="_BPLtgJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_BPzYkpAREeOq6NMfztjeOg" name="simulationIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_BPzYk5AREeOq6NMfztjeOg" type="_BN7wUJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>this.simulationIndex = simulationIndex;&#xD;
		this.sp = sp;&#xD;
		output = sp.isTransformed();&#xD;
		sample = new Sample(sp.getSampleShape(), sp.getSampleUnitAxes(), sp.getSampleUnitsPerAxis());&#xD;
		cf = new CrystalFactory(sample, sp);&#xD;
		r = new Random();&#xD;
		time = 0;&#xD;
		fractionComplete = 0;&#xD;
		if(output) {&#xD;
			mps = new MyPrintStream(sp.getCurrentTransformationFile(simulationIndex));&#xD;
		}&#xD;
		if(sp.isOutputtingMovie())&#xD;
			mps_movie = new MyPrintStream(sp.getMoviesFile());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BPzYlJAREeOq6NMfztjeOg" name="run" specification="_BODFEJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>if(output) {mps.print(sp.toString());}&#xD;
		int totalTransformed = 0;&#xD;
		int noGrowth = 0;&#xD;
		double unoccupiedPercent;&#xD;
		int[] newVolume;&#xD;
		int unoccupied = 0;&#xD;
		time = sp.getStartTime();&#xD;
		for(int i = 0; i &lt; sp.getNucInitVal(); i++) {&#xD;
			int val = sample.registerNewCrystal(cf.getNewCrystal(time));&#xD;
			//int[] axes = sample.getUnitsPerAxis();&#xD;
			//int val = sample.registerNewCrystal(cf.getNewCrystal(time, new JVector(axes[0], axes[0], axes[2]/2)));&#xD;
			while(val == Sample.NUCLEATION_INSIDE_ANOTHER) {&#xD;
				val = sample.registerNewCrystal(cf.getNewCrystal(time));&#xD;
				//val = sample.registerNewCrystal(cf.getNewCrystal(time, new JVector(axes[0], axes[0], axes[2]/2)));&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		int lastPercent = 0;&#xD;
		String msg;&#xD;
		try {&#xD;
			while(!sp.getTerm().terminate(sp, fractionComplete) &amp;&amp; keepRunning) {// &amp;&amp; noGrowth &lt; 30) {&#xD;
				int attempts = 0;&#xD;
	 			if(nucleate()) {&#xD;
	 				int val = sample.registerNewCrystal(cf.getNewCrystal(time));&#xD;
	 				while(val == Sample.NUCLEATION_INSIDE_ANOTHER &amp;&amp; attempts &lt; MAX_ATTEMPTS) {&#xD;
	 					val = sample.registerNewCrystal(cf.getNewCrystal(time));&#xD;
	 	 				attempts++;&#xD;
	 				}&#xD;
	 				if(attempts == MAX_ATTEMPTS) {&#xD;
	 					JVector location = sample.getRandomNucLoc();&#xD;
	 					if(location != null)&#xD;
	 						val = sample.registerNewCrystal(cf.getNewCrystal(time, location));&#xD;
	 				}&#xD;
				}	&#xD;
	 			attempts = 0;&#xD;
				sample.grow(time);&#xD;
				newVolume = sample.check(time);&#xD;
				//newVolume = sample.check_parallel_ByLattice(time);&#xD;
				totalTransformed += newVolume[1];&#xD;
				unoccupied = newVolume[2];&#xD;
				if(newVolume[1] == 0) {&#xD;
					noGrowth++;&#xD;
				} else &#xD;
					noGrowth = 0;&#xD;
				if(output) {mps.println(time + &quot;\t&quot; + StringConverter.arrayToTabString(newVolume));}&#xD;
				fractionComplete = ( (double) totalTransformed ) / ( (double) newVolume[0] );&#xD;
				unoccupiedPercent = ( (double) unoccupied ) / ( (double) newVolume[0] );&#xD;
				setChanged();&#xD;
				notifyObservers(new String[] {UPDATE_PERCENT, fractionComplete + &quot;&quot;});&#xD;
	//			setChanged();&#xD;
	//			notifyObservers(new String[] {&quot;update&quot;, msg});&#xD;
				if(sp.isOutputtingMovie()) {&#xD;
					outputMovie();&#xD;
//					outputMovie2(time);&#xD;
				}&#xD;
				time += sp.getTimeStep();&#xD;
				setChanged();&#xD;
				String message = &quot;Current simulation time: &quot; + time;&#xD;
				message += &quot;\tNumber of crystals: &quot; + sample.getCrystalArray().length;&#xD;
				notifyObservers(new String[] {MESSAGE, message});&#xD;
			}&#xD;
		} catch(Exception e) {&#xD;
			keepRunning = false;&#xD;
			String errormsg = StringConverter.arrayToNewLineString(e.getStackTrace());&#xD;
			notifyObservers(new String[] {MESSAGE, &quot;Error:&quot; + e.getLocalizedMessage()});&#xD;
		}&#xD;
		if(!keepRunning) {&#xD;
			setChanged();&#xD;
			mps.close();&#xD;
			notifyObservers(SIMULATION_KILLED);&#xD;
		} else {&#xD;
			if(output) {&#xD;
				mps.print(&quot;\n\nSimulation Finished at: &quot; + (new Date()).toString());&#xD;
			}&#xD;
			try {&#xD;
				setChanged();&#xD;
				notifyObservers(new String[] {MESSAGE, &quot;Writing XYZ to file: &quot; + sp.getCurrentXYZFile(simulationIndex).getAbsolutePath()});&#xD;
				printXYZ();&#xD;
			} catch(Exception e) {&#xD;
				&#xD;
			}&#xD;
			if(output) {mps.print(finished());}&#xD;
			//(new Analysis()).analyze(this);&#xD;
			setChanged();&#xD;
			notifyObservers(new String[] {SIMULATION_COMPLETE, simulationIndex + &quot;&quot;});&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BPz_oJAREeOq6NMfztjeOg" name="finished" specification="_BOETMpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BPz_oZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String s = &quot;\n\nCrystal Information: \n&quot;;&#xD;
		Iterator&lt;Crystal> iter = sample.getCrystalIterator();&#xD;
		while(iter.hasNext()) {&#xD;
			s += &quot;\n&quot; + iter.next().toString() + &quot;\n&quot;;&#xD;
		}&#xD;
		&#xD;
		return s;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BPz_opAREeOq6NMfztjeOg" name="nucleate" specification="_BOE6QZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BPz_o5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if(sp.getNucContVal() > 0 &amp;&amp; &#xD;
				cf.getNumCrystals() &lt; (char) sp.getMaxNumCrystals() &amp;&amp; &#xD;
				r.nextDouble() &lt; (sp.getNucContVal() * sp.getTimeStep())) {&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BPz_pJAREeOq6NMfztjeOg" name="getTotalVolume" specification="_BOFhUJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BPz_pZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
          <language>java</language>
          <body>return sample.getTotalVolume(); </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BPz_ppAREeOq6NMfztjeOg" name="printXYZ" specification="_BOFhUpAREeOq6NMfztjeOg">
          <language>java</language>
          <body>if(sp.isOutputtingXyz()) {&#xD;
			FileOutputStream fos = null;&#xD;
			try {&#xD;
				fos = new FileOutputStream(sp.getCurrentXYZFile(simulationIndex));&#xD;
			} catch (FileNotFoundException e) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
			PrintStream ps = new PrintStream(fos);&#xD;
			&#xD;
			ps.println(sample.getTotalVolume());&#xD;
			ps.println(&quot;0&quot;);&#xD;
			sample.printXYZ(ps, false, boomFactor);&#xD;
//			sample.explode(ps, boomFactor);&#xD;
			ps.close();&#xD;
			try {&#xD;
				fos.close();&#xD;
			} catch (IOException e) {&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BPz_p5AREeOq6NMfztjeOg" name="getSSP" specification="_BOGIYJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BPz_qJAREeOq6NMfztjeOg" type="_BPLtgJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>return sp; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BP0msJAREeOq6NMfztjeOg" name="setRepeatParameters" specification="_BPSbMJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BP0msZAREeOq6NMfztjeOg" name="nucLocations" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BP0mspAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_BP0ms5AREeOq6NMfztjeOg" name="nucOrientations" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BP0mtJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_BP0mtZAREeOq6NMfztjeOg" name="nucTimes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BP0mtpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>sp.setNucInitVal(0);&#xD;
		sp.setNucContVal(0);&#xD;
		for(int i = 0; i &lt; nucLocations.length; i++) {&#xD;
			sample.registerNewCrystal(cf.getNewCrystal(nucTimes[i], nucLocations[i], nucOrientations[i]));&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BP0mt5AREeOq6NMfztjeOg" name="outputMovie" specification="_BOHWgJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>PrintStream ps = mps_movie.getPrintStream();&#xD;
		ps.println(sample.getTotalVolume());&#xD;
		ps.println(idx++);&#xD;
		sample.printXYZ(ps, sp.isOutputtingMovie(), boomFactor);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BP0muJAREeOq6NMfztjeOg" name="nullify" specification="_BOH9kJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>closeStreams();&#xD;
		sp.nullify();&#xD;
		mps = null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BP0muZAREeOq6NMfztjeOg" name="closeStreams" specification="_BOH9kZAREeOq6NMfztjeOg">
          <language>java</language>
          <body>if(output) {&#xD;
			if(mps != null) {&#xD;
				mps.close();&#xD;
				mps = null;&#xD;
			}&#xD;
			if(mps_movie != null) {&#xD;
				mps_movie.close();&#xD;
				mps_movie = null;&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BP1NwJAREeOq6NMfztjeOg" name="getPrintStream" specification="_BOIkoJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BP1NwZAREeOq6NMfztjeOg" type="_BOtMYpAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>return mps;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_BP1NwpAREeOq6NMfztjeOg" name="setPrintStream" specification="_BPTpUZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BP1Nw5AREeOq6NMfztjeOg" name="ps" type="_BOtMYpAREeOq6NMfztjeOg"/>
          <language>java</language>
          <body>this.mps = ps;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_BODFEJAREeOq6NMfztjeOg" name="run" method="_BPzYlJAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_BOETMpAREeOq6NMfztjeOg" name="finished" method="_BPz_oJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BOE6QJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_BOE6QZAREeOq6NMfztjeOg" name="nucleate" visibility="private" method="_BPz_opAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BOE6QpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_BOFhUJAREeOq6NMfztjeOg" name="getTotalVolume" method="_BPz_pJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BOFhUZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_BOFhUpAREeOq6NMfztjeOg" name="printXYZ" visibility="private" method="_BPz_ppAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_BOGIYJAREeOq6NMfztjeOg" name="getSSP" method="_BPz_p5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BPR0IJAREeOq6NMfztjeOg" type="_BPLtgJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_BOHWgJAREeOq6NMfztjeOg" name="outputMovie" visibility="private" method="_BP0mt5AREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_BOH9kJAREeOq6NMfztjeOg" name="nullify" method="_BP0muJAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_BOH9kZAREeOq6NMfztjeOg" name="closeStreams" method="_BP0muZAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_BOIkoJAREeOq6NMfztjeOg" name="getPrintStream" method="_BP1NwJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BPTpUJAREeOq6NMfztjeOg" type="_BOtMYpAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_BPQmAJAREeOq6NMfztjeOg" name="Simulation" method="_BPzYkJAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_BPRNEpAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_BPRNE5AREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_BPRNEJAREeOq6NMfztjeOg" name="sp" type="_BPLtgJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_BPRNEZAREeOq6NMfztjeOg" name="simulationIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_BPRNFJAREeOq6NMfztjeOg" type="_BN7wUJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_BPSbMJAREeOq6NMfztjeOg" name="setRepeatParameters" method="_BP0msJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BPSbMZAREeOq6NMfztjeOg" name="nucLocations" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BPSbNJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_BPSbMpAREeOq6NMfztjeOg" name="nucOrientations" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BPTCQJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_BPSbM5AREeOq6NMfztjeOg" name="nucTimes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_BPTCQpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_BPTpUZAREeOq6NMfztjeOg" name="setPrintStream" method="_BP1NwpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_BPTpUpAREeOq6NMfztjeOg" name="ps" type="_BOtMYpAREeOq6NMfztjeOg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_BPLtgJAREeOq6NMfztjeOg" clientDependency="_VbufUpAREeOq6NMfztjeOg _VcFEoZAREeOq6NMfztjeOg" name="SimulSetupParams">
        <ownedAttribute xmi:id="_VccRAJAREeOq6NMfztjeOg" name="idx" visibility="private" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vcc4EZAREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vcc4EpAREeOq6NMfztjeOg" value="1229179300198841270L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vcc4E5AREeOq6NMfztjeOg" name="instances" visibility="private" isStatic="true">
          <eAnnotations xmi:id="_Vcc4FJAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Vcc4FZAREeOq6NMfztjeOg" key="volatile"/>
          </eAnnotations>
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vcc4FpAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcdfIJAREeOq6NMfztjeOg" name="fittableParameterSelection" type="_VZ2QAJAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcdfIZAREeOq6NMfztjeOg" value="FittableParametersOptions.FIT_K_T"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcdfIpAREeOq6NMfztjeOg" name="dimensionalitySelection" type="_VZx-kJAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcdfI5AREeOq6NMfztjeOg" value="DimensionalityOptions.FIXED_TO_VALUE"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcdfJJAREeOq6NMfztjeOg" name="emailWhenDone" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcdfJZAREeOq6NMfztjeOg" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VceGMJAREeOq6NMfztjeOg" name="emailAddress" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VceGMZAREeOq6NMfztjeOg" value="&quot;&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VceGM5AREeOq6NMfztjeOg" name="emailUsername" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VceGNJAREeOq6NMfztjeOg" value="&quot;&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VceGNpAREeOq6NMfztjeOg" name="emailPassword" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VceGN5AREeOq6NMfztjeOg" value="&quot;&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcetQZAREeOq6NMfztjeOg" name="initNuc" type="_VZ7vkJAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcetQpAREeOq6NMfztjeOg" value="Nucleation.Initial"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcetQ5AREeOq6NMfztjeOg" name="nucInitVal">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcetRJAREeOq6NMfztjeOg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcetRZAREeOq6NMfztjeOg" name="volumeIncrement">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcetRpAREeOq6NMfztjeOg" value="3201277"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcfUUJAREeOq6NMfztjeOg" name="numberOfSimulationsToRun">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcfUUZAREeOq6NMfztjeOg" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcfUUpAREeOq6NMfztjeOg" name="contNuc" type="_VZ7vkJAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcfUU5AREeOq6NMfztjeOg" value="Nucleation.Continuous"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcfUVJAREeOq6NMfztjeOg" name="nucContVal">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcfUVZAREeOq6NMfztjeOg" value=".025"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcfUVpAREeOq6NMfztjeOg" name="nucOrient" type="_VZ-L0pAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcfUV5AREeOq6NMfztjeOg" value="NucleationOrientation.Random"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vcf7YJAREeOq6NMfztjeOg" name="nucOrientVal" type="_BOtMYJAREeOq6NMfztjeOg" association="_VdA4xJAREeOq6NMfztjeOg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Vcf7YZAREeOq6NMfztjeOg" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vcf7Y5AREeOq6NMfztjeOg" value="JVector.axes100"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vcf7ZJAREeOq6NMfztjeOg" name="axialGrowthRates">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Vcf7ZZAREeOq6NMfztjeOg" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vcf7Z5AREeOq6NMfztjeOg" value="{ .5, .5, .5 }"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcgicJAREeOq6NMfztjeOg" name="initCrystalDimensions">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcgicZAREeOq6NMfztjeOg" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vcgic5AREeOq6NMfztjeOg" value="{ 0, 0, 0 }"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcgidJAREeOq6NMfztjeOg" name="nucLoc" type="_VZ9kwJAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcgidZAREeOq6NMfztjeOg" value="NucleationLocation.Random"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcgidpAREeOq6NMfztjeOg" name="nucLocOptions" type="_BOtMYJAREeOq6NMfztjeOg" association="_VdBf0ZAREeOq6NMfztjeOg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Vcgid5AREeOq6NMfztjeOg" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VchJgJAREeOq6NMfztjeOg" value="JVector.cube_corners"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VchJgZAREeOq6NMfztjeOg" name="nucShape" type="_VbhD85AREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VchJgpAREeOq6NMfztjeOg" value="ShapeTypes.Cubic"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VchJg5AREeOq6NMfztjeOg" name="term" type="_VacF4JAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VchJhJAREeOq6NMfztjeOg" value="Termination.FractionComplete"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VchJhZAREeOq6NMfztjeOg" name="termVal" type="_Vb-W85AREeOq6NMfztjeOg" association="_VdBf1JAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VchJhpAREeOq6NMfztjeOg" value="new Double(1)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VchJh5AREeOq6NMfztjeOg" name="sampleShape" type="_VbhD85AREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VchwkJAREeOq6NMfztjeOg" value="ShapeTypes.Cylindrical"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VchwkZAREeOq6NMfztjeOg" name="exp" type="_VcGSwJAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VchwkpAREeOq6NMfztjeOg" value="ExperimentalSample.APS_5mm"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vchwk5AREeOq6NMfztjeOg" name="expVal">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VchwlJAREeOq6NMfztjeOg" value="12.2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VchwlZAREeOq6NMfztjeOg" name="sampleUnitAxes" type="_BOtMYJAREeOq6NMfztjeOg" association="_VdCG4ZAREeOq6NMfztjeOg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VchwlpAREeOq6NMfztjeOg" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VciXoZAREeOq6NMfztjeOg" value="JVector.get100FamilyUnique()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VciXopAREeOq6NMfztjeOg" name="sampleUnitsPerAxis">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VciXo5AREeOq6NMfztjeOg" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VciXpZAREeOq6NMfztjeOg" value="{50, 50, 50}"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VciXppAREeOq6NMfztjeOg" name="folderOutput" type="_BOtzc5AREeOq6NMfztjeOg" association="_VdCG5JAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vci-sJAREeOq6NMfztjeOg" value="new File(&quot;output&quot;)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vci-tZAREeOq6NMfztjeOg" name="fileRoot" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcjlwJAREeOq6NMfztjeOg" value="&quot;CrystallizationSimulation&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcjlwpAREeOq6NMfztjeOg" name="ais" visibility="private" type="_VbtRMJAREeOq6NMfztjeOg" association="_VdCt8ZAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vcjlw5AREeOq6NMfztjeOg" value="new AlphabeticIndexingSystem('a')"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcjlxZAREeOq6NMfztjeOg" name="nis" visibility="private" type="_Vbt4QJAREeOq6NMfztjeOg" association="_VdCt9JAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcjlxpAREeOq6NMfztjeOg" value="new NumericIndexingSystem()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VckM0ZAREeOq6NMfztjeOg" name="indexingSystemInUse" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VckM0pAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VckM1JAREeOq6NMfztjeOg" name="currentFileRoot">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VckM1ZAREeOq6NMfztjeOg" value="fileRoot"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VckM1pAREeOq6NMfztjeOg" name="zipFits" visibility="private" type="_Vbt4QpAREeOq6NMfztjeOg" association="_VdDVAZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_Vckz4ZAREeOq6NMfztjeOg" name="output">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vckz4pAREeOq6NMfztjeOg" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vckz45AREeOq6NMfztjeOg" name="fit">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vckz5JAREeOq6NMfztjeOg" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vckz5ZAREeOq6NMfztjeOg" name="xyz" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vckz5pAREeOq6NMfztjeOg" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vcla8ZAREeOq6NMfztjeOg" name="movie" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vcla8pAREeOq6NMfztjeOg" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vcla9JAREeOq6NMfztjeOg" name="obj">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vcla9ZAREeOq6NMfztjeOg" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vcla9pAREeOq6NMfztjeOg" name="transformed">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vcla95AREeOq6NMfztjeOg" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcmCAJAREeOq6NMfztjeOg" name="timeStep">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcmCAZAREeOq6NMfztjeOg" value="0.5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcmCApAREeOq6NMfztjeOg" name="startTime">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcmCA5AREeOq6NMfztjeOg" value="100"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcmCBJAREeOq6NMfztjeOg" name="maxNumCrystals">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcmCBZAREeOq6NMfztjeOg" value="Short.MAX_VALUE"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcmCBpAREeOq6NMfztjeOg" name="instancesToLaunch" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcmpEJAREeOq6NMfztjeOg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcmpEpAREeOq6NMfztjeOg" name="totalVolume" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcmpFJAREeOq6NMfztjeOg" name="alphaMin">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcmpFZAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcmpFpAREeOq6NMfztjeOg" name="alphaMax">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcnQIJAREeOq6NMfztjeOg" value="0.5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcnQIZAREeOq6NMfztjeOg" name="init_k_factor">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcnQIpAREeOq6NMfztjeOg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcnQI5AREeOq6NMfztjeOg" name="init_n">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcnQJJAREeOq6NMfztjeOg" value="3"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcnQJZAREeOq6NMfztjeOg" name="init_tau" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcnQJpAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vcn3MZAREeOq6NMfztjeOg" name="fittingType" type="_VZ3eIpAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vcn3MpAREeOq6NMfztjeOg" value="FittingType.sigmoidal"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_VbufUpAREeOq6NMfztjeOg" client="_BPLtgJAREeOq6NMfztjeOg" supplier="_BOvoopAREeOq6NMfztjeOg" contract="_BOvoopAREeOq6NMfztjeOg"/>
        <interfaceRealization xmi:id="_VcFEoZAREeOq6NMfztjeOg" client="_BPLtgJAREeOq6NMfztjeOg" supplier="_VcEdkJAREeOq6NMfztjeOg" contract="_VcEdkJAREeOq6NMfztjeOg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcxoMJAREeOq6NMfztjeOg" name="SimulSetupParams" specification="_VaKZEJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcxoMZAREeOq6NMfztjeOg" type="_BPLtgJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>idx = instances++;&#xD;
		System.out.println(&quot;total instances of simulParams = &quot; + instances);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcxoMpAREeOq6NMfztjeOg" name="nullify" specification="_VaKZFJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>zipFits = null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcxoN5AREeOq6NMfztjeOg" name="setIndexingSystemToUse" specification="_VaMOQJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcxoOJAREeOq6NMfztjeOg" name="whichToUse">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>indexingSystemInUse = whichToUse;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcyPQJAREeOq6NMfztjeOg" name="copyAndIncrement" specification="_VbwUgJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcyPQZAREeOq6NMfztjeOg" name="ssp" type="_BPLtgJAREeOq6NMfztjeOg"/>
          <language>java</language>
          <body>copy(ssp);&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcyPQpAREeOq6NMfztjeOg" name="copy" specification="_Vbw7kJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcyPQ5AREeOq6NMfztjeOg" name="ssp" type="_BPLtgJAREeOq6NMfztjeOg"/>
          <language>java</language>
          <body>emailWhenDone = ssp.emailWhenDone;&#xD;
		emailAddress = String.copyValueOf(ssp.emailAddress.toCharArray());&#xD;
		emailUsername = String.copyValueOf(ssp.emailUsername.toCharArray());&#xD;
		emailPassword = String.copyValueOf(ssp.emailPassword.toCharArray());&#xD;
		&#xD;
		setInitNuc(ssp.getInitNuc());&#xD;
		setNucInitVal(ssp.getNucInitVal());&#xD;
		setVolumeIncrement(ssp.getVolumeIncrement());&#xD;
		&#xD;
		setContNuc(ssp.getContNuc());&#xD;
		setNucContVal(ssp.getNucContVal());&#xD;
		&#xD;
		setNucOrient(ssp.getNucOrient());&#xD;
		if(ssp.getNucOrientVal() != null) {&#xD;
			setNucOrientVal(new JVector[ssp.getNucOrientVal().length][]);&#xD;
			for(int i = 0; i &lt; getNucOrientVal().length; i++) {&#xD;
				getNucOrientVal()[i] = new JVector[ssp.getNucOrientVal()[i].length];&#xD;
				for(int j = 0; j &lt; getNucOrientVal()[i].length; j++) {&#xD;
					getNucOrientVal()[i][j] = (JVector) ssp.getNucOrientVal()[i][j].clone();&#xD;
				}&#xD;
			}&#xD;
		} else {&#xD;
			setNucOrientVal(null);&#xD;
		}&#xD;
		&#xD;
		setAxialGrowthRates(Arrays.copyOf(ssp.getAxialGrowthRates(), ssp.getAxialGrowthRates().length));&#xD;
		setInitCrystalDimensions(Arrays.copyOf(ssp.getInitCrystalDimensions(), ssp.getInitCrystalDimensions().length));&#xD;
		&#xD;
		setNucLoc(ssp.getNucLoc());&#xD;
		if(ssp.getNucLocOptions() != null) {&#xD;
			setNucLocOptions(new JVector[ssp.getNucLocOptions().length]);&#xD;
			for(int i = 0; i &lt; getNucLocOptions().length; i++) {&#xD;
				getNucLocOptions()[i] = (JVector) ssp.getNucLocOptions()[i].clone();&#xD;
			}&#xD;
		} else {&#xD;
			setNucLocOptions(null);&#xD;
		}&#xD;
		&#xD;
		setNucShape(ssp.getNucShape());&#xD;
		&#xD;
		setTerm(ssp.getTerm());&#xD;
		setTermVal(ssp.getTermVal());&#xD;
		&#xD;
		setSampleShape(ssp.getSampleShape());&#xD;
		setExp(ssp.getExp());&#xD;
		setExpVal(ssp.getExpVal());&#xD;
		setSampleUnitAxes(new JVector[ssp.getSampleUnitAxes().length]);&#xD;
		for(int i = 0; i &lt; getSampleUnitAxes().length; i++) {&#xD;
			getSampleUnitAxes()[i] = (JVector) ssp.getSampleUnitAxes()[i].clone();&#xD;
		}&#xD;
		setSampleUnitsPerAxis(Arrays.copyOf(ssp.getSampleUnitsPerAxis(), ssp.getSampleUnitsPerAxis().length));&#xD;
		&#xD;
		folderOutput = new File(ssp.folderOutput.getAbsolutePath());&#xD;
		fileRoot = String.copyValueOf(ssp.fileRoot.toCharArray());&#xD;
		ais = (AlphabeticIndexingSystem) ssp.ais.clone();&#xD;
		nis = (NumericIndexingSystem) ssp.nis.clone();&#xD;
		&#xD;
		setCurrentFileRoot(String.copyValueOf(ssp.getCurrentFileRoot().toCharArray()));&#xD;
		&#xD;
&#xD;
		setOutput(ssp.isOutput());&#xD;
		setFit(ssp.isFit());&#xD;
		setXyz(ssp.isOutputtingXyz());&#xD;
		setMovie(ssp.isOutputtingMovie());&#xD;
		setObj(ssp.isObj());&#xD;
		setTransformed(ssp.isTransformed());&#xD;
		&#xD;
		&#xD;
		setTimeStep(ssp.getTimeStep());&#xD;
		setStartTime(ssp.getStartTime());&#xD;
		&#xD;
		setMaxNumCrystals(ssp.getMaxNumCrystals());	&#xD;
		&#xD;
		instancesToLaunch = ssp.instancesToLaunch;&#xD;
		&#xD;
		totalVolume = ssp.totalVolume;&#xD;
&#xD;
		setAlphaMin(ssp.getAlphaMin());&#xD;
		setAlphaMax(ssp.getAlphaMax());&#xD;
&#xD;
		setInit_k_factor(ssp.getInit_k_factor());&#xD;
		setInit_n(ssp.getInit_n());&#xD;
		init_tau = ssp.init_tau;&#xD;
		&#xD;
		zipFits = getZipPrinter_Fits();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcyPRJAREeOq6NMfztjeOg" name="updateFileRoot" specification="_VaNcYJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>String index = &quot;&quot;;&#xD;
		switch(indexingSystemInUse) {&#xD;
		case 0: &#xD;
			ais.update();&#xD;
			index = ais.getName();&#xD;
			break;&#xD;
		case 1:&#xD;
			nis.update();&#xD;
			index = nis.getName();&#xD;
			break;&#xD;
		default:&#xD;
			index = &quot;&quot;;&#xD;
			break;&#xD;
		}&#xD;
		setCurrentFileRoot(fileRoot + &quot;_&quot; + index);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcyPRZAREeOq6NMfztjeOg" name="getSampleAxes" specification="_VaNcYZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcyPRpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String s = &quot;&quot;;&#xD;
		switch(sampleShape) {&#xD;
		case Orthorhombic:&#xD;
			s += &quot;(a, b, c) = (&quot; + sampleUnitsPerAxis[0] + &quot;, &quot; + sampleUnitsPerAxis[1] + &quot;, &quot; + sampleUnitsPerAxis[2] + &quot;)&quot;;&#xD;
			return s;&#xD;
		case Tetragonal:&#xD;
			s += &quot;(a, c) = (&quot; + sampleUnitsPerAxis[0] + &quot;, &quot; + sampleUnitsPerAxis[2] + &quot;)&quot;;&#xD;
			return s;&#xD;
		case Cubic:&#xD;
			s += &quot;(a) =(&quot; + sampleUnitsPerAxis[0] + &quot;)&quot;;&#xD;
			return s;&#xD;
		case Spherical:&#xD;
			s += &quot;(r) = (&quot; + sampleUnitsPerAxis[0] + &quot;)&quot;;&#xD;
			return s;&#xD;
		case Cylindrical: &#xD;
			s += &quot;(r, h) = (&quot; + sampleUnitsPerAxis[0] + &quot;, &quot; + sampleUnitsPerAxis[2] + &quot;)&quot;;&#xD;
			return s;&#xD;
		}&#xD;
		return &quot;&quot;;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcyPR5AREeOq6NMfztjeOg" name="getAnalysisFile" specification="_VaODcZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcyPSJAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>File analysis = new File(getFolderOutput() + File.separator + getCurrentFileRoot() + &quot; -- automated fitting.txt&quot;);&#xD;
		return analysis;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcyPSZAREeOq6NMfztjeOg" name="getXYZsFolder" specification="_VaODcpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcyPSpAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>File xyzs = new File(getFolderOutput() + File.separator + getCurrentFileRoot() + &quot; -- structures&quot;);&#xD;
		boolean mkdir = xyzs.mkdir();&#xD;
		return xyzs;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcy2UJAREeOq6NMfztjeOg" name="getMoviesFile" specification="_VaODc5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcy2UZAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>File movies = new File(getFolderOutput() + File.separator + getCurrentFileRoot() + &quot; -- movie.xyz&quot;);&#xD;
		return movies;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcy2UpAREeOq6NMfztjeOg" name="getObjectsFile" specification="_VaOqgJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcy2U5AREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>File objects = new File(getFolderOutput() + File.separator + getCurrentFileRoot() + &quot; -- java object.obj&quot;);&#xD;
		return objects;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcy2VJAREeOq6NMfztjeOg" name="getTransformationsFolder" specification="_VaOqgZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcy2VZAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>File trans = new File(getFolderOutput() + File.separator + getCurrentFileRoot() + &quot; -- transformation files&quot;);&#xD;
		boolean mkdir = trans.mkdir();&#xD;
		return trans;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcy2VpAREeOq6NMfztjeOg" name="getFitsFile" specification="_VaOqgpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcy2V5AREeOq6NMfztjeOg" name="idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Vcy2WJAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>File trans = new File(getFolderOutput() + File.separator + getCurrentFileRoot() + &quot; -- &quot; + idx + &quot;-&quot;);&#xD;
		return trans;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcy2WZAREeOq6NMfztjeOg" name="getZipFile" specification="_VaPRkJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcy2WpAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>File fileZipFits = new File(getFolderOutput() + File.separator + getCurrentFileRoot() + &quot; -- fits.zip&quot;);&#xD;
		return fileZipFits;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcy2W5AREeOq6NMfztjeOg" name="getZipPrinter_Fits" specification="_VaPRkZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcy2XJAREeOq6NMfztjeOg" type="_Vbt4QpAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>if(zipFits == null) {&#xD;
			File fileZipFits = getZipFile();&#xD;
			FileOutputStream fos = null;&#xD;
			try {&#xD;
				if(fileZipFits.exists()) {&#xD;
					&#xD;
				} else {&#xD;
					fileZipFits.createNewFile();&#xD;
				}&#xD;
				fos = new FileOutputStream(fileZipFits);&#xD;
				zipFits = new PrintToZip(new ZipOutputStream(fos), fos);&#xD;
			} catch (FileNotFoundException e) {&#xD;
				e.printStackTrace();&#xD;
			} catch (IOException e) {&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
&#xD;
		}&#xD;
		&#xD;
		return zipFits;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VczdYJAREeOq6NMfztjeOg" name="getCurrentTransformationFile" specification="_VaPRkpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VczdYZAREeOq6NMfztjeOg" name="idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VczdYpAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>File fileCurrentTransformation = new File(getTransformationsFolder() + File.separator + &#xD;
				getCurrentFileRoot() + &quot; -- &quot; + idx + &quot;.trans&quot;);&#xD;
		return fileCurrentTransformation;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VczdY5AREeOq6NMfztjeOg" name="getCurrentXYZFile" specification="_VaP4oJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VczdZJAREeOq6NMfztjeOg" name="idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VczdZZAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>File fileCurrentXYZ = new File(getXYZsFolder() + File.separator + &#xD;
				getCurrentFileRoot() + &quot; -- structure -- &quot; + idx + &quot;.xyz&quot;);&#xD;
		return fileCurrentXYZ;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VczdZpAREeOq6NMfztjeOg" name="toString" specification="_VaP4opAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VczdZ5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String s = &quot;=========================================&quot;;&#xD;
		s += &quot;\nExperiment Type: &quot; + getExp().toString() + &quot;\t&quot; + getExpVal();&#xD;
		s += &quot;\nInitial Nucleation Strategy: &quot; + getInitNuc().toString() + &quot;\tval: &quot; + getNucInitVal();&#xD;
&#xD;
		s += &quot;\nContinuous Nucleation Strategy: &quot; + getContNuc().toString() + &quot;\tval: &quot; + getNucContVal();&#xD;
&#xD;
		s += &quot;\nNucleation Orientation Strategy: &quot; + getNucOrient().toString();&#xD;
		switch(getNucOrient()) {&#xD;
		case Random: break;&#xD;
		case SetOfOrientations:&#xD;
			for(int i = 0; i &lt; getNucOrientVal().length; i++) {&#xD;
				s += &quot;\n\t(&quot; + i + &quot;)&quot;; &#xD;
				for(int j = 0; j &lt; getNucOrientVal()[i].length; j++) {&#xD;
					s += &quot;\t(&quot; + j + &quot;)\t&quot; + getNucOrientVal()[i][j].toString(); &#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		s += &quot;\nAxial Growth Rates: &quot; + Arrays.toString(getAxialGrowthRates());&#xD;
		s += &quot;\nInitial Crystal Dimensions: &quot; + Arrays.toString(getInitCrystalDimensions());&#xD;
		s += &quot;\nNucleation Orientation Strategy: &quot; + getNucLoc().toString();&#xD;
		switch(getNucLoc()) {&#xD;
		case Random: break;&#xD;
		case Fixed:&#xD;
			for(int i = 0; i &lt; getNucLocOptions().length; i++) {&#xD;
				s += &quot;\n\t(&quot; + i + &quot;)\t&quot; + getNucLocOptions()[i].toString();&#xD;
			}&#xD;
			break;&#xD;
		}&#xD;
		s += &quot;\nCrystal Shape: &quot; + getNucShape().toString();&#xD;
		s += &quot;\nTermination Strategy: &quot; + getTerm().toString() + &quot;: &quot; + getTermVal();&#xD;
&#xD;
		s += &quot;\nSample Shape: &quot; + getSampleShape().toString();&#xD;
		for(int i = 0; i &lt; getSampleUnitAxes().length; i++) {&#xD;
			s += &quot;\t(&quot; + i + &quot;)\t&quot; + getSampleUnitAxes()[i].toString();&#xD;
		}&#xD;
		s += &quot;\nUnits per sample axis: &quot; + StringConverter.arrayToTabString(getSampleUnitsPerAxis());&#xD;
		s += &quot;\nOutput .xyz? &quot; + isOutputtingXyz();&#xD;
		s += &quot;\nOutput transformation info? &quot; + isTransformed();&#xD;
		s += &quot;\nOutput non-linear fitting info? &quot; + isFit();&#xD;
		s += &quot;\nTime step: &quot; + getTimeStep();&#xD;
		s += &quot;\nInitial nucleation time: &quot; + getStartTime();&#xD;
		s += &quot;\nMaximum number of crystals: &quot; + getMaxNumCrystals();&#xD;
		s += &quot;\nInstances to launch: &quot; + instancesToLaunch;&#xD;
		&#xD;
		s += &quot;\n\n&quot;;&#xD;
		s += &quot;\n=========================================\n\n\n&quot;;&#xD;
		s += &quot;\nSimulation started at: &quot; + (new Date()).toString() + &quot;\n&quot;;&#xD;
		return s;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VczdaJAREeOq6NMfztjeOg" name="getApproxVolume" specification="_VaQfsJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VczdaZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int[] sampleAxes = getSampleUnitsPerAxis();&#xD;
		switch(getSampleShape()) {&#xD;
		case Orthorhombic:&#xD;
		case Cubic:&#xD;
		case Tetragonal:&#xD;
			return sampleAxes[0] * sampleAxes[1] * sampleAxes[2];&#xD;
		case Spherical:&#xD;
			return (int) Math.rint(4./3.*Math.PI * Math.pow(sampleAxes[0], 3));&#xD;
		case Cylindrical:&#xD;
			return (int) Math.rint(Math.PI * sampleAxes[0] * sampleAxes[1] * sampleAxes[2]);&#xD;
		}&#xD;
		return 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VczdapAREeOq6NMfztjeOg" name="isOutputtingXyz" specification="_VaQfspAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vczda5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return xyz;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VczdbJAREeOq6NMfztjeOg" name="setXyz" specification="_VaQftJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VczdbZAREeOq6NMfztjeOg" name="xyz">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.xyz = xyz;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VczdbpAREeOq6NMfztjeOg" name="isOutputtingMovie" specification="_VaQftpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vczdb5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return movie;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vc0EcJAREeOq6NMfztjeOg" name="setMovie" specification="_VaRGwZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vc0EcZAREeOq6NMfztjeOg" name="movie">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>this.movie = movie;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_VaKZEJAREeOq6NMfztjeOg" name="SimulSetupParams" method="_VcxoMJAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_VaKZEZAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_VaKZEpAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_VaKZE5AREeOq6NMfztjeOg" type="_BPLtgJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VaKZFJAREeOq6NMfztjeOg" name="nullify" method="_VcxoMpAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VaMOQJAREeOq6NMfztjeOg" name="setIndexingSystemToUse" visibility="private" method="_VcxoN5AREeOq6NMfztjeOg">
          <ownedComment xmi:id="_Vc2gtJAREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param whichToUse0 = alphabetic&#xD;
	 * &lt;br>1 = numeric&#xD;
	 * &lt;br>any other value = neither</body>
          </ownedComment>
          <ownedParameter xmi:id="_VaMOQZAREeOq6NMfztjeOg" name="whichToUse">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaNcYJAREeOq6NMfztjeOg" name="updateFileRoot" method="_VcyPRJAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VaNcYZAREeOq6NMfztjeOg" name="getSampleAxes" method="_VcyPRZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaODcJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaODcZAREeOq6NMfztjeOg" name="getAnalysisFile" method="_VcyPR5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vbw7kpAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VaODcpAREeOq6NMfztjeOg" name="getXYZsFolder" method="_VcyPSZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vbw7k5AREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VaODc5AREeOq6NMfztjeOg" name="getMoviesFile" method="_Vcy2UJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vbw7lJAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VaOqgJAREeOq6NMfztjeOg" name="getObjectsFile" method="_Vcy2UpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vbw7lZAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VaOqgZAREeOq6NMfztjeOg" name="getTransformationsFolder" method="_Vcy2VJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vbw7lpAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VaOqgpAREeOq6NMfztjeOg" name="getFitsFile" method="_Vcy2VpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaOqg5AREeOq6NMfztjeOg" name="idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Vbw7l5AREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VaPRkJAREeOq6NMfztjeOg" name="getZipFile" method="_Vcy2WZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VbxioJAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VaPRkZAREeOq6NMfztjeOg" name="getZipPrinter_Fits" method="_Vcy2W5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcHg4JAREeOq6NMfztjeOg" type="_Vbt4QpAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VaPRkpAREeOq6NMfztjeOg" name="getCurrentTransformationFile" method="_VczdYJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaPRk5AREeOq6NMfztjeOg" name="idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VbxioZAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VaP4oJAREeOq6NMfztjeOg" name="getCurrentXYZFile" method="_VczdY5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaP4oZAREeOq6NMfztjeOg" name="idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VbxiopAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VaP4opAREeOq6NMfztjeOg" name="toString" method="_VczdZpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaP4o5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaQfsJAREeOq6NMfztjeOg" name="getApproxVolume" method="_VczdaJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaQfsZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaQfspAREeOq6NMfztjeOg" name="isOutputtingXyz" method="_VczdapAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaQfs5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaQftJAREeOq6NMfztjeOg" name="setXyz" method="_VczdbJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaQftZAREeOq6NMfztjeOg" name="xyz">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaQftpAREeOq6NMfztjeOg" name="isOutputtingMovie" method="_VczdbpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaRGwJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaRGwZAREeOq6NMfztjeOg" name="setMovie" method="_Vc0EcJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaRGwpAREeOq6NMfztjeOg" name="movie">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VbwUgJAREeOq6NMfztjeOg" name="copyAndIncrement" method="_VcyPQJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VbwUgZAREeOq6NMfztjeOg" name="ssp" type="_BPLtgJAREeOq6NMfztjeOg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Vbw7kJAREeOq6NMfztjeOg" name="copy" method="_VcyPQpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vbw7kZAREeOq6NMfztjeOg" name="ssp" type="_BPLtgJAREeOq6NMfztjeOg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_BPMUkJAREeOq6NMfztjeOg" clientDependency="_VbhrAZAREeOq6NMfztjeOg _Vb9I0JAREeOq6NMfztjeOg" name="CrystalFactory">
        <ownedAttribute xmi:id="_VcTuIJAREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcTuIZAREeOq6NMfztjeOg" value="-2491993333643652809L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcTuIpAREeOq6NMfztjeOg" name="sample" visibility="private" type="_BPM7oJAREeOq6NMfztjeOg" association="_Vc9OY5AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_VcTuJJAREeOq6NMfztjeOg" name="numCrystals" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcTuJZAREeOq6NMfztjeOg" name="sp" visibility="private" type="_BPLtgJAREeOq6NMfztjeOg" association="_Vc9OZpAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_VcUVMZAREeOq6NMfztjeOg" name="r" visibility="private" type="_BOw2w5AREeOq6NMfztjeOg" association="_Vc91cZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_VcUVM5AREeOq6NMfztjeOg" name="indices" visibility="private" type="_Vbgc4pAREeOq6NMfztjeOg" association="_Vc91dJAREeOq6NMfztjeOg"/>
        <interfaceRealization xmi:id="_Vb9I0JAREeOq6NMfztjeOg" client="_BPMUkJAREeOq6NMfztjeOg" supplier="_VbcygpAREeOq6NMfztjeOg" contract="_VbcygpAREeOq6NMfztjeOg"/>
        <interfaceRealization xmi:id="_VbhrAZAREeOq6NMfztjeOg" client="_BPMUkJAREeOq6NMfztjeOg" supplier="_BOvoopAREeOq6NMfztjeOg" contract="_BOvoopAREeOq6NMfztjeOg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcq6hpAREeOq6NMfztjeOg" name="CrystalFactory" specification="_VbiSEJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcq6h5AREeOq6NMfztjeOg" name="sample" type="_BPM7oJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vcq6iJAREeOq6NMfztjeOg" name="sp" type="_BPLtgJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vcq6iZAREeOq6NMfztjeOg" type="_BPMUkJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>this.sample = sample;&#xD;
		r = new Random();&#xD;
		this.sp = sp;&#xD;
		numCrystals = 0;&#xD;
		indices = new Stack&lt;Short>();&#xD;
		for(int i = (sp.getMaxNumCrystals()); i > 0; i--) {&#xD;
			indices.push((short) i);&#xD;
		}&#xD;
//		System.out.println(&quot;First xtal idx: &quot; + (int) indices.peek());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcq6ipAREeOq6NMfztjeOg" name="getNewCrystal" specification="_VZttIJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcq6i5AREeOq6NMfztjeOg" name="time">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Vcq6jJAREeOq6NMfztjeOg" type="_VZj8IJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>JVector location;&#xD;
		do {&#xD;
			location = getCrystalLocation();&#xD;
		}&#xD;
		while(!sample.isInside(location));&#xD;
		NucleationEvent ne = new NucleationEvent(time, location);&#xD;
		ShapeTypes type = getShapeType();&#xD;
		Shape shape = ShapeFactory.newShape(type, ne.getLocation(), getShapeOrientation(type));&#xD;
		numCrystals++;&#xD;
		short idx = 0;&#xD;
		try  {&#xD;
			idx = indices.pop();&#xD;
			//System.out.println(&quot;Popped &quot; + idx);&#xD;
		} catch(EmptyStackException ese) {&#xD;
			System.err.println(ese.getStackTrace());&#xD;
		}&#xD;
		return new Crystal(shape, ne, sp.getAxialGrowthRates(), idx, this);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcrhkJAREeOq6NMfztjeOg" name="getNewCrystal" specification="_VbiSF5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcrhkZAREeOq6NMfztjeOg" name="time">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcrhkpAREeOq6NMfztjeOg" name="nucLoc" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vcrhk5AREeOq6NMfztjeOg" type="_VZj8IJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>NucleationEvent ne = new NucleationEvent(time, nucLoc);&#xD;
		ShapeTypes type = getShapeType();&#xD;
		Shape shape = ShapeFactory.newShape(type, ne.getLocation(), getShapeOrientation(type));&#xD;
		numCrystals++;&#xD;
		short idx = 0;&#xD;
		try  {&#xD;
			idx = indices.pop();&#xD;
			//System.out.println(&quot;Popped &quot; + idx);&#xD;
		} catch(EmptyStackException ese) {&#xD;
			System.err.println(ese.getStackTrace());&#xD;
		}&#xD;
		return new Crystal(shape, ne, sp.getAxialGrowthRates(), idx, this);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcrhlJAREeOq6NMfztjeOg" name="getNewCrystal" specification="_Vbi5IpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcrhlZAREeOq6NMfztjeOg" name="time">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcrhlpAREeOq6NMfztjeOg" name="nucLoc" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vcrhl5AREeOq6NMfztjeOg" name="nucOrient" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcrhmJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcrhmZAREeOq6NMfztjeOg" type="_VZj8IJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>NucleationEvent ne = new NucleationEvent(time, nucLoc);&#xD;
		ShapeTypes type = getShapeType();&#xD;
		Shape shape = ShapeFactory.newShape(type, ne.getLocation(), nucOrient);&#xD;
		numCrystals++;&#xD;
		short idx = 0;&#xD;
		try  {&#xD;
			idx = indices.pop();&#xD;
			//System.out.println(&quot;Popped &quot; + idx);&#xD;
		} catch(EmptyStackException ese) {&#xD;
			System.err.println(ese.getStackTrace());&#xD;
		}&#xD;
		return new Crystal(shape, ne, sp.getAxialGrowthRates(), idx, this);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcrhmpAREeOq6NMfztjeOg" name="getCrystalLocation" specification="_VZuUMJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcrhm5AREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>switch(sp.getNucLoc()) {&#xD;
		case Random:&#xD;
			int[] units_i = sample.getUnitsPerAxis();&#xD;
			double[] units_d = new double[units_i.length];&#xD;
			for(int i = 0; i &lt; units_d.length; i++) {&#xD;
				units_d[i] = units_i[i];&#xD;
			}&#xD;
			return sample.getShape().getRandomPointInside(units_d);&#xD;
		case Fixed:&#xD;
			return sp.getNucLocOptions()[r.nextInt(sp.getNucLocOptions().length)];&#xD;
		}&#xD;
		throw new RuntimeException(&quot;Simulation Parameter: &quot; + sp.getNucLoc().toString() + &quot; does not have a corresponding &quot; +&#xD;
		&quot;option in the method: getCrystalLocation() in the class: CrystalFactory&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcrhnJAREeOq6NMfztjeOg" name="getShapeType" specification="_VZuUMZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcrhnZAREeOq6NMfztjeOg" type="_VbhD85AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>return sp.getNucShape();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcrhnpAREeOq6NMfztjeOg" name="getShapeOrientation" specification="_Vb9v4ZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcrhn5AREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VcrhoJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcrhoZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>switch(sp.getNucOrient()) {&#xD;
		case Random:&#xD;
			switch(type) {&#xD;
			case Cubic:&#xD;
			case Tetragonal:&#xD;
			case Orthorhombic:&#xD;
				//return JVector.get100FamilyUnique();&#xD;
				return JVector.getRandomlyAlignedOrthogonalAxes();&#xD;
			case Spherical:&#xD;
				return JVector.getRandomlyAlignedOrthogonalAxes();&#xD;
			case Cylindrical:&#xD;
				JVector[] axis = new JVector[1]; &#xD;
				axis[0] = new JVector(r.nextDouble(), r.nextDouble(), r.nextDouble()).unit();&#xD;
				return axis;&#xD;
			}&#xD;
		case SetOfOrientations:&#xD;
			return sp.getNucOrientVal()[r.nextInt(sp.getNucOrientVal().length)];&#xD;
		}&#xD;
		throw new RuntimeException(&quot;Simulation Parameter: &quot; + sp.getNucOrient().toString() + &quot; does not have a corresponding &quot; +&#xD;
		&quot;option in the method: getShapeOrientation(ShapeTypes type) in the class: CrystalFactory&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcrhopAREeOq6NMfztjeOg" name="update" specification="_Vb--AZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcsIoJAREeOq6NMfztjeOg" name="arg0" type="_BOw2wZAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VcsIoZAREeOq6NMfztjeOg" name="arg1" type="_Vb-W85AREeOq6NMfztjeOg"/>
          <language>java</language>
          <body>if(arg0 instanceof Crystal) {&#xD;
			Crystal c = (Crystal) arg0;&#xD;
			if(arg1 instanceof Integer) {&#xD;
				switch((Integer) arg1) {&#xD;
				case Crystal.BAD_NUCLEATION_LOCATION:&#xD;
					numCrystals--;&#xD;
					indices.push(c.getCrystalIdx());&#xD;
					//System.out.println(&quot;Pushed &quot; + c.getCrystalIdx());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_VZttIJAREeOq6NMfztjeOg" name="getNewCrystal" method="_Vcq6ipAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZttIZAREeOq6NMfztjeOg" name="time">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VbiSFpAREeOq6NMfztjeOg" type="_VZj8IJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VZuUMJAREeOq6NMfztjeOg" name="getCrystalLocation" visibility="private" method="_VcrhmpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VbjgMJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VZuUMZAREeOq6NMfztjeOg" name="getShapeType" visibility="private" method="_VcrhnJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vb9v4JAREeOq6NMfztjeOg" type="_VbhD85AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VbiSEJAREeOq6NMfztjeOg" name="CrystalFactory" method="_Vcq6hpAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_VbiSE5AREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_VbiSFJAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_VbiSEZAREeOq6NMfztjeOg" name="sample" type="_BPM7oJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VbiSEpAREeOq6NMfztjeOg" name="sp" type="_BPLtgJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VbiSFZAREeOq6NMfztjeOg" type="_BPMUkJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VbiSF5AREeOq6NMfztjeOg" name="getNewCrystal" method="_VcrhkJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VbiSGJAREeOq6NMfztjeOg" name="time">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Vbi5IJAREeOq6NMfztjeOg" name="nucLoc" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vbi5IZAREeOq6NMfztjeOg" type="_VZj8IJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Vbi5IpAREeOq6NMfztjeOg" name="getNewCrystal" method="_VcrhlJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vbi5I5AREeOq6NMfztjeOg" name="time">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Vbi5JJAREeOq6NMfztjeOg" name="nucLoc" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vbi5JZAREeOq6NMfztjeOg" name="nucOrient" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Vbi5J5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Vbi5JpAREeOq6NMfztjeOg" type="_VZj8IJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_Vb9v4ZAREeOq6NMfztjeOg" name="getShapeOrientation" visibility="private" method="_VcrhnpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vb9v4pAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vb-W8JAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Vb-W8ZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Vb--AZAREeOq6NMfztjeOg" name="update" method="_VcrhopAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vb--ApAREeOq6NMfztjeOg" name="arg0" type="_BOw2wZAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vb--A5AREeOq6NMfztjeOg" name="arg1" type="_Vb-W85AREeOq6NMfztjeOg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_BPM7oJAREeOq6NMfztjeOg" clientDependency="_Vbpm0JAREeOq6NMfztjeOg" name="Sample">
        <ownedAttribute xmi:id="_VcZNsJAREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcZNsZAREeOq6NMfztjeOg" value="-5991424869777810615L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcZNspAREeOq6NMfztjeOg" name="shape" type="_VbdZk5AREeOq6NMfztjeOg" isReadOnly="true" association="_VdARsZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_VcZNs5AREeOq6NMfztjeOg" name="unitsPerAxis_i" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcZNtJAREeOq6NMfztjeOg" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcZ0wJAREeOq6NMfztjeOg" name="unitsPerAxis_d" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcZ0wZAREeOq6NMfztjeOg" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcZ0xJAREeOq6NMfztjeOg" name="crystals" visibility="private" type="_VbdZkZAREeOq6NMfztjeOg" association="_VdARtJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_Vcab0pAREeOq6NMfztjeOg" name="totalVolume" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcbC4JAREeOq6NMfztjeOg" name="l" visibility="private" type="_K59JsJAREeOq6NMfztjeOg" association="_VdA4wZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_VcbC4pAREeOq6NMfztjeOg" name="occupiedVolume" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcbC5JAREeOq6NMfztjeOg" name="NUCLEATION_SUCCESSFUL" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcbC5ZAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vcbp8JAREeOq6NMfztjeOg" name="NUCLEATION_INSIDE_ANOTHER" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vcbp8ZAREeOq6NMfztjeOg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vcbp8pAREeOq6NMfztjeOg" name="NUCLEATION_SUCCESSFUL_ADDITION_FAILED" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vcbp85AREeOq6NMfztjeOg" value="2"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_Vbpm0JAREeOq6NMfztjeOg" client="_BPM7oJAREeOq6NMfztjeOg" supplier="_BOvoopAREeOq6NMfztjeOg" contract="_BOvoopAREeOq6NMfztjeOg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcvL8JAREeOq6NMfztjeOg" name="Sample" specification="_VcCBUJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcvL8ZAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VcvL8pAREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcvL85AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcvL9JAREeOq6NMfztjeOg" name="unitsPerAxis">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcvL9ZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcvL9pAREeOq6NMfztjeOg" type="_BPM7oJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>shape = createSampleShape(type, unitAxes, unitsPerAxis);&#xD;
		this.unitsPerAxis_i = unitsPerAxis;&#xD;
		unitsPerAxis_d = new double[unitsPerAxis_i.length];&#xD;
		for(int i = 0; i &lt; unitsPerAxis_d.length; i++) {&#xD;
			unitsPerAxis_d[i] = unitsPerAxis_i[i];&#xD;
		}&#xD;
		crystals = new Vector&lt;Crystal>(20);&#xD;
		&#xD;
		switch(shape.getType()) {&#xD;
		case Cubic:&#xD;
		case Orthorhombic:&#xD;
		case Tetragonal:&#xD;
			l = new Lattice(unitsPerAxis);&#xD;
			break;&#xD;
		case Spherical:&#xD;
			l = new Lattice(unitsPerAxis[0]*2);&#xD;
			break;&#xD;
		case Cylindrical:&#xD;
			l = new Lattice(unitsPerAxis[1]*2, unitsPerAxis[1]*2, unitsPerAxis[2]);&#xD;
			break;&#xD;
		}&#xD;
		totalVolume = calculateTotalVolume();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcvL95AREeOq6NMfztjeOg" name="grow" specification="_VZ_Z8JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcvL-JAREeOq6NMfztjeOg" name="curTime">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>for(int i = 0; i &lt; crystals.size(); i++) {&#xD;
			crystals.get(i).grow(curTime);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcvL-ZAREeOq6NMfztjeOg" name="check" specification="_VaABAJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcvL-pAREeOq6NMfztjeOg" name="curTime">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcvL-5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcvL_JAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>int[] totalNewGrowth = new int[crystals.size()+3];&#xD;
		Arrays.fill(totalNewGrowth, 0);&#xD;
		int unoccupied = 0;&#xD;
		JVector pos = new JVector();&#xD;
		Crystal curXtal;&#xD;
		int latticePoints = 0;&#xD;
		for(int i = 0; i &lt; l.getX(); i++) {&#xD;
			pos.i = i;&#xD;
			for(int j = 0; j &lt; l.getY(); j++) {&#xD;
				pos.j = j;&#xD;
				for(int k = 0; k &lt; l.getZ(); k++) {&#xD;
					pos.k = k;&#xD;
					short curVal = l.getVal(i, j, k);&#xD;
					if(curVal != Character.MAX_VALUE) {&#xD;
						totalNewGrowth[0]++; //total lattice points inside bounding shape&#xD;
						if(curVal == 0) {&#xD;
							for(int c = 0; c &lt; crystals.size(); c++) {&#xD;
								curXtal = crystals.get(c);&#xD;
								if(curXtal.getNucTime() &lt;= curTime &amp;&amp; curXtal.isInside(pos)) {&#xD;
									if(l.occupy(i, j, k, curXtal.getCrystalIdx(), curXtal.getTotalSize())) {&#xD;
										curXtal.incrementGrowth();&#xD;
										totalNewGrowth[c+3]++;&#xD;
										totalNewGrowth[1]++;&#xD;
										curXtal.addLatticePoint(i, j, k);&#xD;
									}&#xD;
								}&#xD;
							}&#xD;
						}&#xD;
						else {&#xD;
							totalNewGrowth[2]++; //unoccupied lattice points inside bounding shape&#xD;
						}&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		Crystal c;&#xD;
		for(int i = 0; i &lt; crystals.size(); i++) {&#xD;
			c = crystals.get(i);&#xD;
			c.registerGrowth(totalNewGrowth[i+3]);&#xD;
		}&#xD;
		return totalNewGrowth;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcvL_ZAREeOq6NMfztjeOg" name="createSampleShape" specification="_VcCoYJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcvL_pAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VcvL_5AREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcvMAJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcvMAZAREeOq6NMfztjeOg" name="unitsPerAxis">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcvMApAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcvMA5AREeOq6NMfztjeOg" type="_VbdZk5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>JVector zero = null;&#xD;
		double r, r1, r2;&#xD;
		switch(type) {&#xD;
		case Cubic:&#xD;
		case Tetragonal:&#xD;
		case Orthorhombic:&#xD;
			zero = new JVector(((double) unitsPerAxis[0])/2., ((double) unitsPerAxis[1])/2., ((double) unitsPerAxis[2])/2.);&#xD;
			return ShapeFactory.newShape(type, zero, unitAxes);&#xD;
		case Spherical:&#xD;
			r = unitsPerAxis[0];&#xD;
			zero = new JVector(r, r, r);&#xD;
			return ShapeFactory.newShape(type, zero, unitAxes);&#xD;
		case Cylindrical:&#xD;
			if(JVector.dot(unitAxes[2], JVector.z) > 0) {&#xD;
				r1 = JVector.multiply(unitAxes[0], unitsPerAxis[0]).length();&#xD;
				r2 = r1;&#xD;
				zero = new JVector(r1, r2, unitAxes[2].k * 0.5 * unitsPerAxis[2]);&#xD;
			} &#xD;
			if(zero == null) {&#xD;
				throw new RuntimeException(&quot;Cylindrical Axis: &quot; + unitAxes[0].toString() + &quot; must be aligned along the x &quot; + &#xD;
						&quot; direction.  Method: createSampleShape(ShapeTypes type, JVector[] unitAxes) Class: Sample.java&quot;);&#xD;
			}&#xD;
			return ShapeFactory.newShape(type, zero, unitAxes);&#xD;
		}&#xD;
		throw new RuntimeException(&quot;Simulation Parameter: &quot; + type.toString() + &quot; does not have a corresponding &quot; +&#xD;
				&quot;option in the method: createSampleShape(ShapeTypes type, JVector[] unitAxes) in the class: Sample.java&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcvMBJAREeOq6NMfztjeOg" name="registerNewCrystal" specification="_VbqN4JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcvMBZAREeOq6NMfztjeOg" name="c" type="_VZj8IJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VcvMBpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>JVector nucLoc = c.getNucLoc();&#xD;
		Crystal curr;&#xD;
		for(int i = 0; i &lt; crystals.size(); i++) {&#xD;
			curr = crystals.get(i);&#xD;
			if(curr.isInside(nucLoc)) {&#xD;
				c.badNucLoc();&#xD;
				return NUCLEATION_INSIDE_ANOTHER;&#xD;
			}&#xD;
		}&#xD;
		if(crystals.add(c)) {&#xD;
			return NUCLEATION_SUCCESSFUL;&#xD;
		} else {&#xD;
			return NUCLEATION_SUCCESSFUL_ADDITION_FAILED;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcvzAJAREeOq6NMfztjeOg" name="isInside" specification="_VbqN45AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcvzAZAREeOq6NMfztjeOg" name="loc" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VcvzApAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return shape.isInside(unitsPerAxis_d, loc);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcvzA5AREeOq6NMfztjeOg" name="calculateTotalVolume" specification="_VaAoEJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcvzBJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
          <language>java</language>
          <body>JVector pos = new JVector();&#xD;
		int totalV = 0;&#xD;
		for(int i = 0; i &lt; l.getX(); i++) {&#xD;
			pos.i = i;&#xD;
			for(int j = 0; j &lt; l.getY(); j++) {&#xD;
				pos.j = j;&#xD;
				for(int k = 0; k &lt; l.getZ(); k++) {&#xD;
					pos.k = k;&#xD;
					if(shape.isInside(unitsPerAxis_d, pos)) {&#xD;
						totalV++;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return totalV;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcvzBZAREeOq6NMfztjeOg" name="calculateTransformedVolume" specification="_VaAoEpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcvzBpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
          <language>java</language>
          <body>JVector pos = new JVector();&#xD;
		long totalV = 0;&#xD;
		int Z;&#xD;
		for(int i = 0; i &lt; l.getX(); i++) {&#xD;
			pos.i = i;&#xD;
			for(int j = 0; j &lt; l.getY(); j++) {&#xD;
				pos.j = j;&#xD;
				for(int k = 0; k &lt; l.getZ(); k++) {&#xD;
					pos.k = k;&#xD;
					Z = ((int) l.getVal(i, j, k));&#xD;
					if(shape.isInside(unitsPerAxis_d, pos) &amp;&amp; Z > 0) {&#xD;
						totalV++;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return totalV;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcvzB5AREeOq6NMfztjeOg" name="getUnitsPerAxis" specification="_VaBPIZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcvzCJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcvzCZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>return unitsPerAxis_i; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcvzCpAREeOq6NMfztjeOg" name="printXYZ" specification="_Vbq08ZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcvzC5AREeOq6NMfztjeOg" name="ps" type="_BOvooJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VcvzDJAREeOq6NMfztjeOg" name="movie">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcvzDZAREeOq6NMfztjeOg" name="boomFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>JVector pos = new JVector();&#xD;
		int Z, offset = 0;&#xD;
		String z = &quot;&quot;;&#xD;
		// zero = the indices of the crystallites whose volume contain less than 10 lattice points&#xD;
		Integer[] zero = getCrystallitesToZero();&#xD;
		if(zero == null) // if this is null it is because all lattice points are untransformed&#xD;
			return;&#xD;
		int[] renumber = getCrystallitesToRenumber(zero);&#xD;
		renumber = null;&#xD;
		Vector&lt;JAtom> vec = new Vector&lt;JAtom>();&#xD;
		for(int i = 0; i &lt; l.getX(); i++) {&#xD;
			pos.i = i;&#xD;
			String lines = &quot;&quot;;&#xD;
			for(int j = 0; j &lt; l.getY(); j++) {&#xD;
				pos.j = j;&#xD;
				for(int k = 0; k &lt; l.getZ(); k++) {&#xD;
					pos.k = k;&#xD;
					Z = ((int) l.getVal(i, j, k));&#xD;
					if(Z == 0) &#xD;
						Z = 1;&#xD;
					if(shape.isInside(unitsPerAxis_d, pos)) {&#xD;
						offset = 0;&#xD;
						if(Z > 0) {&#xD;
							offset = 40;&#xD;
						}&#xD;
						if(movie) {&#xD;
							z = intToZ(Z);&#xD;
						} else {&#xD;
							Z = getNewZVal(renumber, zero, Z);&#xD;
						}&#xD;
						z = Z + &quot;&quot;;&#xD;
						lines += z + &quot;\t&quot; + (i+offset) + &quot;\t&quot; + j + &quot;\t&quot; + k + &quot;\n&quot;;&#xD;
						vec.add(new JAtom(Z, new JVector(pos.i + offset, pos.j, pos.k)));&#xD;
						&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
			ps.print(lines);&#xD;
		}&#xD;
		ExplodeCrystal ec = new ExplodeCrystal(vec.toArray(new JAtom[vec.size()]), boomFactor);&#xD;
		ec.run();&#xD;
		JAtom[] arr = ec.getAtoms();&#xD;
		ps.println(arr.length);&#xD;
		ps.println(&quot;1&quot;);&#xD;
		for(JAtom atom : arr) {&#xD;
			ps.println(atom.toStringForXYZ());&#xD;
		}&#xD;
		ps.flush();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcwaEJAREeOq6NMfztjeOg" name="getNewZVal" specification="_VaB2MJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcwaEZAREeOq6NMfztjeOg" name="renumber">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcwaEpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcwaE5AREeOq6NMfztjeOg" name="zero">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcwaFJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcwaFZAREeOq6NMfztjeOg" name="Z">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcwaFpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if(renumber == null)&#xD;
			return Z;&#xD;
		for(int i = 0; i &lt; zero.length; i++) {&#xD;
			if(Z == zero[i]) {&#xD;
				return 0;&#xD;
			}&#xD;
		}&#xD;
		for(int i = 0; i &lt; renumber.length; i++) {&#xD;
			if(Z == renumber[i]) {&#xD;
				return i+1;&#xD;
			}&#xD;
		}&#xD;
		if(zero.length == 0 &amp;&amp; renumber.length == 0) {&#xD;
			return Z;&#xD;
		}&#xD;
		return 0;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcwaF5AREeOq6NMfztjeOg" name="getCrystallitesToRenumber" specification="_VaCdQJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcwaGJAREeOq6NMfztjeOg" name="toZero">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcwaGZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcwaGpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcwaG5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>// max = the largest crystallite index. since crystallites indices are incremented from 1, this also&#xD;
		// serves as the total number of crystallites&#xD;
		int max = getMaxIdx();&#xD;
		if(max == 0)&#xD;
			return null;&#xD;
		int[] toRenumber = new int[max - toZero.length-1];&#xD;
		boolean add = false;&#xD;
		int idx = 0;&#xD;
		for(int i = 1; i &lt;= max; i++, add = true) {&#xD;
			for(int j = 0; j &lt; toZero.length; j++) {&#xD;
				if(i == toZero[j]) {&#xD;
					add = false;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
			if(add) {&#xD;
				try {&#xD;
					toRenumber[idx++] = i;&#xD;
				} catch(ArrayIndexOutOfBoundsException e) {&#xD;
					e.printStackTrace();&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		for(int i = 0; i &lt; toRenumber.length; i++) {&#xD;
			//System.out.println(&quot;Need to renumber crystallite #: &quot; + toRenumber[i] + &quot; to: &quot; + i);&#xD;
		}&#xD;
		return toRenumber;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcwaHJAREeOq6NMfztjeOg" name="getCrystallitesToZero" specification="_VaCdR5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcwaHZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcwaHpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>int max = getMaxIdx();&#xD;
//		if(max == Lattice.UNOCCUPIED_LATTICE_POINT)&#xD;
//			return null;&#xD;
		&#xD;
		JVector pos = new JVector();&#xD;
		int Z;&#xD;
		int[] numPerIdx = new int[max+1];&#xD;
		for(int i = 0; i &lt; l.getX(); i++) {&#xD;
			pos.i = i;&#xD;
			for(int j = 0; j &lt; l.getY(); j++) {&#xD;
				pos.j = j;&#xD;
				for(int k = 0; k &lt; l.getZ(); k++) {&#xD;
					pos.k = k;&#xD;
					Z = ((int) l.getVal(i, j, k));&#xD;
					if(Z > 0 &amp;&amp; Z != Character.MAX_VALUE) {&#xD;
						numPerIdx[Z]++;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		// zero out the ones with less than 10 points&#xD;
		int maxXtals = 80;&#xD;
		int currentXtals = max;&#xD;
		int minIdx = 0;&#xD;
		int minVal = 0;&#xD;
		Stack&lt;Integer> small = new Stack&lt;Integer>();&#xD;
		while(currentXtals >= maxXtals) {&#xD;
			minIdx = 0;&#xD;
			minVal = l.getX() * l.getY() * l.getZ();&#xD;
			for(int i = 1; i &lt; numPerIdx.length; i++) {&#xD;
				if(numPerIdx[i] > 0 &amp;&amp; numPerIdx[i] &lt; minVal) {&#xD;
					minVal = numPerIdx[i];&#xD;
					minIdx = i;&#xD;
				}&#xD;
			}&#xD;
			numPerIdx[minIdx] = -1;&#xD;
			//System.out.println(&quot;minIdx: &quot; + minIdx);&#xD;
			small.push(minIdx);&#xD;
			currentXtals--;&#xD;
		}&#xD;
		Integer[] toZeroArray = new Integer[small.size()];&#xD;
		toZeroArray = small.toArray(toZeroArray);&#xD;
&#xD;
		for(int i = 0; i &lt; toZeroArray.length; i++) {&#xD;
			//System.out.println(&quot;Need to zero crystallite #: &quot; + toZeroArray[i] + &quot; to: &quot; + i);&#xD;
		}&#xD;
		return toZeroArray;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcwaH5AREeOq6NMfztjeOg" name="getMaxIdx" specification="_VaDEU5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcwaIJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>JVector pos = new JVector();&#xD;
		int Z;&#xD;
		String z = &quot;&quot;;&#xD;
		int maxIdx = 0;&#xD;
		for(int i = 0; i &lt; l.getX(); i++) {&#xD;
			pos.i = i;&#xD;
			for(int j = 0; j &lt; l.getY(); j++) {&#xD;
				pos.j = j;&#xD;
				for(int k = 0; k &lt; l.getZ(); k++) {&#xD;
					pos.k = k;&#xD;
					Z = ((int) l.getVal(i, j, k));&#xD;
					if(Z > maxIdx &amp;&amp; Z != Character.MAX_VALUE) {&#xD;
						maxIdx = Z;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return maxIdx;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcwaIZAREeOq6NMfztjeOg" name="intToZ" specification="_VaDEVZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcwaIpAREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcwaI5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String s = &quot;&quot;;&#xD;
		switch(i) {&#xD;
		case 1: s = &quot;H&quot;; break;&#xD;
		case 2: s = &quot;He&quot;; break;&#xD;
		case 3: s = &quot;Li&quot;; break;&#xD;
		case 4: s = &quot;Be&quot;; break;&#xD;
		case 5: s = &quot;B&quot;; break;&#xD;
		default: s = &quot;Fe&quot;; break;&#xD;
		}&#xD;
		return s;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcwaJJAREeOq6NMfztjeOg" name="getCrystalIterator" specification="_VaDrYZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcwaJZAREeOq6NMfztjeOg" type="_BOwPspAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>return crystals.iterator();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcxBIJAREeOq6NMfztjeOg" name="getCrystalArray" specification="_VaDrY5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcxBIZAREeOq6NMfztjeOg" type="_VZj8IJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcxBIpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>Crystal[] c = new Crystal[crystals.size()];&#xD;
		c = crystals.toArray(c);&#xD;
		return c;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcxBI5AREeOq6NMfztjeOg" name="getRandomNucLoc" specification="_VaESc5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcxBJJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>Vector&lt;JVector> locations = new Vector&lt;JVector>();&#xD;
		JVector pos = new JVector();&#xD;
		for(int i = 0; i &lt; l.getX(); i++) {&#xD;
			for(int j = 0; j &lt; l.getY(); j++) {&#xD;
				for(int k = 0; k &lt; l.getZ(); k++) {&#xD;
					if(l.isFree(i, j, k)) {&#xD;
						locations.add((JVector) pos.clone());&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		int size = locations.size();&#xD;
		if(size == 0)&#xD;
			return null;&#xD;
		&#xD;
		Random r = new Random();&#xD;
		int idx = 0;&#xD;
		try {&#xD;
			idx = r.nextInt(size);&#xD;
		} catch(IllegalArgumentException iae) {&#xD;
			iae.printStackTrace();&#xD;
		}&#xD;
		return locations.get(idx);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcxBJZAREeOq6NMfztjeOg" name="setLatticeToNull" specification="_VaESdJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>l = null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcxBJpAREeOq6NMfztjeOg" name="getLatticePoints" specification="_VaESdZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcxBJ5AREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcxBKJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>JVector[][] points = new JVector[crystals.size()][];&#xD;
		Crystal cur;&#xD;
		for(int i = 0; i &lt; crystals.size(); i++) {&#xD;
			cur = crystals.get(i);&#xD;
			points[i] = cur.getLatticePoints();&#xD;
		}&#xD;
		return points;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcxBKZAREeOq6NMfztjeOg" name="getLatticePoints_old" specification="_VaE5g5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcxBKpAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcxBK5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>Vector&lt;Vector&lt;JVector>> locations = new Vector&lt;Vector&lt;JVector>>();&#xD;
		for(int i = 0; i &lt; crystals.size(); i++) {&#xD;
			locations.add(new Vector&lt;JVector>());&#xD;
		}&#xD;
		int Z;&#xD;
		JVector pos = new JVector();&#xD;
		for(int i = 0; i &lt; l.getX(); i++) {&#xD;
			pos.i = i;&#xD;
			for(int j = 0; j &lt; l.getY(); j++) {&#xD;
				pos.j = j;&#xD;
				for(int k = 0; k &lt; l.getZ(); k++) {&#xD;
					pos.k = k;&#xD;
					if(shape.isInside(unitsPerAxis_d, pos)) {&#xD;
						Z = l.getVal(i, j, k)-1;&#xD;
						locations.get(Z).add((JVector) pos.clone());&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		JVector[][] latticePoints = new JVector[crystals.size()][];&#xD;
		for(int i = 0; i &lt; latticePoints.length; i++) {&#xD;
			latticePoints[i] = new JVector[locations.get(i).size()];&#xD;
			latticePoints[i] = locations.get(i).toArray(latticePoints[i]);&#xD;
		}&#xD;
		return latticePoints;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_VZ_Z8JAREeOq6NMfztjeOg" name="grow" method="_VcvL95AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZ_Z8ZAREeOq6NMfztjeOg" name="curTime">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaABAJAREeOq6NMfztjeOg" name="check" method="_VcvL-ZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaABAZAREeOq6NMfztjeOg" name="curTime">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VaABApAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VaABA5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaAoEJAREeOq6NMfztjeOg" name="calculateTotalVolume" visibility="private" method="_VcvzA5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaAoEZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaAoEpAREeOq6NMfztjeOg" name="calculateTransformedVolume" method="_VcvzBZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaBPIJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaBPIZAREeOq6NMfztjeOg" name="getUnitsPerAxis" method="_VcvzB5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaBPIpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VaBPI5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaB2MJAREeOq6NMfztjeOg" name="getNewZVal" method="_VcwaEJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaB2MZAREeOq6NMfztjeOg" name="renumber">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VaB2NZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VaB2MpAREeOq6NMfztjeOg" name="zero">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VaB2NpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VaB2M5AREeOq6NMfztjeOg" name="Z">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VaB2NJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaCdQJAREeOq6NMfztjeOg" name="getCrystallitesToRenumber" method="_VcwaF5AREeOq6NMfztjeOg">
          <ownedComment xmi:id="_Vc2gsJAREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param toZero Any crystallies whose total volume is&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_VaCdQZAREeOq6NMfztjeOg" name="toZero">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VaCdRZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VaCdQpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VaCdQ5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaCdR5AREeOq6NMfztjeOg" name="getCrystallitesToZero" method="_VcwaHJAREeOq6NMfztjeOg">
          <ownedComment xmi:id="_Vc2gsZAREeOq6NMfztjeOg">
            <body>Zero out crystallites with less than 10 total lattice points in their transformed volume&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_VaDEUJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VaDEUZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaDEU5AREeOq6NMfztjeOg" name="getMaxIdx" method="_VcwaH5AREeOq6NMfztjeOg">
          <ownedComment xmi:id="_Vc2gspAREeOq6NMfztjeOg">
            <body>Get the highest index of the transformed lattice&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_VaDEVJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaDEVZAREeOq6NMfztjeOg" name="intToZ" visibility="private" method="_VcwaIZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaDEVpAREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VaDrYJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaDrYZAREeOq6NMfztjeOg" name="getCrystalIterator" method="_VcwaJJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VbrcAJAREeOq6NMfztjeOg" type="_BOwPspAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VaDrY5AREeOq6NMfztjeOg" name="getCrystalArray" method="_VcxBIJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaEScJAREeOq6NMfztjeOg" type="_VZj8IJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VaEScZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaESc5AREeOq6NMfztjeOg" name="getRandomNucLoc" method="_VcxBI5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VbrcAZAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VaESdJAREeOq6NMfztjeOg" name="setLatticeToNull" method="_VcxBJZAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VaESdZAREeOq6NMfztjeOg" name="getLatticePoints" method="_VcxBJpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VaE5gJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VaE5gZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VaE5g5AREeOq6NMfztjeOg" name="getLatticePoints_old" method="_VcxBKZAREeOq6NMfztjeOg">
          <ownedComment xmi:id="_Vc2gs5AREeOq6NMfztjeOg">
            <body>@deprecated&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_VaE5hJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VaE5hZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VbqN4JAREeOq6NMfztjeOg" name="registerNewCrystal" method="_VcvMBJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VbqN4ZAREeOq6NMfztjeOg" name="c" type="_VZj8IJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VbqN4pAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VbqN45AREeOq6NMfztjeOg" name="isInside" method="_VcvzAJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VbqN5JAREeOq6NMfztjeOg" name="loc" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vbq08JAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Vbq08ZAREeOq6NMfztjeOg" name="printXYZ" method="_VcvzCpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vbq08pAREeOq6NMfztjeOg" name="ps" type="_BOvooJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vbq085AREeOq6NMfztjeOg" name="movie">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Vbq09JAREeOq6NMfztjeOg" name="boomFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VcCBUJAREeOq6NMfztjeOg" name="Sample" method="_VcvL8JAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_VcCBVJAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_VcCBVZAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_VcCBUZAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VcCBUpAREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcCBV5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcCBU5AREeOq6NMfztjeOg" name="unitsPerAxis">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcCBWJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcCBVpAREeOq6NMfztjeOg" type="_BPM7oJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VcCoYJAREeOq6NMfztjeOg" name="createSampleShape" visibility="private" method="_VcvL_ZAREeOq6NMfztjeOg">
          <ownedComment xmi:id="_Vc15p5AREeOq6NMfztjeOg">
            <body>The box-like shapes have the zero point as (0, 0, 0).  The Spherical shape has the zero point as the center&#xD;
	 * of the sphere.  The Cylindrical shape has the zero point as halfway along the center of the cylinder.&#xD;
	 * @param type&#xD;
	 * @param unitAxes&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_VcCoYZAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VcCoYpAREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcDPcJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcCoY5AREeOq6NMfztjeOg" name="unitsPerAxis">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcDPcZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcCoZJAREeOq6NMfztjeOg" type="_VbdZk5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BP8igJAREeOq6NMfztjeOg" name="" memberEnd="_BP8igZAREeOq6NMfztjeOg _BPjg8JAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_BP8igZAREeOq6NMfztjeOg" name="" type="_BN7wUJAREeOq6NMfztjeOg" association="_BP8igJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BP9JkZAREeOq6NMfztjeOg" name="" memberEnd="_BP9JkpAREeOq6NMfztjeOg _BPkIAJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_BP9JkpAREeOq6NMfztjeOg" name="" type="_BN7wUJAREeOq6NMfztjeOg" association="_BP9JkZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BP9JlJAREeOq6NMfztjeOg" name="" memberEnd="_BP9JlZAREeOq6NMfztjeOg _BPkIApAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_BP9JlZAREeOq6NMfztjeOg" name="" type="_BN7wUJAREeOq6NMfztjeOg" association="_BP9JlJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BP9woZAREeOq6NMfztjeOg" name="" memberEnd="_BP9wopAREeOq6NMfztjeOg _BPkvEJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_BP9wopAREeOq6NMfztjeOg" name="" type="_BN7wUJAREeOq6NMfztjeOg" association="_BP9woZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BP9wpJAREeOq6NMfztjeOg" name="" memberEnd="_BP9wpZAREeOq6NMfztjeOg _BPnyYZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_BP9wpZAREeOq6NMfztjeOg" name="" type="_BN7wUJAREeOq6NMfztjeOg" association="_BP9wpJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BP-XsZAREeOq6NMfztjeOg" name="" memberEnd="_BP-XspAREeOq6NMfztjeOg _BPoZcJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_BP-XspAREeOq6NMfztjeOg" name="" type="_BN7wUJAREeOq6NMfztjeOg" association="_BP-XsZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BP-XtJAREeOq6NMfztjeOg" name="" memberEnd="_BP-XtZAREeOq6NMfztjeOg _BPpAgJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_BP-XtZAREeOq6NMfztjeOg" name="" type="_BN7wUJAREeOq6NMfztjeOg" association="_BP-XtJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_BP--wZAREeOq6NMfztjeOg" name="" memberEnd="_BP--wpAREeOq6NMfztjeOg _BPpnkpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_BP--wpAREeOq6NMfztjeOg" name="" type="_BN7wUJAREeOq6NMfztjeOg" association="_BP--wZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_K59JsJAREeOq6NMfztjeOg" clientDependency="_K6GToJAREeOq6NMfztjeOg" name="Lattice">
        <ownedAttribute xmi:id="_K6HhwJAREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_K6HhwZAREeOq6NMfztjeOg" value="-6957910015701592596L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_K6HhwpAREeOq6NMfztjeOg" name="a" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_K6II0pAREeOq6NMfztjeOg" name="subSystem" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K6II05AREeOq6NMfztjeOg" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_K6Iv4ZAREeOq6NMfztjeOg" name="UNOCCUPIED_LATTICE_POINT" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_K6Iv4pAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_K6Iv45AREeOq6NMfztjeOg" name="LATTICE_POINT_OUTSIDE_SHAPE" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_K6Iv5JAREeOq6NMfztjeOg" value="Short.MIN_VALUE"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_K6LMIJAREeOq6NMfztjeOg" name="b" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_K6LMI5AREeOq6NMfztjeOg" name="c" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_K6GToJAREeOq6NMfztjeOg" client="_K59JsJAREeOq6NMfztjeOg" supplier="_BOvoopAREeOq6NMfztjeOg" contract="_BOvoopAREeOq6NMfztjeOg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K6JW8JAREeOq6NMfztjeOg" name="Lattice" specification="_K59wwJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6JW8ZAREeOq6NMfztjeOg" name="numA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6JW8pAREeOq6NMfztjeOg" name="numB">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6JW85AREeOq6NMfztjeOg" name="numC">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6JW9JAREeOq6NMfztjeOg" type="_K59JsJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>a = numA;&#xD;
		b = numB;&#xD;
		c = numC;&#xD;
		subSystem = new short[a][b][c];&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K6JW9ZAREeOq6NMfztjeOg" name="Lattice" specification="_K5-X0JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6JW9pAREeOq6NMfztjeOg" name="units">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K6JW95AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6JW-JAREeOq6NMfztjeOg" type="_K59JsJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>this(units[0], units[1], units[2]);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K6JW-ZAREeOq6NMfztjeOg" name="Lattice" specification="_K5--4ZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6JW-pAREeOq6NMfztjeOg" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6JW-5AREeOq6NMfztjeOg" type="_K59JsJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>this(num, num, num);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K6J-AJAREeOq6NMfztjeOg" name="isFree" specification="_K5_l8pAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6J-AZAREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-ApAREeOq6NMfztjeOg" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-A5AREeOq6NMfztjeOg" name="k">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-BJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>int idx = subSystem[i][j][k];&#xD;
		if(idx == UNOCCUPIED_LATTICE_POINT) {&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K6J-BZAREeOq6NMfztjeOg" name="isOccupied" specification="_K6ANAJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6J-BpAREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-B5AREeOq6NMfztjeOg" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-CJAREeOq6NMfztjeOg" name="k">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-CZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>int idx = subSystem[i][j][k];&#xD;
		if(idx == UNOCCUPIED_LATTICE_POINT) {&#xD;
			return false;&#xD;
		}&#xD;
		return true;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K6J-CpAREeOq6NMfztjeOg" name="isOutsideShape" specification="_K6ANBZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6J-C5AREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-DJAREeOq6NMfztjeOg" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-DZAREeOq6NMfztjeOg" name="k">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-DpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>int idx = subSystem[i][j][k];&#xD;
		if(idx == LATTICE_POINT_OUTSIDE_SHAPE) {&#xD;
			return false;&#xD;
		}&#xD;
		return true;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K6J-D5AREeOq6NMfztjeOg" name="occupy" specification="_K6A0EZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6J-EJAREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-EZAREeOq6NMfztjeOg" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-EpAREeOq6NMfztjeOg" name="k">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-E5AREeOq6NMfztjeOg" name="xtalIdx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-FJAREeOq6NMfztjeOg" name="totalXtalSize">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-FZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if(!isFree(i, j, k)) { return false; }&#xD;
&#xD;
		if(totalXtalSize == 0) {&#xD;
			subSystem[i][j][k] = xtalIdx;&#xD;
			return true;&#xD;
		}&#xD;
		int minI = ((i-1) > 0) ? i-1 : 0;&#xD;
		int minJ = ((j-1) > 0) ? j-1 : 0;&#xD;
		int minK = ((k-1) > 0) ? k-1 : 0;&#xD;
		&#xD;
		int maxI = ((i+1) &lt; subSystem.length)		? i+1 : 0;&#xD;
		int maxJ = ((j+1) &lt; subSystem[0].length) 	? j+1 : 0;&#xD;
		int maxK = ((k+1) &lt; subSystem[0][0].length) ? k+1 : 0;&#xD;
		&#xD;
		if(subSystem[minI][j][k] == xtalIdx) {&#xD;
			subSystem[i][j][k] = xtalIdx;&#xD;
			return true;&#xD;
		}&#xD;
		if(subSystem[maxI][j][k] == xtalIdx) {&#xD;
			subSystem[i][j][k] = xtalIdx;&#xD;
			return true;&#xD;
		}&#xD;
		if(subSystem[i][minJ][k] == xtalIdx) {&#xD;
			subSystem[i][j][k] = xtalIdx;&#xD;
			return true;&#xD;
		}&#xD;
		if(subSystem[i][maxJ][k] == xtalIdx) {&#xD;
			subSystem[i][j][k] = xtalIdx;&#xD;
			return true;&#xD;
		}&#xD;
		if(subSystem[i][j][minK] == xtalIdx) {&#xD;
			subSystem[i][j][k] = xtalIdx;&#xD;
			return true;&#xD;
		}&#xD;
		if(subSystem[i][j][maxK] == xtalIdx) {&#xD;
			subSystem[i][j][k] = xtalIdx;&#xD;
			return true;&#xD;
		}&#xD;
		&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K6J-FpAREeOq6NMfztjeOg" name="initOccupy" specification="_K6BbIJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6J-F5AREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-GJAREeOq6NMfztjeOg" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-GZAREeOq6NMfztjeOg" name="k">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6J-GpAREeOq6NMfztjeOg" name="val">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
          </ownedParameter>
          <language>java</language>
          <body>subSystem[i][j][k] = val;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K6KlEJAREeOq6NMfztjeOg" name="getVal" specification="_K6BbJZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6KlEZAREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6KlEpAREeOq6NMfztjeOg" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6KlE5AREeOq6NMfztjeOg" name="k">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6KlFJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
          </ownedParameter>
          <language>java</language>
          <body>return subSystem[i][j][k]; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K6KlFZAREeOq6NMfztjeOg" name="getX" specification="_K6CCNJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6KlFpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return a; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K6KlF5AREeOq6NMfztjeOg" name="getY" specification="_K6CCNpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6KlGJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return b; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_K6KlGZAREeOq6NMfztjeOg" name="getZ" specification="_K6CpQJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6KlGpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return c; </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_K59wwJAREeOq6NMfztjeOg" name="Lattice" method="_K6JW8JAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_K59wxJAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_K59wxZAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_K59wwZAREeOq6NMfztjeOg" name="numA">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K59wwpAREeOq6NMfztjeOg" name="numB">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K59ww5AREeOq6NMfztjeOg" name="numC">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K59wxpAREeOq6NMfztjeOg" type="_K59JsJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_K5-X0JAREeOq6NMfztjeOg" name="Lattice" method="_K6JW9ZAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_K5-X0pAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_K5-X05AREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_K5-X0ZAREeOq6NMfztjeOg" name="units">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_K5-X1ZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K5-X1JAREeOq6NMfztjeOg" type="_K59JsJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_K5--4ZAREeOq6NMfztjeOg" name="Lattice" method="_K6JW-ZAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_K5--45AREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_K5_l8JAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_K5--4pAREeOq6NMfztjeOg" name="num">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K5_l8ZAREeOq6NMfztjeOg" type="_K59JsJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_K5_l8pAREeOq6NMfztjeOg" name="isFree" method="_K6J-AJAREeOq6NMfztjeOg">
          <ownedComment xmi:id="_K6LzMJAREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param i x coordinate&#xD;
	 * @param j y coordinate&#xD;
	 * @param k z coordinate&#xD;
	 * @return true: coordinates are inside the sample bounding shape and are not occupied. false: coordinate&#xD;
	 * is occupied by another crystal or outside the shape</body>
          </ownedComment>
          <ownedParameter xmi:id="_K5_l85AREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K5_l9JAREeOq6NMfztjeOg" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K5_l9ZAREeOq6NMfztjeOg" name="k">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K5_l9pAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_K6ANAJAREeOq6NMfztjeOg" name="isOccupied" method="_K6J-BZAREeOq6NMfztjeOg">
          <ownedComment xmi:id="_K6LzMZAREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param i x coordinate&#xD;
	 * @param j y coordinate&#xD;
	 * @param k z coordinate&#xD;
	 * @return true: coordinates are inside the sample bounding shape and are not occupied. false: coordinate&#xD;
	 * is occupied by another crystal</body>
          </ownedComment>
          <ownedParameter xmi:id="_K6ANAZAREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6ANApAREeOq6NMfztjeOg" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6ANA5AREeOq6NMfztjeOg" name="k">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6ANBJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_K6ANBZAREeOq6NMfztjeOg" name="isOutsideShape" method="_K6J-CpAREeOq6NMfztjeOg">
          <ownedComment xmi:id="_K6LzMpAREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param i x coordinate&#xD;
	 * @param j y coordinate&#xD;
	 * @param k z coordinate&#xD;
	 * @return true: coordinates are inside the sample bounding shape and are not occupied. false: coordinate&#xD;
	 * are either outside the sample bounding shape or are occupied by another crystal</body>
          </ownedComment>
          <ownedParameter xmi:id="_K6ANBpAREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6ANB5AREeOq6NMfztjeOg" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6ANCJAREeOq6NMfztjeOg" name="k">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6A0EJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_K6A0EZAREeOq6NMfztjeOg" name="occupy" method="_K6J-D5AREeOq6NMfztjeOg">
          <ownedComment xmi:id="_K6LzM5AREeOq6NMfztjeOg">
            <body>A new lattice point can only be part of the crystal if the new &lt;br>&#xD;
	 * lattice point is directly touching any part of the existing crystal.&#xD;
	 * @param i x coordinate&#xD;
	 * @param j y coordinate&#xD;
	 * @param k z coordinate&#xD;
	 * @param xtalIdx index of the crystallite&#xD;
	 * @param totalXtalSize current number of lattice points occupied by the crystallite&#xD;
	 * @return false: lattice is already occupied or location is outside the bounds of the sample&lt;br>&#xD;
	 * true: lattice point successfully occupied</body>
          </ownedComment>
          <ownedParameter xmi:id="_K6A0EpAREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6A0E5AREeOq6NMfztjeOg" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6A0FJAREeOq6NMfztjeOg" name="k">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6A0FZAREeOq6NMfztjeOg" name="xtalIdx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6A0FpAREeOq6NMfztjeOg" name="totalXtalSize">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6A0F5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_K6BbIJAREeOq6NMfztjeOg" name="initOccupy" method="_K6J-FpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6BbIZAREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6BbIpAREeOq6NMfztjeOg" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6BbI5AREeOq6NMfztjeOg" name="k">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6BbJJAREeOq6NMfztjeOg" name="val">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_K6BbJZAREeOq6NMfztjeOg" name="getVal" method="_K6KlEJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6CCMJAREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6CCMZAREeOq6NMfztjeOg" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6CCMpAREeOq6NMfztjeOg" name="k">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_K6CCM5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_K6CCNJAREeOq6NMfztjeOg" name="getX" method="_K6KlFZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6CCNZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_K6CCNpAREeOq6NMfztjeOg" name="getY" method="_K6KlF5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6CCN5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_K6CpQJAREeOq6NMfztjeOg" name="getZ" method="_K6KlGZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_K6CpQZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_VZj8IJAREeOq6NMfztjeOg" clientDependency="_VbeAoZAREeOq6NMfztjeOg" name="Crystal">
        <generalization xmi:id="_VbfOwJAREeOq6NMfztjeOg" general="_BOw2wZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_VcPcsJAREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcPcsZAREeOq6NMfztjeOg" value="3715651800198674004L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcPcspAREeOq6NMfztjeOg" name="shape" visibility="private" type="_VbdZk5AREeOq6NMfztjeOg" association="_Vc8AQJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_VcQDwZAREeOq6NMfztjeOg" name="ne" visibility="private" type="_VZ8Wo5AREeOq6NMfztjeOg" association="_Vc8nUJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_VcQDw5AREeOq6NMfztjeOg" name="axialGrowthRates" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcQDxJAREeOq6NMfztjeOg" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcQq0ZAREeOq6NMfztjeOg" name="curAxes" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcQq0pAREeOq6NMfztjeOg" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcQq1ZAREeOq6NMfztjeOg" name="initDims" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcQq1pAREeOq6NMfztjeOg" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcRR4pAREeOq6NMfztjeOg" name="idx" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcRR5JAREeOq6NMfztjeOg" name="size" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcR48JAREeOq6NMfztjeOg" name="BAD_NUCLEATION_LOCATION" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcR48ZAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcR485AREeOq6NMfztjeOg" name="numTransformed" visibility="private" type="_VbdZkZAREeOq6NMfztjeOg" association="_Vc8nU5AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_VcSgAZAREeOq6NMfztjeOg" name="latticePoints" type="_VbdZkZAREeOq6NMfztjeOg" isReadOnly="true" association="_Vc9OYJAREeOq6NMfztjeOg"/>
        <interfaceRealization xmi:id="_VbeAoZAREeOq6NMfztjeOg" client="_VZj8IJAREeOq6NMfztjeOg" supplier="_BOvoopAREeOq6NMfztjeOg" contract="_BOvoopAREeOq6NMfztjeOg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcpFU5AREeOq6NMfztjeOg" name="Crystal" specification="_Vb76sJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcpFVJAREeOq6NMfztjeOg" name="shape" type="_VbdZk5AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VcpFVZAREeOq6NMfztjeOg" name="ne" type="_VZ8Wo5AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VcpFVpAREeOq6NMfztjeOg" name="axialGrowthRates">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcpFV5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcpFWJAREeOq6NMfztjeOg" name="idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcpFWZAREeOq6NMfztjeOg" name="o" type="_VbcygpAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VcpFWpAREeOq6NMfztjeOg" type="_VZj8IJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>addObserver(o);&#xD;
		this.shape = shape;&#xD;
		this.ne = ne;&#xD;
		this.axialGrowthRates = axialGrowthRates;&#xD;
		this.idx = idx;&#xD;
		size = 0;&#xD;
		initDims = new double[] {0, 0, 0};&#xD;
		numTransformed = new Vector&lt;Integer>();&#xD;
		curAxes = new double[axialGrowthRates.length];&#xD;
		latticePoints = new Vector&lt;JVector>();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcpsYJAREeOq6NMfztjeOg" name="grow" specification="_VZlxUJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcpsYZAREeOq6NMfztjeOg" name="curTime">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double deltaT = curTime - ne.getTime();&#xD;
		if(deltaT >= 0) {&#xD;
			for(int i = 0; i &lt; axialGrowthRates.length; i++) {&#xD;
				curAxes[i] = deltaT * axialGrowthRates[i]+initDims[i];&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcpsYpAREeOq6NMfztjeOg" name="addLatticePoint" specification="_VZmYYJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcpsY5AREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcpsZJAREeOq6NMfztjeOg" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcpsZZAREeOq6NMfztjeOg" name="k">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>latticePoints.add(new JVector(i, j, k));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcpsZpAREeOq6NMfztjeOg" name="isInside" specification="_VbensJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcpsZ5AREeOq6NMfztjeOg" name="pos" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VcpsaJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>return shape.isInside(curAxes, pos);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcpsaZAREeOq6NMfztjeOg" name="addVolume" specification="_VZm_cJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcpsapAREeOq6NMfztjeOg" name="additionalVolume">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>size += additionalVolume; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcpsa5AREeOq6NMfztjeOg" name="getCrystalIdx" specification="_VZm_cpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcpsbJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
          </ownedParameter>
          <language>java</language>
          <body>return idx; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcqTcJAREeOq6NMfztjeOg" name="setInitDim" specification="_VZm_dJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcqTcZAREeOq6NMfztjeOg" name="dims">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcqTcpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>initDims = new double[dims.length];&#xD;
		for(int i = 0; i &lt; dims.length; i++) {&#xD;
			initDims[i] = dims[i];&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcqTc5AREeOq6NMfztjeOg" name="toString" specification="_VZnmgJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcqTdJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String s = &quot;Crystal idx: &quot; + (int) idx;&#xD;
		s += &quot;\nShape: &quot; + shape.toString();&#xD;
		s += &quot;\n\tAxial growth rates: &quot; + Arrays.toString(axialGrowthRates);&#xD;
		s += &quot;\n\tInitial dimensions: &quot; + Arrays.toString(initDims);&#xD;
		s += &quot;\n\tNucleation time: &quot; + ne.getTime();&#xD;
		s += &quot;\n\tNucleation location: &quot; + ne.getLocation().toString();&#xD;
		return s;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcqTdZAREeOq6NMfztjeOg" name="registerGrowth" specification="_VZnmgpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcqTdpAREeOq6NMfztjeOg" name="newGrowth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>numTransformed.add(newGrowth);&#xD;
		addVolume(newGrowth);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcqTd5AREeOq6NMfztjeOg" name="incrementGrowth" specification="_VZnmhJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>//size++;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcqTeJAREeOq6NMfztjeOg" name="getGrowth" specification="_VZnmhZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcqTeZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcqTepAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>Integer[] growth = new Integer[numTransformed.size()];&#xD;
		growth = numTransformed.toArray(growth);&#xD;
		return growth;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcqTe5AREeOq6NMfztjeOg" name="badNucLoc" specification="_VZoNk5AREeOq6NMfztjeOg">
          <language>java</language>
          <body>setChanged();&#xD;
		notifyObservers(BAD_NUCLEATION_LOCATION);&#xD;
		//System.out.println(&quot;Number of observers: &quot; + countObservers());&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcqTfJAREeOq6NMfztjeOg" name="getTotalSize" specification="_VZoNlJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcqTfZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return size; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcqTfpAREeOq6NMfztjeOg" name="getNucTime" specification="_VZo0oJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcq6gJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return ne.getTime(); </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcq6gZAREeOq6NMfztjeOg" name="getNucLoc" specification="_VZo0opAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcq6gpAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>return ne.getLocation(); </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcq6g5AREeOq6NMfztjeOg" name="getNucOrient" specification="_VZo0o5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcq6hJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Vcq6hZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>return shape.getUnitAxes(); </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_VZlxUJAREeOq6NMfztjeOg" name="grow" method="_VcpsYJAREeOq6NMfztjeOg">
          <ownedComment xmi:id="_Vc0rgJAREeOq6NMfztjeOg">
            <body>Trigger the crystal to figure out the new face points based on &#xD;
	 * @param time&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_VZlxUZAREeOq6NMfztjeOg" name="curTime">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZmYYJAREeOq6NMfztjeOg" name="addLatticePoint" method="_VcpsYpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZmYYZAREeOq6NMfztjeOg" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VZmYYpAREeOq6NMfztjeOg" name="j">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VZmYY5AREeOq6NMfztjeOg" name="k">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZm_cJAREeOq6NMfztjeOg" name="addVolume" method="_VcpsaZAREeOq6NMfztjeOg">
          <ownedComment xmi:id="_Vc0rgZAREeOq6NMfztjeOg">
            <body>Increment the volume by additionalVolume&#xD;
	 * @param additionalVolume	amount of additional volume to add</body>
          </ownedComment>
          <ownedParameter xmi:id="_VZm_cZAREeOq6NMfztjeOg" name="additionalVolume">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZm_cpAREeOq6NMfztjeOg" name="getCrystalIdx" method="_Vcpsa5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZm_c5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZm_dJAREeOq6NMfztjeOg" name="setInitDim" method="_VcqTcJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZm_dZAREeOq6NMfztjeOg" name="dims">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VZm_dpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZnmgJAREeOq6NMfztjeOg" name="toString" method="_VcqTc5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZnmgZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZnmgpAREeOq6NMfztjeOg" name="registerGrowth" method="_VcqTdZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZnmg5AREeOq6NMfztjeOg" name="newGrowth">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZnmhJAREeOq6NMfztjeOg" name="incrementGrowth" method="_VcqTd5AREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VZnmhZAREeOq6NMfztjeOg" name="getGrowth" method="_VcqTeJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZoNkJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VZoNkZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZoNk5AREeOq6NMfztjeOg" name="badNucLoc" method="_VcqTe5AREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VZoNlJAREeOq6NMfztjeOg" name="getTotalSize" method="_VcqTfJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZoNlZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZo0oJAREeOq6NMfztjeOg" name="getNucTime" method="_VcqTfpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZo0oZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZo0opAREeOq6NMfztjeOg" name="getNucLoc" method="_Vcq6gZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vbens5AREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VZo0o5AREeOq6NMfztjeOg" name="getNucOrient" method="_Vcq6g5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZo0pJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VZo0pZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VbensJAREeOq6NMfztjeOg" name="isInside" method="_VcpsZpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VbensZAREeOq6NMfztjeOg" name="pos" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_VbenspAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_Vb76sJAREeOq6NMfztjeOg" name="Crystal" method="_VcpFU5AREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_Vb8hxJAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Vb8hxZAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Vb76sZAREeOq6NMfztjeOg" name="shape" type="_VbdZk5AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vb8hwJAREeOq6NMfztjeOg" name="ne" type="_VZ8Wo5AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vb8hwZAREeOq6NMfztjeOg" name="axialGrowthRates">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Vb8hx5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Vb8hwpAREeOq6NMfztjeOg" name="idx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Vb8hw5AREeOq6NMfztjeOg" name="o" type="_VbcygpAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vb8hxpAREeOq6NMfztjeOg" type="_VZj8IJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_VZx-kJAREeOq6NMfztjeOg" name="DimensionalityOptions">
        <ownedLiteral xmi:id="_VZyloZAREeOq6NMfztjeOg" name="FIXED_TO_VALUE"/>
        <ownedLiteral xmi:id="_VZylopAREeOq6NMfztjeOg" name="APPROXIMATE_BY_SAMPLE_SHAPE"/>
        <ownedLiteral xmi:id="_VZylo5AREeOq6NMfztjeOg" name="APPROXIMATE_BY_ACTUAL_SHAPE"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_VZylpJAREeOq6NMfztjeOg" name="ExplodeCrystal">
        <ownedAttribute xmi:id="_VcU8QpAREeOq6NMfztjeOg" name="atoms" type="_Vbl8cJAREeOq6NMfztjeOg" association="_Vc-cgZAREeOq6NMfztjeOg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcU8Q5AREeOq6NMfztjeOg" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcVjUJAREeOq6NMfztjeOg" name="numAtomTypes" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcVjUpAREeOq6NMfztjeOg" name="boomFactor" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcVjVJAREeOq6NMfztjeOg" name="fileRoot" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcVjVZAREeOq6NMfztjeOg" value="&quot;&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcWKYZAREeOq6NMfztjeOg" name="sampleCM" visibility="private" type="_BOtMYJAREeOq6NMfztjeOg" association="_Vc-chJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_VcWKY5AREeOq6NMfztjeOg" name="numAtoms" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcsIopAREeOq6NMfztjeOg" name="ExplodeCrystal" specification="_VZzMsJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcsIo5AREeOq6NMfztjeOg" name="fileRoot">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcsIpJAREeOq6NMfztjeOg" name="boomFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcsIpZAREeOq6NMfztjeOg" type="_VZylpJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>this.fileRoot = fileRoot;&#xD;
		this.boomFactor = boomFactor;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcsIppAREeOq6NMfztjeOg" name="ExplodeCrystal" specification="_VcAMIJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcsIp5AREeOq6NMfztjeOg" name="atoms" type="_Vbl8cJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcsIqJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcsIqZAREeOq6NMfztjeOg" name="boomFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcsIqpAREeOq6NMfztjeOg" type="_VZylpJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>this.atoms = atoms;&#xD;
		this.boomFactor = boomFactor;&#xD;
		numAtoms = this.atoms.length;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcsIq5AREeOq6NMfztjeOg" name="run" specification="_VZzzxJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>if(fileRoot != &quot;&quot;)&#xD;
			readFile();&#xD;
		determineNumAtomTypes();&#xD;
		computeCM();&#xD;
		explode();&#xD;
		print();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcsIrJAREeOq6NMfztjeOg" name="readFile" specification="_VZzzxZAREeOq6NMfztjeOg">
          <language>java</language>
          <body>Scanner s = (new MyFileInputStream(fileRoot + &quot;.xyz&quot;)).getScanner();&#xD;
		String[] line;&#xD;
		numAtoms = s.nextInt();&#xD;
		atoms = new JAtom[numAtoms];&#xD;
		s.nextLine();&#xD;
		s.nextLine();&#xD;
		double x, y, z;&#xD;
		int Z;&#xD;
		int idx = 0;&#xD;
		boolean keepReading = true;&#xD;
		while (s.hasNextLine() &amp;&amp; keepReading) {&#xD;
			line = s.nextLine().split(&quot;\t&quot;);&#xD;
			if(line.length == 4) {&#xD;
				try {&#xD;
					Z = Integer.valueOf(line[0]);&#xD;
				} catch(NumberFormatException nfe) {&#xD;
					Z = JAtomTools.getZ(line[0]);&#xD;
					if(Z == 0)&#xD;
						Z = 1;&#xD;
				}&#xD;
				x = Double.valueOf(line[1]);&#xD;
				y = Double.valueOf(line[2]);&#xD;
				z = Double.valueOf(line[3]);&#xD;
				atoms[idx++] = new JAtom(Z, x, y, z);&#xD;
			} else if(line.length == 1) {&#xD;
				if(Integer.valueOf(line[0]) != 0)&#xD;
					keepReading = false;&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcsvsJAREeOq6NMfztjeOg" name="determineNumAtomTypes" specification="_VZ0a0JAREeOq6NMfztjeOg">
          <language>java</language>
          <body>int maxZ = 0;&#xD;
		for(JAtom atom : atoms) {&#xD;
			if(atom.getZ() > maxZ) { maxZ = atom.getZ(); }&#xD;
			&#xD;
		}&#xD;
		numAtomTypes = maxZ;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcsvsZAREeOq6NMfztjeOg" name="computeCM" specification="_VZ0a0ZAREeOq6NMfztjeOg">
          <language>java</language>
          <body>sampleCM = new JVector();&#xD;
		for(JAtom atom : atoms) {&#xD;
			sampleCM.add(atom.getPosition());&#xD;
		}&#xD;
		sampleCM.multiply(1./((double) numAtoms));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcsvspAREeOq6NMfztjeOg" name="getDisplacementVectors" specification="_VZ0a0pAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcsvs5AREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcsvtJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>JVector[] displace = new JVector[numAtomTypes];&#xD;
		int[] numAtomsPer = new int[numAtomTypes];&#xD;
		for(int i = 0; i &lt; displace.length; i++) {&#xD;
			displace[i] = new JVector();&#xD;
		}&#xD;
		int Z;&#xD;
		JVector pos;&#xD;
		for(int i = 0; i &lt; atoms.length; i++) {&#xD;
			pos = atoms[i].getPosition();&#xD;
			Z = atoms[i].getZ();&#xD;
			displace[Z-1] = JVector.add(displace[Z-1], pos);&#xD;
			numAtomsPer[Z-1]++;&#xD;
		}&#xD;
		for(int i = 0; i &lt; displace.length; i++) {&#xD;
			displace[i] = JVector.multiply(displace[i], 1./((double) numAtomsPer[i]));&#xD;
			displace[i] = JVector.subtract(displace[i], sampleCM);&#xD;
			displace[i] = JVector.multiply(displace[i], boomFactor);&#xD;
		}&#xD;
		return displace;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcsvtZAREeOq6NMfztjeOg" name="explode" specification="_VZ1B4JAREeOq6NMfztjeOg">
          <language>java</language>
          <body>JVector[] displacement = getDisplacementVectors();&#xD;
		int Z;&#xD;
		for(int i = 0; i &lt; atoms.length; i++) {&#xD;
			Z = atoms[i].getZ();&#xD;
			atoms[i].translate(displacement[Z-1]);&#xD;
		}&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VcsvtpAREeOq6NMfztjeOg" name="print" specification="_VZ1B4ZAREeOq6NMfztjeOg">
          <language>java</language>
          <body>File out = new File(fileRoot + &quot;_&quot; + &quot;explodedBy_&quot; + boomFactor + &quot;.xyz&quot;);&#xD;
		MyPrintStream mps = new MyPrintStream(out);&#xD;
&#xD;
		mps.println(numAtoms + &quot;\n&quot;);&#xD;
		for(int i = 0; i &lt; atoms.length; i++) {&#xD;
			mps.println(atoms[i].toStringForXYZ());&#xD;
		}&#xD;
		mps.close();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcsvt5AREeOq6NMfztjeOg" name="main" specification="_VZ1B4pAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VcsvuJAREeOq6NMfztjeOg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcsvuZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>String root = &quot;C:\\Users\\Eric\\git\\CrystalSim\\output\\CrystallizationSimulation -- structures\\CrystallizationSimulation -- structure -- 0&quot;;&#xD;
		double boomFactor = 1.5;&#xD;
		ExplodeCrystal ec = new ExplodeCrystal(root, boomFactor);&#xD;
		ec.run();&#xD;
		ec.print();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_VZzMsJAREeOq6NMfztjeOg" name="ExplodeCrystal" method="_VcsIopAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_VZzzwZAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_VZzzwpAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_Vc1SkJAREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param file String that points to a .xyz file WITHOUT THE .XYZ EXTENSION&#xD;
	 * @param boomFactor > 0 indicates that the output will be an exploded view.  &lt; 0 indicates that the output will be an imploded view</body>
          </ownedComment>
          <ownedParameter xmi:id="_VZzMsZAREeOq6NMfztjeOg" name="fileRoot">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VZzzwJAREeOq6NMfztjeOg" name="boomFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VZzzw5AREeOq6NMfztjeOg" type="_VZylpJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VZzzxJAREeOq6NMfztjeOg" name="run" method="_VcsIq5AREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VZzzxZAREeOq6NMfztjeOg" name="readFile" visibility="private" method="_VcsIrJAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VZ0a0JAREeOq6NMfztjeOg" name="determineNumAtomTypes" visibility="private" method="_VcsvsJAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VZ0a0ZAREeOq6NMfztjeOg" name="computeCM" visibility="private" method="_VcsvsZAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VZ0a0pAREeOq6NMfztjeOg" name="getDisplacementVectors" visibility="private" method="_VcsvspAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZ0a05AREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VZ0a1JAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZ1B4JAREeOq6NMfztjeOg" name="explode" visibility="private" method="_VcsvtZAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VZ1B4ZAREeOq6NMfztjeOg" name="print" method="_VcsvtpAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VZ1B4pAREeOq6NMfztjeOg" name="main" isStatic="true" method="_Vcsvt5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZ1B45AREeOq6NMfztjeOg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VZ1B5JAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VcAMIJAREeOq6NMfztjeOg" name="ExplodeCrystal" method="_VcsIppAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_VcAMI5AREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_VcAzMJAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_Vc1SkZAREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param atoms List of atoms in the crystal to explode&#xD;
	 * @param boomFactor > 0 indicates that the output will be an exploded view.  &lt; 0 indicates that the output will be an imploded view</body>
          </ownedComment>
          <ownedParameter xmi:id="_VcAMIZAREeOq6NMfztjeOg" name="atoms" type="_Vbl8cJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcAzMpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcAMIpAREeOq6NMfztjeOg" name="boomFactor">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VcAzMZAREeOq6NMfztjeOg" type="_VZylpJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_VZ2QAJAREeOq6NMfztjeOg" name="FittableParametersOptions">
        <ownedOperation xmi:id="_VZ23GJAREeOq6NMfztjeOg" name="toString" method="_VcsvupAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZ3eIJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedLiteral xmi:id="_VZ23EJAREeOq6NMfztjeOg" name="FIT_T_N"/>
        <ownedLiteral xmi:id="_VZ23EZAREeOq6NMfztjeOg" name="FIT_K_N"/>
        <ownedLiteral xmi:id="_VZ23EpAREeOq6NMfztjeOg" name="FIT_K_T"/>
        <ownedLiteral xmi:id="_VZ23E5AREeOq6NMfztjeOg" name="FIT_K_T_N"/>
        <ownedLiteral xmi:id="_VZ23FJAREeOq6NMfztjeOg" name="FIT_N"/>
        <ownedLiteral xmi:id="_VZ23FZAREeOq6NMfztjeOg" name="FIT_T"/>
        <ownedLiteral xmi:id="_VZ23FpAREeOq6NMfztjeOg" name="FIT_K"/>
        <ownedLiteral xmi:id="_VZ23F5AREeOq6NMfztjeOg" name="FIT_NONE"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_VZ3eIpAREeOq6NMfztjeOg" name="FittingType">
        <ownedLiteral xmi:id="_VZ3eJJAREeOq6NMfztjeOg" name="sigmoidal"/>
        <ownedLiteral xmi:id="_VZ3eJZAREeOq6NMfztjeOg" name="sharp_hancock"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_VZ4FMJAREeOq6NMfztjeOg" name="IndividualCrystalliteAnisotropy">
        <ownedAttribute xmi:id="_VcWxcJAREeOq6NMfztjeOg" name="points" visibility="private" type="_BOtMYJAREeOq6NMfztjeOg" association="_Vc_DkZAREeOq6NMfztjeOg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcWxcZAREeOq6NMfztjeOg" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcWxdJAREeOq6NMfztjeOg" name="CM" type="_BOtMYJAREeOq6NMfztjeOg" isReadOnly="true" association="_Vc_DlJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_VcWxdZAREeOq6NMfztjeOg" name="sixPoints" type="_BOtMYJAREeOq6NMfztjeOg" isReadOnly="true" association="_Vc_qoZAREeOq6NMfztjeOg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcWxdpAREeOq6NMfztjeOg" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcXYgZAREeOq6NMfztjeOg" name="actualAngle" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcXYgpAREeOq6NMfztjeOg" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcXYhZAREeOq6NMfztjeOg" name="crystalliteVolume">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcX_kJAREeOq6NMfztjeOg" name="maxAngle" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcX_kZAREeOq6NMfztjeOg" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vc1SkpAREeOq6NMfztjeOg" name="angleIncrement" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vc1SlZAREeOq6NMfztjeOg" value="5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_Vc1SlpAREeOq6NMfztjeOg" name="startAngle" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_Vc15opAREeOq6NMfztjeOg" value="5"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VctWwJAREeOq6NMfztjeOg" name="IndividualCrystalliteAnisotropy" specification="_VbnKkJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VctWwZAREeOq6NMfztjeOg" name="points" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VctWwpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VctWw5AREeOq6NMfztjeOg" type="_VZ4FMJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>this.points = points;&#xD;
		sixPoints = new JVector[6];&#xD;
		actualAngle = new double[6];&#xD;
		crystalliteVolume = points.length;&#xD;
		findAllPoints();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VctWxJAREeOq6NMfztjeOg" name="findAllPoints" specification="_VZ4sQJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>calculateCM();&#xD;
		calculatePoint1();&#xD;
		calculatePoint2();&#xD;
		calculatePoint3();&#xD;
		calculatePoint4();&#xD;
		calculatePoint5(0);&#xD;
		calculatePoint6(0);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VctWxZAREeOq6NMfztjeOg" name="calculateCM" specification="_VZ4sQZAREeOq6NMfztjeOg">
          <language>java</language>
          <body>maxAngle = startAngle;&#xD;
		JVector[] coords = points;&#xD;
		JVector total = new JVector();&#xD;
		for(int i = 0; i &lt; coords.length; i++) {&#xD;
			total = JVector.add(total, coords[i]);&#xD;
		}&#xD;
		CM = JVector.multiply(total, 1./((double) coords.length));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VctWxpAREeOq6NMfztjeOg" name="calculatePoint1" specification="_VZ4sQpAREeOq6NMfztjeOg">
          <language>java</language>
          <body>maxAngle = startAngle;&#xD;
		double len = 0, curLen;&#xD;
		JVector furthest = null, curPoint;&#xD;
		&#xD;
		JVector[] coords = points;&#xD;
		&#xD;
		if(CM == null) {&#xD;
			calculateCM();&#xD;
		}&#xD;
		for(int i = 0; i &lt; coords.length; i++) {&#xD;
			curPoint = coords[i];&#xD;
			curLen = JVector.subtract(CM, coords[i]).length();&#xD;
			if(curLen > len) {&#xD;
				len = curLen;&#xD;
				furthest = (JVector) curPoint.clone();&#xD;
				actualAngle[0] = maxAngle;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if(furthest == null) {&#xD;
			String failString = &quot;calcPoint1() method failed to find point 2.&quot;;&#xD;
			failString += &quot;\ncoords.length = &quot; + coords.length + &quot; and CM = &quot; + CM.toString();&#xD;
			throw new RuntimeException(failString);&#xD;
		} else {&#xD;
			this.sixPoints[0] = furthest;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VctWx5AREeOq6NMfztjeOg" name="calculatePoint2" specification="_VZ4sQ5AREeOq6NMfztjeOg">
          <language>java</language>
          <body>double len = 0, curLen, angle;&#xD;
		JVector furthest = null, curPoint;&#xD;
		&#xD;
		JVector[] coords = points;&#xD;
		&#xD;
		if(CM == null) {&#xD;
			calculateCM();&#xD;
		}&#xD;
		if(sixPoints[0] == null) {&#xD;
			calculatePoint1();&#xD;
		}&#xD;
&#xD;
		for(int i = 0; i &lt; coords.length; i++) {&#xD;
			curPoint = coords[i];&#xD;
			curLen = JVector.subtract(CM, coords[i]).length();&#xD;
			angle = JVector.angleDegrees(&#xD;
					JVector.subtract(CM, curPoint), &#xD;
					JVector.subtract(CM, sixPoints[0])&#xD;
					);&#xD;
			if(curLen > len &amp;&amp; angle > (180-maxAngle)) {&#xD;
				len = curLen;&#xD;
				furthest = (JVector) curPoint.clone();&#xD;
				actualAngle[1] = angle;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if(furthest == null) {&#xD;
			/*&#xD;
			String failString = &quot;calcPoint2() method failed to find point 2.&quot;;&#xD;
			failString += &quot;\ncoords.length = &quot; + coords.length + &quot; and CM = &quot; + CM.toString();&#xD;
			throw new RuntimeException(failString);&#xD;
			*/&#xD;
			maxAngle += angleIncrement;&#xD;
			calculatePoint2();&#xD;
			maxAngle -= angleIncrement;&#xD;
		} else {&#xD;
			this.sixPoints[1] = furthest;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VctWyJAREeOq6NMfztjeOg" name="calculatePoint3" specification="_VZ4sRJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>double len = 0, curLen, angle;&#xD;
		JVector furthest = null, curPoint;&#xD;
		&#xD;
		JVector[] coords = points;&#xD;
		&#xD;
		if(CM == null) {&#xD;
			calculateCM();&#xD;
		}&#xD;
		if(sixPoints[0] == null) {&#xD;
			calculatePoint1();&#xD;
		}&#xD;
		if(sixPoints[1] == null) {&#xD;
			calculatePoint2();&#xD;
		}&#xD;
&#xD;
		for(int i = 0; i &lt; coords.length; i++) {&#xD;
			curPoint = coords[i];&#xD;
			curLen = JVector.subtract(CM, coords[i]).length();&#xD;
			angle = JVector.angleDegrees(&#xD;
					JVector.subtract(CM, curPoint), &#xD;
					JVector.subtract(CM, sixPoints[0])&#xD;
					);&#xD;
			if(curLen > len &amp;&amp; angle > (90-maxAngle) &amp;&amp; angle &lt; (90 + maxAngle)) {&#xD;
				len = curLen;&#xD;
				furthest = (JVector) curPoint.clone();&#xD;
				actualAngle[2] = angle;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if(furthest == null) {&#xD;
			/*&#xD;
			String failString = &quot;calcPoint2() method failed to find point 2.&quot;;&#xD;
			failString += &quot;\ncoords.length = &quot; + coords.length + &quot; and CM = &quot; + CM.toString();&#xD;
			throw new RuntimeException(failString);&#xD;
			*/&#xD;
			maxAngle += angleIncrement;&#xD;
			calculatePoint3();&#xD;
			maxAngle -= angleIncrement;&#xD;
		} else {&#xD;
			this.sixPoints[2] = furthest;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_VctWyZAREeOq6NMfztjeOg" name="calculatePoint4" specification="_VZ4sRZAREeOq6NMfztjeOg">
          <language>java</language>
          <body>double len = 0, curLen, angle;&#xD;
		JVector furthest = null, curPoint;&#xD;
		&#xD;
		JVector[] coords = points;&#xD;
		&#xD;
		if(CM == null) {&#xD;
			calculateCM();&#xD;
		}&#xD;
		if(sixPoints[0] == null) {&#xD;
			calculatePoint1();&#xD;
		}&#xD;
		if(sixPoints[1] == null) {&#xD;
			calculatePoint2();&#xD;
		}&#xD;
		if(sixPoints[2] == null) {&#xD;
			calculatePoint3();&#xD;
		}&#xD;
&#xD;
		for(int i = 0; i &lt; coords.length; i++) {&#xD;
			curPoint = coords[i];&#xD;
			curLen = JVector.subtract(CM, coords[i]).length();&#xD;
			angle = JVector.angleDegrees(&#xD;
					JVector.subtract(CM, curPoint), &#xD;
					JVector.subtract(CM, sixPoints[2])&#xD;
					);&#xD;
			if(curLen > len &amp;&amp; angle > (180-maxAngle)) {&#xD;
				len = curLen;&#xD;
				furthest = (JVector) curPoint.clone();&#xD;
				actualAngle[3] = angle;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if(furthest == null) {&#xD;
			/*&#xD;
			String failString = &quot;calcPoint2() method failed to find point 2.&quot;;&#xD;
			failString += &quot;\ncoords.length = &quot; + coords.length + &quot; and CM = &quot; + CM.toString();&#xD;
			throw new RuntimeException(failString);&#xD;
			*/&#xD;
			maxAngle += angleIncrement;&#xD;
			calculatePoint4();&#xD;
			maxAngle -= angleIncrement;&#xD;
		} else {&#xD;
			this.sixPoints[3] = furthest;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vct90JAREeOq6NMfztjeOg" name="calculatePoint5" specification="_VZ5TUJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vct90ZAREeOq6NMfztjeOg" name="timesCalculated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>double len = 0, curLen, angle;&#xD;
		JVector furthest = null, curPoint, cross;&#xD;
		&#xD;
		JVector[] coords = points;&#xD;
		&#xD;
		if(CM == null) {&#xD;
			calculateCM();&#xD;
		}&#xD;
		if(sixPoints[0] == null) {&#xD;
			calculatePoint1();&#xD;
		}&#xD;
		if(sixPoints[1] == null) {&#xD;
			calculatePoint2();&#xD;
		}&#xD;
		if(sixPoints[2] == null) {&#xD;
			calculatePoint3();&#xD;
		}&#xD;
		if(sixPoints[3] == null) {&#xD;
			calculatePoint4();&#xD;
		}&#xD;
&#xD;
		for(int i = 0; i &lt; coords.length; i++) {&#xD;
			curPoint = coords[i];&#xD;
			curLen = JVector.subtract(CM, coords[i]).length();&#xD;
			cross = JVector.cross(&#xD;
					JVector.subtract(CM, sixPoints[0]), &#xD;
					JVector.subtract(CM, sixPoints[2])&#xD;
					);&#xD;
			angle = JVector.angleDegrees(JVector.subtract(CM, curPoint), cross);&#xD;
			if(curLen > len &amp;&amp; angle &lt; maxAngle) {&#xD;
				len = curLen;&#xD;
				furthest = (JVector) curPoint.clone();&#xD;
				actualAngle[4] = angle;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if(furthest == null) {&#xD;
			/*&#xD;
			String failString = &quot;calcPoint2() method failed to find point 2.&quot;;&#xD;
			failString += &quot;\ncoords.length = &quot; + coords.length + &quot; and CM = &quot; + CM.toString();&#xD;
			throw new RuntimeException(failString);&#xD;
			*/&#xD;
			maxAngle += angleIncrement;&#xD;
			if(timesCalculated > 10) {&#xD;
				this.sixPoints[4] = CM;&#xD;
			} else {&#xD;
				calculatePoint5(++timesCalculated);&#xD;
			}&#xD;
			maxAngle -= angleIncrement;&#xD;
		} else {&#xD;
			this.sixPoints[4] = furthest;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vct90pAREeOq6NMfztjeOg" name="calculatePoint6" specification="_VZ5TUpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vct905AREeOq6NMfztjeOg" name="timesCalled">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>double len = 0, curLen, angle;&#xD;
		JVector furthest = null, curPoint, cross;&#xD;
		&#xD;
		JVector[] coords = points;&#xD;
		&#xD;
		if(CM == null) {&#xD;
			calculateCM();&#xD;
		}&#xD;
		if(sixPoints[0] == null) {&#xD;
			calculatePoint1();&#xD;
		}&#xD;
		if(sixPoints[1] == null) {&#xD;
			calculatePoint2();&#xD;
		}&#xD;
		if(sixPoints[2] == null) {&#xD;
			calculatePoint3();&#xD;
		}&#xD;
		if(sixPoints[3] == null) {&#xD;
			calculatePoint4();&#xD;
		}&#xD;
		if(sixPoints[3] == null) {&#xD;
			calculatePoint5(0);&#xD;
		}&#xD;
&#xD;
		for(int i = 0; i &lt; coords.length; i++) {&#xD;
			curPoint = coords[i];&#xD;
			curLen = JVector.subtract(CM, coords[i]).length();&#xD;
			cross = JVector.cross(&#xD;
					JVector.subtract(CM, sixPoints[0]), &#xD;
					JVector.subtract(CM, sixPoints[3])&#xD;
					);&#xD;
			angle = JVector.angleDegrees(JVector.subtract(CM, curPoint), cross);&#xD;
			if(curLen > len &amp;&amp; angle &lt; maxAngle) {&#xD;
				len = curLen;&#xD;
				furthest = (JVector) curPoint.clone();&#xD;
				actualAngle[4] = angle;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if(furthest == null) {&#xD;
			/*&#xD;
			String failString = &quot;calcPoint2() method failed to find point 2.&quot;;&#xD;
			failString += &quot;\ncoords.length = &quot; + coords.length + &quot; and CM = &quot; + CM.toString();&#xD;
			throw new RuntimeException(failString);&#xD;
			*/&#xD;
			maxAngle += angleIncrement;&#xD;
			if(timesCalled > 10) {&#xD;
				this.sixPoints[5] = CM;&#xD;
			} else {&#xD;
				calculatePoint6(++timesCalled);&#xD;
			}&#xD;
			maxAngle -= angleIncrement;&#xD;
		} else {&#xD;
			this.sixPoints[5] = furthest;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vct91JAREeOq6NMfztjeOg" name="writeNewXYZFile" specification="_VbnxpJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vct91ZAREeOq6NMfztjeOg" name="f" type="_BOtzc5AREeOq6NMfztjeOg"/>
          <language>java</language>
          <body>MyPrintStream ps = new MyPrintStream(f);&#xD;
		int numXtals = points.length;&#xD;
		&#xD;
		numXtals += sixPoints.length*7;&#xD;
		ps.println(numXtals + &quot;&quot;);&#xD;
		ps.println(&quot;&quot;);&#xD;
		&#xD;
		for(int i = 0; i &lt; sixPoints.length; i++) {&#xD;
			ps.println(&quot;100\t&quot; + sixPoints[i].i + &quot;\t&quot; + sixPoints[i].j + &quot;\t&quot; + sixPoints[i].k);&#xD;
			ps.println(&quot;100\t&quot; + CM.i + &quot;\t&quot; + CM.j + &quot;\t&quot; + CM.k);&#xD;
		}&#xD;
		for(int i = 0; i &lt; points.length; i++) {&#xD;
			ps.println(i + &quot;\t&quot; + points[i].i + &quot;\t&quot; + points[i].j + &quot;\t&quot; + points[i].k);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vct91pAREeOq6NMfztjeOg" name="getAxisLengths" specification="_VZ5TVJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vct915AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Vct92JAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>double[] axisLengths = new double[3];&#xD;
		double dist = 0;&#xD;
		JVector v1, v2;&#xD;
		for(int i = 0; i &lt; 3; i++) {&#xD;
			try {&#xD;
				v1 = getSixPoints(2*i);&#xD;
				v2 = getSixPoints(2*i+1);&#xD;
				dist = JVector.distance(v1, v2);&#xD;
			} catch(NullPointerException npe) {&#xD;
				npe.printStackTrace();&#xD;
			}&#xD;
			if(dist == 0) {&#xD;
				dist = 1;&#xD;
			}&#xD;
			axisLengths[i] = dist;&#xD;
		}&#xD;
		return axisLengths;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vct92ZAREeOq6NMfztjeOg" name="getApproximateDimensionality" specification="_VZ56YZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vct92pAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double[] axisLengths = getAxisLengths();&#xD;
		double max = 1;&#xD;
		max = Math.max(axisLengths[0], axisLengths[1]);&#xD;
		max = Math.max(max, axisLengths[2]);&#xD;
		return axisLengths[0]/max + axisLengths[1]/max + axisLengths[2]/max;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vct925AREeOq6NMfztjeOg" name="getAnisotropy" specification="_VZ56Y5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vct93JAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double[] axisLengths = getAxisLengths();&#xD;
		double max = 1, min = 1;&#xD;
		max = Math.max(axisLengths[0], axisLengths[1]);&#xD;
		max = Math.max(max, axisLengths[2]);&#xD;
		min = Math.min(axisLengths[0], axisLengths[1]);&#xD;
		min = Math.min(min, axisLengths[2]);&#xD;
		return max/min;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcuk4JAREeOq6NMfztjeOg" name="getSixPoints" specification="_VZ56ZZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcuk4ZAREeOq6NMfztjeOg" name="pointIdx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Vcuk4pAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>return sixPoints[pointIdx]; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcuk45AREeOq6NMfztjeOg" name="getMaxAngle" specification="_VZ6hcJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcuk5JAREeOq6NMfztjeOg" name="pointIdx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Vcuk5ZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return actualAngle[pointIdx]; </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_VZ4sQJAREeOq6NMfztjeOg" name="findAllPoints" method="_VctWxJAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VZ4sQZAREeOq6NMfztjeOg" name="calculateCM" method="_VctWxZAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VZ4sQpAREeOq6NMfztjeOg" name="calculatePoint1" method="_VctWxpAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VZ4sQ5AREeOq6NMfztjeOg" name="calculatePoint2" method="_VctWx5AREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VZ4sRJAREeOq6NMfztjeOg" name="calculatePoint3" method="_VctWyJAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VZ4sRZAREeOq6NMfztjeOg" name="calculatePoint4" method="_VctWyZAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_VZ5TUJAREeOq6NMfztjeOg" name="calculatePoint5" method="_Vct90JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZ5TUZAREeOq6NMfztjeOg" name="timesCalculated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZ5TUpAREeOq6NMfztjeOg" name="calculatePoint6" method="_Vct90pAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZ5TU5AREeOq6NMfztjeOg" name="timesCalled">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZ5TVJAREeOq6NMfztjeOg" name="getAxisLengths" method="_Vct91pAREeOq6NMfztjeOg">
          <ownedComment xmi:id="_Vc15pJAREeOq6NMfztjeOg">
            <body>&#xD;
	 * @return the lengths of the three orthogonal axes</body>
          </ownedComment>
          <ownedParameter xmi:id="_VZ5TVZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VZ5TVpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZ56YZAREeOq6NMfztjeOg" name="getApproximateDimensionality" method="_Vct92ZAREeOq6NMfztjeOg">
          <ownedComment xmi:id="_Vc15pZAREeOq6NMfztjeOg">
            <body>&#xD;
	 * @return (a+b+c)/max(a,b,c)</body>
          </ownedComment>
          <ownedParameter xmi:id="_VZ56YpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZ56Y5AREeOq6NMfztjeOg" name="getAnisotropy" method="_Vct925AREeOq6NMfztjeOg">
          <ownedComment xmi:id="_Vc15ppAREeOq6NMfztjeOg">
            <body>&#xD;
	 * @return max(a,b,c)/min(a,b,c)</body>
          </ownedComment>
          <ownedParameter xmi:id="_VZ56ZJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VZ56ZZAREeOq6NMfztjeOg" name="getSixPoints" method="_Vcuk4JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZ56ZpAREeOq6NMfztjeOg" name="pointIdx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VbnxppAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VZ6hcJAREeOq6NMfztjeOg" name="getMaxAngle" method="_Vcuk45AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VZ6hcZAREeOq6NMfztjeOg" name="pointIdx">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VZ6hcpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_VbnKkJAREeOq6NMfztjeOg" name="IndividualCrystalliteAnisotropy" method="_VctWwJAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_VbnxoJAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_VbnxoZAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_Vc15o5AREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param xtals 2d array of lattice points. First dimension is the individual crystallites. Second &#xD;
	 * dimension is the lattice points of the individual crystallites.</body>
          </ownedComment>
          <ownedParameter xmi:id="_VbnKkZAREeOq6NMfztjeOg" name="points" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Vbnxo5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_VbnxopAREeOq6NMfztjeOg" type="_VZ4FMJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_VbnxpJAREeOq6NMfztjeOg" name="writeNewXYZFile" method="_Vct91JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_VbnxpZAREeOq6NMfztjeOg" name="f" type="_BOtzc5AREeOq6NMfztjeOg"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_VZ7vkJAREeOq6NMfztjeOg" name="Nucleation">
        <ownedLiteral xmi:id="_VZ8WoZAREeOq6NMfztjeOg" name="Initial"/>
        <ownedLiteral xmi:id="_VZ8WopAREeOq6NMfztjeOg" name="Continuous"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_VZ8Wo5AREeOq6NMfztjeOg" clientDependency="_VboYsJAREeOq6NMfztjeOg" name="NucleationEvent">
        <ownedAttribute xmi:id="_VcYmoJAREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_VcYmoZAREeOq6NMfztjeOg" value="4290812620559138427L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcYmopAREeOq6NMfztjeOg" name="time" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_VcYmo5AREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg" isReadOnly="true" association="_Vc_qpJAREeOq6NMfztjeOg"/>
        <interfaceRealization xmi:id="_VboYsJAREeOq6NMfztjeOg" client="_VZ8Wo5AREeOq6NMfztjeOg" supplier="_BOvoopAREeOq6NMfztjeOg" contract="_BOvoopAREeOq6NMfztjeOg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Vcuk5pAREeOq6NMfztjeOg" name="NucleationEvent" specification="_Vbo_wJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vcuk55AREeOq6NMfztjeOg" name="time">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Vcuk6JAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vcuk6ZAREeOq6NMfztjeOg" type="_VZ8Wo5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>this.time = time;&#xD;
		this.location = location;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_Vbo_wJAREeOq6NMfztjeOg" name="NucleationEvent" method="_Vcuk5pAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_Vbo_w5AREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_Vbo_xJAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_Vbo_wZAREeOq6NMfztjeOg" name="time">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Vbo_wpAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vbo_xZAREeOq6NMfztjeOg" type="_VZ8Wo5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_VZ9kwJAREeOq6NMfztjeOg" name="NucleationLocation">
        <ownedLiteral xmi:id="_VZ-L0JAREeOq6NMfztjeOg" name="Random"/>
        <ownedLiteral xmi:id="_VZ-L0ZAREeOq6NMfztjeOg" name="Fixed"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_VZ-L0pAREeOq6NMfztjeOg" name="NucleationOrientation">
        <ownedLiteral xmi:id="_VZ-L1JAREeOq6NMfztjeOg" name="Random"/>
        <ownedLiteral xmi:id="_VZ-L1ZAREeOq6NMfztjeOg" name="SetOfOrientations"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_VaIj4JAREeOq6NMfztjeOg" name="ShapeTypes">
        <ownedLiteral xmi:id="_VaIj4pAREeOq6NMfztjeOg" name="Spherical"/>
        <ownedLiteral xmi:id="_VaJK8JAREeOq6NMfztjeOg" name="Cylindrical"/>
        <ownedLiteral xmi:id="_VaJK8ZAREeOq6NMfztjeOg" name="Cubic"/>
        <ownedLiteral xmi:id="_VaJK8pAREeOq6NMfztjeOg" name="Tetragonal"/>
        <ownedLiteral xmi:id="_VaJK85AREeOq6NMfztjeOg" name="Orthorhombic"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_VacF4JAREeOq6NMfztjeOg" name="Termination">
        <ownedOperation xmi:id="_Vb3CMJAREeOq6NMfztjeOg" name="terminate" method="_Vc0EcpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_Vb3CMZAREeOq6NMfztjeOg" name="sp" type="_BPLtgJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_Vb3CMpAREeOq6NMfztjeOg" name="val">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_Vb3pQJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedLiteral xmi:id="_Vacs8JAREeOq6NMfztjeOg" name="FractionComplete"/>
        <ownedLiteral xmi:id="_Vacs8ZAREeOq6NMfztjeOg" name="TimeElapsed"/>
        <ownedLiteral xmi:id="_Vacs8pAREeOq6NMfztjeOg" name="NumberOfCrystals"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_VcGSwJAREeOq6NMfztjeOg" name="ExperimentalSample"/>
      <packagedElement xmi:type="uml:Association" xmi:id="_Vc8AQJAREeOq6NMfztjeOg" name="" memberEnd="_Vc8AQZAREeOq6NMfztjeOg _VcPcspAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_Vc8AQZAREeOq6NMfztjeOg" name="" type="_VZj8IJAREeOq6NMfztjeOg" association="_Vc8AQJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Vc8nUJAREeOq6NMfztjeOg" name="" memberEnd="_Vc8nUZAREeOq6NMfztjeOg _VcQDwZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_Vc8nUZAREeOq6NMfztjeOg" name="" type="_VZj8IJAREeOq6NMfztjeOg" association="_Vc8nUJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Vc8nU5AREeOq6NMfztjeOg" name="" memberEnd="_Vc8nVJAREeOq6NMfztjeOg _VcR485AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_Vc8nVJAREeOq6NMfztjeOg" name="" type="_VZj8IJAREeOq6NMfztjeOg" association="_Vc8nU5AREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Vc9OYJAREeOq6NMfztjeOg" name="" memberEnd="_Vc9OYZAREeOq6NMfztjeOg _VcSgAZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_Vc9OYZAREeOq6NMfztjeOg" name="" type="_VZj8IJAREeOq6NMfztjeOg" association="_Vc9OYJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Vc9OY5AREeOq6NMfztjeOg" name="" memberEnd="_Vc9OZJAREeOq6NMfztjeOg _VcTuIpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_Vc9OZJAREeOq6NMfztjeOg" name="" type="_BPMUkJAREeOq6NMfztjeOg" association="_Vc9OY5AREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Vc9OZpAREeOq6NMfztjeOg" name="" memberEnd="_Vc9OZ5AREeOq6NMfztjeOg _VcTuJZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_Vc9OZ5AREeOq6NMfztjeOg" name="" type="_BPMUkJAREeOq6NMfztjeOg" association="_Vc9OZpAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Vc91cZAREeOq6NMfztjeOg" name="" memberEnd="_Vc91cpAREeOq6NMfztjeOg _VcUVMZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_Vc91cpAREeOq6NMfztjeOg" name="" type="_BPMUkJAREeOq6NMfztjeOg" association="_Vc91cZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Vc91dJAREeOq6NMfztjeOg" name="" memberEnd="_Vc91dZAREeOq6NMfztjeOg _VcUVM5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_Vc91dZAREeOq6NMfztjeOg" name="" type="_BPMUkJAREeOq6NMfztjeOg" association="_Vc91dJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Vc-cgZAREeOq6NMfztjeOg" name="" memberEnd="_Vc-cgpAREeOq6NMfztjeOg _VcU8QpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_Vc-cgpAREeOq6NMfztjeOg" name="" type="_VZylpJAREeOq6NMfztjeOg" association="_Vc-cgZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Vc-chJAREeOq6NMfztjeOg" name="" memberEnd="_Vc-chZAREeOq6NMfztjeOg _VcWKYZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_Vc-chZAREeOq6NMfztjeOg" name="" type="_VZylpJAREeOq6NMfztjeOg" association="_Vc-chJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Vc_DkZAREeOq6NMfztjeOg" name="" memberEnd="_Vc_DkpAREeOq6NMfztjeOg _VcWxcJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_Vc_DkpAREeOq6NMfztjeOg" name="" type="_VZ4FMJAREeOq6NMfztjeOg" association="_Vc_DkZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Vc_DlJAREeOq6NMfztjeOg" name="" memberEnd="_Vc_DlZAREeOq6NMfztjeOg _VcWxdJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_Vc_DlZAREeOq6NMfztjeOg" name="" type="_VZ4FMJAREeOq6NMfztjeOg" association="_Vc_DlJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Vc_qoZAREeOq6NMfztjeOg" name="" memberEnd="_Vc_qopAREeOq6NMfztjeOg _VcWxdZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_Vc_qopAREeOq6NMfztjeOg" name="" type="_VZ4FMJAREeOq6NMfztjeOg" association="_Vc_qoZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Vc_qpJAREeOq6NMfztjeOg" name="" memberEnd="_Vc_qpZAREeOq6NMfztjeOg _VcYmo5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_Vc_qpZAREeOq6NMfztjeOg" name="" type="_VZ8Wo5AREeOq6NMfztjeOg" association="_Vc_qpJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_VdARsZAREeOq6NMfztjeOg" name="" memberEnd="_VdARspAREeOq6NMfztjeOg _VcZNspAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_VdARspAREeOq6NMfztjeOg" name="" type="_BPM7oJAREeOq6NMfztjeOg" association="_VdARsZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_VdARtJAREeOq6NMfztjeOg" name="" memberEnd="_VdARtZAREeOq6NMfztjeOg _VcZ0xJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_VdARtZAREeOq6NMfztjeOg" name="" type="_BPM7oJAREeOq6NMfztjeOg" association="_VdARtJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_VdA4wZAREeOq6NMfztjeOg" name="" memberEnd="_VdA4wpAREeOq6NMfztjeOg _VcbC4JAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_VdA4wpAREeOq6NMfztjeOg" name="" type="_BPM7oJAREeOq6NMfztjeOg" association="_VdA4wZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_VdA4xJAREeOq6NMfztjeOg" name="" memberEnd="_VdA4xZAREeOq6NMfztjeOg _Vcf7YJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_VdA4xZAREeOq6NMfztjeOg" name="" type="_BPLtgJAREeOq6NMfztjeOg" association="_VdA4xJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_VdBf0ZAREeOq6NMfztjeOg" name="" memberEnd="_VdBf0pAREeOq6NMfztjeOg _VcgidpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_VdBf0pAREeOq6NMfztjeOg" name="" type="_BPLtgJAREeOq6NMfztjeOg" association="_VdBf0ZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_VdBf1JAREeOq6NMfztjeOg" name="" memberEnd="_VdBf1ZAREeOq6NMfztjeOg _VchJhZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_VdBf1ZAREeOq6NMfztjeOg" name="" type="_BPLtgJAREeOq6NMfztjeOg" association="_VdBf1JAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_VdCG4ZAREeOq6NMfztjeOg" name="" memberEnd="_VdCG4pAREeOq6NMfztjeOg _VchwlZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_VdCG4pAREeOq6NMfztjeOg" name="" type="_BPLtgJAREeOq6NMfztjeOg" association="_VdCG4ZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_VdCG5JAREeOq6NMfztjeOg" name="" memberEnd="_VdCG5ZAREeOq6NMfztjeOg _VciXppAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_VdCG5ZAREeOq6NMfztjeOg" name="" type="_BPLtgJAREeOq6NMfztjeOg" association="_VdCG5JAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_VdCt8ZAREeOq6NMfztjeOg" name="" memberEnd="_VdCt8pAREeOq6NMfztjeOg _VcjlwpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_VdCt8pAREeOq6NMfztjeOg" name="" type="_BPLtgJAREeOq6NMfztjeOg" association="_VdCt8ZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_VdCt9JAREeOq6NMfztjeOg" name="" memberEnd="_VdCt9ZAREeOq6NMfztjeOg _VcjlxZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_VdCt9ZAREeOq6NMfztjeOg" name="" type="_BPLtgJAREeOq6NMfztjeOg" association="_VdCt9JAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_VdDVAZAREeOq6NMfztjeOg" name="" memberEnd="_VdDVApAREeOq6NMfztjeOg _VckM1pAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_VdDVApAREeOq6NMfztjeOg" name="" type="_BPLtgJAREeOq6NMfztjeOg" association="_VdDVAZAREeOq6NMfztjeOg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_VYrLUJAREeOq6NMfztjeOg" name="shapes">
      <packagedElement xmi:type="uml:Class" xmi:id="_VbdZk5AREeOq6NMfztjeOg" clientDependency="_n6v_YJAREeOq6NMfztjeOg" name="Shape" isAbstract="true">
        <ownedAttribute xmi:id="_n61e9JAREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n62GAJAREeOq6NMfztjeOg" value="5203336343450059462L"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n62GAZAREeOq6NMfztjeOg" name="type" visibility="protected" type="_VbhD85AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_n62GA5AREeOq6NMfztjeOg" name="location" visibility="protected" type="_BOtMYJAREeOq6NMfztjeOg" association="_n68zsJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_n62GBZAREeOq6NMfztjeOg" name="unitAxes" visibility="protected" type="_BOtMYJAREeOq6NMfztjeOg" association="_n69awZAREeOq6NMfztjeOg">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n62GBpAREeOq6NMfztjeOg" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_n62tEpAREeOq6NMfztjeOg" name="rand" visibility="protected" isStatic="true" type="_BOw2w5AREeOq6NMfztjeOg" association="_n69axJAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_n62tE5AREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n62tFJAREeOq6NMfztjeOg" key="volatile"/>
          </eAnnotations>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n62tFZAREeOq6NMfztjeOg" value="new Random()"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_n6v_YJAREeOq6NMfztjeOg" client="_VbdZk5AREeOq6NMfztjeOg" supplier="_BOvoopAREeOq6NMfztjeOg" contract="_BOvoopAREeOq6NMfztjeOg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n65wYJAREeOq6NMfztjeOg" name="Shape" specification="_n6v_YZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n65wYZAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n65wYpAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n65wY5AREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n65wZJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n65wZZAREeOq6NMfztjeOg" type="_VbdZk5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>this.type = type;&#xD;
		this.location = location;&#xD;
		this.unitAxes = new JVector[unitAxes.length];&#xD;
		for(int i = 0; i &lt; unitAxes.length; i++) {&#xD;
			this.unitAxes[i] = unitAxes[i].unit();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n65wZpAREeOq6NMfztjeOg" name="toString" specification="_n5-jUJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n65wZ5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String s = &quot;\nType: &quot; + type.toString();&#xD;
		s += &quot;\n\tOrigin: &quot; + location.toString();&#xD;
		s += &quot;\n\tUnit Axes (Orientation):&quot;;&#xD;
		char x = 'x';&#xD;
		for(int i = 0; i &lt; unitAxes.length; i++) {&#xD;
			s += &quot;\n\t\t&quot; + x++ + &quot;:\t&quot; + unitAxes[i].toString();&#xD;
		}&#xD;
		&#xD;
		return s;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n65waJAREeOq6NMfztjeOg" name="getType" specification="_n5-jUpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n65waZAREeOq6NMfztjeOg" type="_VbhD85AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>return type; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n65wapAREeOq6NMfztjeOg" name="getLocation" specification="_n5-jU5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n65wa5AREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>return location; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n65wbJAREeOq6NMfztjeOg" name="getUnitAxes" specification="_n5_KYJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n65wbZAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n65wbpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>return unitAxes; </body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n5-jUJAREeOq6NMfztjeOg" name="toString" method="_n65wZpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n5-jUZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n5-jUpAREeOq6NMfztjeOg" name="getType" method="_n65waJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n6wmcZAREeOq6NMfztjeOg" type="_VbhD85AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n5-jU5AREeOq6NMfztjeOg" name="getLocation" method="_n65wapAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n6wmcpAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n5_KYJAREeOq6NMfztjeOg" name="getUnitAxes" method="_n65wbJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n5_KYZAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n5_KYpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n5_KZJAREeOq6NMfztjeOg" name="getPointsOnFace" isAbstract="true">
          <ownedComment xmi:id="_n67lkJAREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param curAxes &lt;br> Cylindrical: [r,r,h]&#xD;
	 * &lt;br> Cubic: [a,a,a]&#xD;
	 * &lt;br> Tetragonal: [a,a,c]&#xD;
	 * &lt;br> Orthorhombic: [a,b,c]&#xD;
	 * &lt;br> Spherical: [r,r,r]&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_n5_KZZAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n5_xc5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n5_xcJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n5_xcZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n5_xdJAREeOq6NMfztjeOg" name="getRandomPointInside" isAbstract="true">
          <ownedComment xmi:id="_n67lkZAREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param curAxes &lt;br> Cylindrical: [r,r,h]&#xD;
	 * &lt;br> Cubic: [a,a,a]&#xD;
	 * &lt;br> Tetragonal: [a,a,c]&#xD;
	 * &lt;br> Orthorhombic: [a,b,c]&#xD;
	 * &lt;br> Spherical: [r,r,r]&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_n5_xdZAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6AYgJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6wmc5AREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n6AYgpAREeOq6NMfztjeOg" name="calcTotalVolume" isAbstract="true">
          <ownedComment xmi:id="_n67lk5AREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param curAxes &lt;br> Cylindrical: [r,r,h]&#xD;
	 * &lt;br> Cubic: [a,a,a]&#xD;
	 * &lt;br> Tetragonal: [a,a,c]&#xD;
	 * &lt;br> Orthorhombic: [a,b,c]&#xD;
	 * &lt;br> Spherical: [r,r,r]&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_n6AYg5AREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6A_kJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6AYhJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n6v_YZAREeOq6NMfztjeOg" name="Shape" method="_n65wYJAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_n6v_ZZAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n6v_ZpAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_n6v_YpAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6v_Y5AREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6v_ZJAREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6wmcJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6v_Z5AREeOq6NMfztjeOg" type="_VbdZk5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n6wmdJAREeOq6NMfztjeOg" name="isInside" isAbstract="true">
          <ownedComment xmi:id="_n67lkpAREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param curAxes &lt;br> Cylindrical: [r,r,h]&#xD;
	 * &lt;br> Cubic: [a,a,a]&#xD;
	 * &lt;br> Tetragonal: [a,a,c]&#xD;
	 * &lt;br> Orthorhombic: [a,b,c]&#xD;
	 * &lt;br> Spherical: [r,r,r]&#xD;
	 * @param loc&#xD;
	 * @return</body>
          </ownedComment>
          <ownedParameter xmi:id="_n6wmdZAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6xNgJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6wmdpAREeOq6NMfztjeOg" name="loc" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6wmd5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_VbhD8ZAREeOq6NMfztjeOg" clientDependency="_n6xNgpAREeOq6NMfztjeOg" name="ShapeFactory">
        <ownedAttribute xmi:id="_n62tF5AREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n63UIJAREeOq6NMfztjeOg" value="-6517136892188463749L"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_n6xNgpAREeOq6NMfztjeOg" client="_VbhD8ZAREeOq6NMfztjeOg" supplier="_BOvoopAREeOq6NMfztjeOg" contract="_BOvoopAREeOq6NMfztjeOg"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n66XcJAREeOq6NMfztjeOg" name="newShape" specification="_n6x0kJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n66XcZAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n66XcpAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n66Xc5AREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n66XdJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n66XdZAREeOq6NMfztjeOg" type="_VbdZk5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>switch(type) {&#xD;
		case Cubic:&#xD;
			return new Cubic(type, location, unitAxes);&#xD;
		case Tetragonal:&#xD;
			return new Tetragonal(type, location, unitAxes);&#xD;
		case Orthorhombic:&#xD;
			return new Orthorhombic(type, location, unitAxes);&#xD;
		case Spherical:&#xD;
			return new Spherical(type, location, unitAxes);&#xD;
		case Cylindrical:&#xD;
			return new Cylindrical(type, location, unitAxes);&#xD;
		}&#xD;
		throw new RuntimeException(&quot;Shape Type: &quot; + type.toString() + &quot; does not have a corresponding &quot; +&#xD;
				&quot;option in the method: newShape(ShapeTypes type, JVector location, JVector[] unitAxes) &quot; + &#xD;
				&quot;in the class: ShapeFactory&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n6C0wJAREeOq6NMfztjeOg" name="ShapeFactory">
          <eAnnotations xmi:id="_n6Db0JAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n6Db0ZAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_n6Db05AREeOq6NMfztjeOg" type="_VbhD8ZAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n6x0kJAREeOq6NMfztjeOg" name="newShape" isStatic="true" method="_n66XcJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n6x0kZAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6x0kpAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6x0k5AREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6x0lZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6x0lJAREeOq6NMfztjeOg" type="_VbdZk5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Enumeration" xmi:id="_VbhD85AREeOq6NMfztjeOg" name="ShapeTypes">
        <ownedLiteral xmi:id="_n6Ep8ZAREeOq6NMfztjeOg" name="Spherical"/>
        <ownedLiteral xmi:id="_n6Ep8pAREeOq6NMfztjeOg" name="Cylindrical"/>
        <ownedLiteral xmi:id="_n6Ep85AREeOq6NMfztjeOg" name="Cubic"/>
        <ownedLiteral xmi:id="_n6Ep9JAREeOq6NMfztjeOg" name="Tetragonal"/>
        <ownedLiteral xmi:id="_n6Ep9ZAREeOq6NMfztjeOg" name="Orthorhombic"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n5xvAJAREeOq6NMfztjeOg" name="Cubic">
        <generalization xmi:id="_n6rG6JAREeOq6NMfztjeOg" general="_n54csJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_n6034JAREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n6034ZAREeOq6NMfztjeOg" value="4725691834853678486L"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n637MJAREeOq6NMfztjeOg" name="Cubic" specification="_n6rG4JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n637MZAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n637MpAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n637M5AREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n637NJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n637NZAREeOq6NMfztjeOg" type="_n5xvAJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>super(type, location, unitAxes);&#xD;
		// TODO Auto-generated constructor stub&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n6rG4JAREeOq6NMfztjeOg" name="Cubic" method="_n637MJAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_n6rG5JAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n6rG5ZAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_n6rG4ZAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6rG4pAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6rG45AREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6rG55AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6rG5pAREeOq6NMfztjeOg" type="_n5xvAJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n5y9IJAREeOq6NMfztjeOg" name="Cylindrical">
        <generalization xmi:id="_n6s8EpAREeOq6NMfztjeOg" general="_VbdZk5AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_n6034pAREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n60345AREeOq6NMfztjeOg" value="-7583910939546454098L"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n637NpAREeOq6NMfztjeOg" name="Cylindrical" specification="_n6rt8JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n637N5AREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n637OJAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n637OZAREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n637OpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n637O5AREeOq6NMfztjeOg" type="_n5y9IJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>super(type, location, unitAxes);&#xD;
		// TODO Auto-generated constructor stub&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n637PJAREeOq6NMfztjeOg" name="getPointsOnFace" specification="_n5zkMJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n637PZAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n637PpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n637P5AREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n637QJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>return null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n637QZAREeOq6NMfztjeOg" name="getRandomPointInside" specification="_n50yUpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n637QpAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n637Q5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n637RJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>double height = curAxes[2];&#xD;
		// curaxes[1] is the radius of the cylinder&#xD;
		double r = 2*curAxes[0];&#xD;
		&#xD;
		double z = rand.nextDouble() - 0.5;&#xD;
		z *= height;&#xD;
		z += location.k;&#xD;
		&#xD;
		double x, y;&#xD;
		JVector pos = new JVector(0, 0, z);&#xD;
		do {&#xD;
			pos.i = rand.nextDouble() - 0.5;&#xD;
			pos.j = rand.nextDouble() - 0.5;&#xD;
			pos.i *= r;&#xD;
			pos.j *= r;&#xD;
			pos.i += location.i;&#xD;
			pos.j += location.j;&#xD;
		} while(!isInside(curAxes, pos));&#xD;
		System.out.println(pos.toString(4));&#xD;
		return pos;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n64iQJAREeOq6NMfztjeOg" name="isInside" specification="_n6sVAJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n64iQZAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n64iQpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n64iQ5AREeOq6NMfztjeOg" name="point" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n64iRJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>double height = curAxes[2];&#xD;
		// curaxes[0] is the radius of the cylinder&#xD;
		double r = curAxes[0];&#xD;
		double curZDist = point.k - location.k;&#xD;
		if(height &lt;= Math.abs(curZDist)) {&#xD;
			return false;&#xD;
		}&#xD;
		&#xD;
		JVector xyPoint = (JVector) point.clone();&#xD;
		JVector xyCenter = (JVector) location.clone();&#xD;
		xyPoint.k = 0;&#xD;
		xyCenter.k = 0; &#xD;
		&#xD;
		if(JVector.distance(xyPoint, xyCenter) &lt; r) {&#xD;
			return true;&#xD;
		}&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n64iRZAREeOq6NMfztjeOg" name="calcTotalVolume" specification="_n51ZYpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n64iRpAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n64iR5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n64iSJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>double h = curAxes[2];&#xD;
		double r = curAxes[0];&#xD;
		int minX = (int) Math.round(location.i - r);&#xD;
		int minY = (int) Math.round(location.j - r);&#xD;
		int maxX = (int) Math.round(location.i + r);&#xD;
		int maxY = (int) Math.round(location.j + r);&#xD;
		&#xD;
		JVector curLoc = new JVector(0, 0, 0);&#xD;
		JVector centerXYProj = (JVector) location.clone();&#xD;
		centerXYProj.k = 0;&#xD;
		int volume = 0;&#xD;
		for(int i = minX; i &lt; maxX; i++) {&#xD;
			curLoc.i = i;&#xD;
			for(int j = minY; j &lt; maxY; j++) {&#xD;
				curLoc.j = j;&#xD;
				if(JVector.distance(curLoc, centerXYProj) &lt; r) {&#xD;
					volume++;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		volume = (int) Math.round(volume*h);&#xD;
		return volume;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n5zkMJAREeOq6NMfztjeOg" name="getPointsOnFace" method="_n637PJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n50LQJAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n50LRZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n50LQZAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n50LQpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n50yUpAREeOq6NMfztjeOg" name="getRandomPointInside" method="_n637QZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n50yU5AREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n50yVZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6rt-JAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n51ZYpAREeOq6NMfztjeOg" name="calcTotalVolume" method="_n64iRZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n51ZY5AREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n52AcpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n52AcJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n6rt8JAREeOq6NMfztjeOg" name="Cylindrical" method="_n637NpAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_n6rt9JAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n6rt9ZAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_n6rt8ZAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6rt8pAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6rt85AREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6rt95AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6rt9pAREeOq6NMfztjeOg" type="_n5y9IJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n6sVAJAREeOq6NMfztjeOg" name="isInside" method="_n64iQJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n6sVAZAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6sVBZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6sVApAREeOq6NMfztjeOg" name="point" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6sVA5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n53OkJAREeOq6NMfztjeOg" name="Orthorhombic">
        <generalization xmi:id="_n6tjJJAREeOq6NMfztjeOg" general="_n54csJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_n61e8JAREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n61e8ZAREeOq6NMfztjeOg" value="3194928176544891510L"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n64iSZAREeOq6NMfztjeOg" name="Orthorhombic" specification="_n6s8E5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n64iSpAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n64iS5AREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n64iTJAREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n64iTZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n64iTpAREeOq6NMfztjeOg" type="_n53OkJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>super(type, location, unitAxes);&#xD;
		// TODO Auto-generated constructor stub&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n6s8E5AREeOq6NMfztjeOg" name="Orthorhombic" method="_n64iSZAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_n6tjIJAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n6tjIZAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_n6s8FJAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6s8FZAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6s8FpAREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6tjI5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6tjIpAREeOq6NMfztjeOg" type="_n53OkJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n54csJAREeOq6NMfztjeOg" name="RectangularPrism">
        <generalization xmi:id="_n6vYVZAREeOq6NMfztjeOg" general="_VbdZk5AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_n61e8pAREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n61e85AREeOq6NMfztjeOg" value="3160645231205931220L"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n64iT5AREeOq6NMfztjeOg" name="RectangularPrism" specification="_n6uKM5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n64iUJAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n64iUZAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n64iUpAREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n64iU5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n64iVJAREeOq6NMfztjeOg" type="_n54csJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>super(type, location, unitAxes);&#xD;
		// TODO Auto-generated constructor stub&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n65JUJAREeOq6NMfztjeOg" name="getPointsOnFace" specification="_n55DwJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n65JUZAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n65JUpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n65JU5AREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n65JVJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>JVector[] corners = getOppositeCorners(curAxes);&#xD;
		return null;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n65JVZAREeOq6NMfztjeOg" name="getRandomPointInside" specification="_n55q1ZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n65JVpAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n65JV5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n65JWJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>Random r = new Random();&#xD;
		double a, b, c;&#xD;
		JVector x, y, z, p;&#xD;
		int count = 0;&#xD;
		do {&#xD;
			a = (r.nextDouble()-.5) * curAxes[0];&#xD;
			b = (r.nextDouble()-.5) * curAxes[1];&#xD;
			c = (r.nextDouble()-.5) * curAxes[2];&#xD;
			&#xD;
			x = JVector.multiply(unitAxes[0], a);&#xD;
			y = JVector.multiply(unitAxes[1], b);&#xD;
			z = JVector.multiply(unitAxes[2], c);&#xD;
			&#xD;
			p = JVector.add(JVector.add(location, x), JVector.add(y, z));&#xD;
			count++;&#xD;
		} while(!isInside(curAxes, p));&#xD;
//		System.out.println(&quot;getRandomPointInside(double[] curAxes) in RectangularPrism.java required &quot; + count + &quot; cycle(s) to &quot; +&#xD;
//				&quot;find a point inside the shape&quot;);&#xD;
		return p;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n65JWZAREeOq6NMfztjeOg" name="isInside" specification="_n6uxRZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n65JWpAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n65JW5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n65JXJAREeOq6NMfztjeOg" name="loc" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n65JXZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>double dx, dy, dz;&#xD;
		/*&#xD;
		// Enhance speed by shortening the number of calculations required if the point is outside the distance from &#xD;
		// the crystallite to its corner (i.e. the longest distance in the crystallite)&#xD;
		dx = curAxes[0] / 2.;&#xD;
		dy = curAxes[1] / 2.;&#xD;
		dz = curAxes[2] / 2.;&#xD;
		double distanceFromCenter = JVector.subtract(loc, location).length();&#xD;
		double lengthToCorner = new JVector(dx, dy, dz).length();&#xD;
		if(distanceFromCenter > lengthToCorner) {&#xD;
			return false;&#xD;
		}&#xD;
		*/&#xD;
		JVector[] corners = getOppositeCorners(curAxes);&#xD;
		&#xD;
		// make the cube corner the zero point&#xD;
		JVector shift = JVector.multiply(corners[0], -1);&#xD;
		loc = JVector.add(loc, shift);&#xD;
		&#xD;
		// get the current max number of units in the three axial directions&#xD;
		dx = curAxes[0];&#xD;
		dy = curAxes[1];&#xD;
		dz = curAxes[2];&#xD;
		&#xD;
		// determine the relative number of units from the zero point in the three axial directions&#xD;
		double x = JVector.dot(loc, unitAxes[0]);&#xD;
		double y = JVector.dot(loc, unitAxes[1]);&#xD;
		double z = JVector.dot(loc, unitAxes[2]);&#xD;
		&#xD;
		// if the point is less than the relative number of units and greater than 0 then the point is inside the rectangular prism&#xD;
		if(x &lt; dx &amp;&amp; y &lt; dy &amp;&amp; z &lt; dz &amp;&amp; x >= 0 &amp;&amp; y >= 0 &amp;&amp; z >= 0) {&#xD;
			return true;&#xD;
		}&#xD;
		&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n65JXpAREeOq6NMfztjeOg" name="calcTotalVolume" specification="_n5648JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n65JX5AREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n65JYJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n65JYZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>return (int) Math.rint(curAxes[0] * curAxes[1] * curAxes[2]);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n65JYpAREeOq6NMfztjeOg" name="getOppositeCorners" specification="_n57gApAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n65JY5AREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n65JZJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n65JZZAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n65JZpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>JVector[] corners = new JVector[2];&#xD;
		// shift from center to corner&#xD;
		JVector a = JVector.multiply(unitAxes[0], curAxes[0]/2);&#xD;
		JVector b = JVector.multiply(unitAxes[1], curAxes[1]/2);&#xD;
		JVector c = JVector.multiply(unitAxes[2], curAxes[2]/2);&#xD;
		/**&#xD;
		System.out.println(&quot;a = &quot; + a.toString());&#xD;
		System.out.println(&quot;b = &quot; + b.toString());&#xD;
		System.out.println(&quot;c = &quot; + c.toString());&#xD;
		&#xD;
		&#xD;
		System.out.println(&quot;length(a) = &quot; + a.length());&#xD;
		System.out.println(&quot;length(b) = &quot; + b.length());&#xD;
		System.out.println(&quot;length(c) = &quot; + c.length());&#xD;
		&#xD;
		System.out.println(&quot;a dot b = &quot; + JVector.dot(a, b));&#xD;
		System.out.println(&quot;a dot c = &quot; + JVector.dot(a, c));&#xD;
		System.out.println(&quot;b dot c = &quot; + JVector.dot(b, c));&#xD;
		*/&#xD;
		/*JVector shift = JVector.add(a, JVector.add(b, c));&#xD;
		shift = JVector.multiply(shift, .5);&#xD;
		JVector a1 = JVector.subtract(shift, a);&#xD;
		JVector b1 = JVector.subtract(shift, b);&#xD;
		JVector c1 = JVector.subtract(shift, c);*/&#xD;
		corners[0] = JVector.add(JVector.multiply(a, -1), JVector.add(JVector.multiply(b, -1), JVector.multiply(c, -1)));&#xD;
		corners[1] = JVector.add(JVector.multiply(a, +1), JVector.add(JVector.multiply(b, +1), JVector.multiply(c, +1)));&#xD;
		for(int i = 0; i &lt; corners.length; i++) {&#xD;
			corners[i] = JVector.add(location, corners[i]);&#xD;
		}&#xD;
		/*&#xD;
		double d1 = JVector.distance(corners[0], corners[1]);&#xD;
		double d2 = Math.sqrt(curAxes[0]*curAxes[0] + curAxes[1]*curAxes[1] + curAxes[2]*curAxes[2]);&#xD;
		&#xD;
		double dot1 = JVector.dot(unitAxes[0], unitAxes[1]);&#xD;
		double dot2 = JVector.dot(unitAxes[0], unitAxes[2]);&#xD;
		double dot3 = JVector.dot(unitAxes[1], unitAxes[2]);&#xD;
		*/&#xD;
		return corners;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n55DwJAREeOq6NMfztjeOg" name="getPointsOnFace" method="_n65JUJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n55DwZAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n55q0ZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n55DwpAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n55Dw5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n55q1ZAREeOq6NMfztjeOg" name="getRandomPointInside" method="_n65JVZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n56R4JAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n56R4pAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6uxRJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n5648JAREeOq6NMfztjeOg" name="calcTotalVolume" method="_n65JXpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n5648ZAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n5649JAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n5648pAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n57gApAREeOq6NMfztjeOg" name="getOppositeCorners" method="_n65JYpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n57gA5AREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n57gB5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n57gBJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n57gBZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n6uKM5AREeOq6NMfztjeOg" name="RectangularPrism" method="_n64iT5AREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_n6uxQJAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n6uxQZAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_n6uKNJAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6uKNZAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6uKNpAREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6uxQ5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6uxQpAREeOq6NMfztjeOg" type="_n54csJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n6uxRZAREeOq6NMfztjeOg" name="isInside" method="_n65JWZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n6uxRpAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6vYUZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6uxR5AREeOq6NMfztjeOg" name="loc" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6uxSJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n59VMJAREeOq6NMfztjeOg" name="RectangularPrismTest">
        <ownedOperation xmi:id="_n59VMZAREeOq6NMfztjeOg" name="main" isStatic="true">
          <ownedParameter xmi:id="_n59VMpAREeOq6NMfztjeOg" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n59VNJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n6Ep9pAREeOq6NMfztjeOg" name="Spherical">
        <generalization xmi:id="_n6zpwJAREeOq6NMfztjeOg" general="_VbdZk5AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_n63UIZAREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n63UIpAREeOq6NMfztjeOg" value="-6199770338914829647L"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n66XdpAREeOq6NMfztjeOg" name="Spherical" specification="_n6yboJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n66Xd5AREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n66XeJAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n66XeZAREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n66XepAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n66Xe5AREeOq6NMfztjeOg" type="_n6Ep9pAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>super(type, location, JVector.v100sU);&#xD;
		// TODO Auto-generated constructor stub&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n66XfJAREeOq6NMfztjeOg" name="getPointsOnFace" specification="_n6FRAJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n66XfZAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n66XfpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n66Xf5AREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n66XgJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>Vector&lt;JVector> facePoints = new Vector&lt;JVector>();&#xD;
		double r = JVector.distance(location, JVector.add(location, new JVector(curAxes[0], 0, 0)));&#xD;
		double rMin = r - Math.sqrt(3);&#xD;
		&#xD;
		int[][] inscribedCube = getInscribedCubeMinAndMax(rMin);&#xD;
		int[] inscribedCubeMin = inscribedCube[0];&#xD;
		int[] inscribedCubeMax = inscribedCube[1];&#xD;
&#xD;
		int[][] circumscribedCube = getCircumscribedCubeMinAndMax(r);&#xD;
		int[] circumscribedCubeMin = circumscribedCube[0];&#xD;
		int[] circumscribedCubeMax = circumscribedCube[1];&#xD;
&#xD;
		JVector curLoc = new JVector();&#xD;
		double rCalc;&#xD;
		for(int i = circumscribedCubeMin[0]; i &lt; circumscribedCubeMax[0]; i++) {&#xD;
			curLoc.i = i;&#xD;
			for(int j = circumscribedCubeMin[1]; j &lt; circumscribedCubeMax[1]; j++) {&#xD;
				curLoc.j = j;&#xD;
				for(int k = circumscribedCubeMin[2]; k &lt; circumscribedCubeMax[2]; k++) {&#xD;
					curLoc.k = k;&#xD;
					rCalc = JVector.distance(curLoc, location);&#xD;
					if(rCalc > rMin &amp;&amp; rCalc &lt; r) {&#xD;
						facePoints.add((JVector) curLoc.clone());&#xD;
					}&#xD;
					if(k > inscribedCubeMin[2] &amp;&amp; k &lt; inscribedCubeMax[2] &amp;&amp;&#xD;
							j > inscribedCubeMin[1] &amp;&amp; j &lt; inscribedCubeMax[1] &amp;&amp;&#xD;
							i > inscribedCubeMin[0] &amp;&amp; i &lt; inscribedCubeMax[0]&#xD;
									) { k = inscribedCubeMax[2]; }&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		&#xD;
		JVector[] points = new JVector[facePoints.size()];&#xD;
		points = facePoints.toArray(points);&#xD;
		return points;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n66XgZAREeOq6NMfztjeOg" name="getRandomPointInside" specification="_n6GfIZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n66XgpAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n66Xg5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n66XhJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>double r;&#xD;
		&#xD;
		JVector loc = new JVector();&#xD;
		&#xD;
		r = JVector.distance(location, new JVector(location.i+curAxes[0], location.j, location.k));&#xD;
		&#xD;
		do {&#xD;
			loc.i = rand.nextDouble()*2;&#xD;
			loc.j = rand.nextDouble()*2;&#xD;
			loc.k = rand.nextDouble()*2;&#xD;
			&#xD;
			loc.i -= 1;&#xD;
			loc.j -= 1;&#xD;
			loc.k -= 1;&#xD;
			&#xD;
			loc.i *= r;&#xD;
			loc.j *= r;&#xD;
			loc.k *= r;&#xD;
			&#xD;
			loc.i += location.i;&#xD;
			loc.j += location.j;&#xD;
			loc.k += location.k;&#xD;
		} while(!isInside(curAxes, loc));&#xD;
		&#xD;
		return loc;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n66XhZAREeOq6NMfztjeOg" name="isInside" specification="_n6zCsJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n66XhpAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n66Xh5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n66XiJAREeOq6NMfztjeOg" name="loc" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n66XiZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>double r = JVector.distance(location, new JVector(location.i+curAxes[0], location.j, location.k));&#xD;
		//JVector curLoc = new JVector(curAxes[0], curAxes[1], curAxes[2]);&#xD;
		double curDist = JVector.distance(location, loc);&#xD;
		if(curDist &lt; r) { return true; }&#xD;
		return false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n66-gJAREeOq6NMfztjeOg" name="calcTotalVolume" specification="_n6HGMpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n66-gZAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n66-gpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n66-g5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>double r = JVector.distance(location, JVector.add(location, new JVector(curAxes[0], 0, 0)));&#xD;
		int[][] circumscribedCube = getCircumscribedCubeMinAndMax(r);&#xD;
		int[] circumscribedCubeMin = circumscribedCube[0];&#xD;
		int[] circumscribedCubeMax = circumscribedCube[1];&#xD;
&#xD;
		JVector curLoc = new JVector();&#xD;
		double rCalc;&#xD;
		int volume = 0;&#xD;
		for(int i = circumscribedCubeMin[0]; i &lt; circumscribedCubeMax[0]; i++) {&#xD;
			curLoc.i = i;&#xD;
			for(int j = circumscribedCubeMin[1]; j &lt; circumscribedCubeMax[1]; j++) {&#xD;
				curLoc.j = j;&#xD;
				for(int k = circumscribedCubeMin[2]; k &lt; circumscribedCubeMax[2]; k++) {&#xD;
					curLoc.k = k;&#xD;
					rCalc = JVector.distance(curLoc, location);&#xD;
					if(rCalc &lt; r) {&#xD;
						volume++;&#xD;
					}&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return volume;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n66-hJAREeOq6NMfztjeOg" name="getInscribedCubeMinAndMax" specification="_n6HtRZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n66-hZAREeOq6NMfztjeOg" name="rMin">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n66-hpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n66-h5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>double aSmall = rMin / Math.sqrt(3);&#xD;
		JVector rSmall = new JVector(aSmall, aSmall, aSmall);&#xD;
		int[] inscribedCubeMin = JVector.subtract(location, rSmall).toInt();&#xD;
		int[] inscribedCubeMax = JVector.add(location, rSmall).toInt();&#xD;
		int[][] minAndMax = {inscribedCubeMin, inscribedCubeMax};&#xD;
		&#xD;
		for(int i = 0; i &lt; 3; i++) {&#xD;
			if(inscribedCubeMin[i] > inscribedCubeMax[i] ||&#xD;
					inscribedCubeMax[i] &lt; inscribedCubeMin[i]) {&#xD;
				throw new RuntimeException(&quot;\n\nCurrent location of this Shape (&quot; + type + &quot;) prohibits Volume or Surface determination&quot; +&#xD;
					&quot; because inscribedCubeMin[&quot; + i + &quot;] = &quot; + inscribedCubeMin[i] + &quot; and inscribedCubeMax[&quot; + i + &#xD;
					&quot;] = &quot; + inscribedCubeMax[i] + &quot;\n&quot;);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return minAndMax;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n66-iJAREeOq6NMfztjeOg" name="getCircumscribedCubeMinAndMax" specification="_n6IUUpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n66-iZAREeOq6NMfztjeOg" name="r">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n66-ipAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n66-i5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>JVector rBig = new JVector(r, r, r);&#xD;
		int[] circumscribedCubeMin = JVector.subtract(location, rBig).toInt();&#xD;
		int[] circumscribedCubeMax = JVector.add(location, rBig).toInt();&#xD;
		int[][] minAndMax = {circumscribedCubeMin, circumscribedCubeMax};&#xD;
		&#xD;
		for(int i = 0; i &lt; 3; i++) {&#xD;
			if(circumscribedCubeMin[i] > circumscribedCubeMax[i] ||&#xD;
					circumscribedCubeMax[i] &lt; circumscribedCubeMin[i]) {&#xD;
				throw new RuntimeException(&quot;\n\nCurrent location of this Shape (&quot; + type + &quot;) prohibits Volume or Surface determination&quot; +&#xD;
					&quot; because circumscribedCubeMin[&quot; + i + &quot;] = &quot; + circumscribedCubeMin[i] + &quot; and circumscribedCubeMax[&quot; + i + &#xD;
					&quot;] = &quot; + circumscribedCubeMax[i] + &quot;\n&quot;);&#xD;
			}&#xD;
		}&#xD;
		return minAndMax;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n6FRAJAREeOq6NMfztjeOg" name="getPointsOnFace" method="_n66XfJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n6FRAZAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6F4FJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6F4EJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6F4EZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n6GfIZAREeOq6NMfztjeOg" name="getRandomPointInside" method="_n66XgZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n6GfIpAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6GfJJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6ybqJAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n6HGMpAREeOq6NMfztjeOg" name="calcTotalVolume" method="_n66-gJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n6HGM5AREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6HtQZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6HGNJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n6HtRZAREeOq6NMfztjeOg" name="getInscribedCubeMinAndMax" visibility="private" method="_n66-hJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n6HtRpAREeOq6NMfztjeOg" name="rMin">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6HtR5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6IUUJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n6IUUpAREeOq6NMfztjeOg" name="getCircumscribedCubeMinAndMax" visibility="private" method="_n66-iJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n6IUU5AREeOq6NMfztjeOg" name="r">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6IUVJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6IUVZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_n6yboJAREeOq6NMfztjeOg" name="Spherical" method="_n66XdpAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_n6ybpJAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n6ybpZAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_n6yboZAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6ybopAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6ybo5AREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6ybp5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6ybppAREeOq6NMfztjeOg" type="_n6Ep9pAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_n6zCsJAREeOq6NMfztjeOg" name="isInside" method="_n66XhZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n6zCsZAREeOq6NMfztjeOg" name="curAxes">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n6zCtZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6zCspAREeOq6NMfztjeOg" name="loc" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6zCs5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_n6KJgJAREeOq6NMfztjeOg" name="Tetragonal">
        <generalization xmi:id="_n60Q0ZAREeOq6NMfztjeOg" general="_n54csJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_n63UI5AREeOq6NMfztjeOg" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_n63UJJAREeOq6NMfztjeOg" value="-2669918499948151946L"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_n66-jJAREeOq6NMfztjeOg" name="Tetragonal" specification="_n6zpwZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_n66-jZAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n66-jpAREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n66-j5AREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n66-kJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n66-kZAREeOq6NMfztjeOg" type="_n6KJgJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>super(type, location, unitAxes);&#xD;
		// TODO Auto-generated constructor stub&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_n6zpwZAREeOq6NMfztjeOg" name="Tetragonal" method="_n66-jJAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_n6zpxZAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_n6zpxpAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_n6zpwpAREeOq6NMfztjeOg" name="type" type="_VbhD85AREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6zpw5AREeOq6NMfztjeOg" name="location" type="_BOtMYJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_n6zpxJAREeOq6NMfztjeOg" name="unitAxes" type="_BOtMYJAREeOq6NMfztjeOg">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_n60Q0JAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_n6zpx5AREeOq6NMfztjeOg" type="_n6KJgJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n68zsJAREeOq6NMfztjeOg" name="" memberEnd="_n68zsZAREeOq6NMfztjeOg _n62GA5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_n68zsZAREeOq6NMfztjeOg" name="" type="_VbdZk5AREeOq6NMfztjeOg" association="_n68zsJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n69awZAREeOq6NMfztjeOg" name="" memberEnd="_n69awpAREeOq6NMfztjeOg _n62GBZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_n69awpAREeOq6NMfztjeOg" name="" type="_VbdZk5AREeOq6NMfztjeOg" association="_n69awZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_n69axJAREeOq6NMfztjeOg" name="" memberEnd="_n69axZAREeOq6NMfztjeOg _n62tEpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_n69axZAREeOq6NMfztjeOg" name="" type="_VbdZk5AREeOq6NMfztjeOg" association="_n69axJAREeOq6NMfztjeOg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_VYygEJAREeOq6NMfztjeOg" name="chemistry">
      <packagedElement xmi:type="uml:Class" xmi:id="_Vbl8cJAREeOq6NMfztjeOg" name="JAtom"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Vbl8cpAREeOq6NMfztjeOg" name="JAtomTools"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_VZBJkJAREeOq6NMfztjeOg" name="indexing">
      <packagedElement xmi:type="uml:Class" xmi:id="_VbtRMJAREeOq6NMfztjeOg" name="AlphabeticIndexingSystem"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_Vbt4QJAREeOq6NMfztjeOg" name="NumericIndexingSystem"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZejbkZAREeOq6NMfztjeOg" name="analysis">
      <packagedElement xmi:type="uml:Class" xmi:id="_ZfAuk5AREeOq6NMfztjeOg" name="Analysis">
        <generalization xmi:id="_rdoQQ5AREeOq6NMfztjeOg" general="_BOw2wZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_rdwzIJAREeOq6NMfztjeOg" name="individualCorr" visibility="private" type="_rdhikJAREeOq6NMfztjeOg" association="_reAqwJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_rdxaMpAREeOq6NMfztjeOg" name="NONLINEAR_LINEAR" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rdxaM5AREeOq6NMfztjeOg" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rdyBQZAREeOq6NMfztjeOg" name="NONLINEAR_SIGMOIDAL" isLeaf="true" isStatic="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rdyBQpAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rdyBRJAREeOq6NMfztjeOg" name="nlf" visibility="private" type="_rdkl45AREeOq6NMfztjeOg" association="_reAqw5AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_rdyBRpAREeOq6NMfztjeOg" name="r" visibility="private" type="_rdiJpJAREeOq6NMfztjeOg" association="_reBR0JAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_rdyoUZAREeOq6NMfztjeOg" name="model" visibility="private" type="_rdiwtZAREeOq6NMfztjeOg" association="_reBR05AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_rdyoU5AREeOq6NMfztjeOg" name="simul" visibility="private" type="_BN7wUJAREeOq6NMfztjeOg" association="_reBR1pAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_rdyoVZAREeOq6NMfztjeOg" name="bulkInfo" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rdzPYpAREeOq6NMfztjeOg" name="printObject">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rdzPY5AREeOq6NMfztjeOg" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rdzPZZAREeOq6NMfztjeOg" name="numAnalyzed">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rdz2cJAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rdz2cpAREeOq6NMfztjeOg" name="delayNucleationTimeBy" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rdz2c5AREeOq6NMfztjeOg" value="00"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rdz2dZAREeOq6NMfztjeOg" name="e" visibility="private" type="_rdj-1ZAREeOq6NMfztjeOg" association="_reB44ZAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rdz2dpAREeOq6NMfztjeOg" value="new SharpHancock(new double[] {1, 1, 1})"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd0dgZAREeOq6NMfztjeOg" name="rand" visibility="private" type="_BOw2w5AREeOq6NMfztjeOg" association="_reB45JAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rd0dgpAREeOq6NMfztjeOg" value="new Random()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd0dhJAREeOq6NMfztjeOg" name="numFittable" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rd0dhZAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd0dh5AREeOq6NMfztjeOg" name="fractionError">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rd0diJAREeOq6NMfztjeOg" value="0.0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd1EkZAREeOq6NMfztjeOg" name="alphaMin">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rd1EkpAREeOq6NMfztjeOg" value="0.00"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd1ElJAREeOq6NMfztjeOg" name="alphaMax">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rd1ElZAREeOq6NMfztjeOg" value="0.5"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd1El5AREeOq6NMfztjeOg" name="t0Offset" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rd1roJAREeOq6NMfztjeOg" value="+0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd1ropAREeOq6NMfztjeOg" name="nOffset" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rd1ro5AREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd1rpZAREeOq6NMfztjeOg" name="kAValue" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rd1rppAREeOq6NMfztjeOg" value=".01"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd2SsJAREeOq6NMfztjeOg" name="tolerance" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rd2SsZAREeOq6NMfztjeOg" value="0.05"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd2Ss5AREeOq6NMfztjeOg" name="reg" visibility="private" type="_rdiJpJAREeOq6NMfztjeOg" association="_reCf8ZAREeOq6NMfztjeOg">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rd2StJAREeOq6NMfztjeOg" value="new RegressionNonLinear()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd2StpAREeOq6NMfztjeOg" name="nAsFuncOfAspectRatio" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rd2St5AREeOq6NMfztjeOg" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd25wpAREeOq6NMfztjeOg" name="zipPrinter" type="_Vbt4QpAREeOq6NMfztjeOg" association="_reCf9JAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_rd25xJAREeOq6NMfztjeOg" name="height">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rd25xZAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd3g0JAREeOq6NMfztjeOg" name="mps" visibility="private" type="_BOtMYpAREeOq6NMfztjeOg" association="_reDHAZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_rd3g0pAREeOq6NMfztjeOg" name="standardHeader" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd3g1JAREeOq6NMfztjeOg" name="estimateN">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_rd3g1ZAREeOq6NMfztjeOg" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_rd8ZUJAREeOq6NMfztjeOg" name="individualCovar" visibility="private" type="_rdhikJAREeOq6NMfztjeOg" association="_reDHBJAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_rd9AYJAREeOq6NMfztjeOg" name="bulkCorr" visibility="private" type="_rdhikJAREeOq6NMfztjeOg" association="_reDHB5AREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_rd9AY5AREeOq6NMfztjeOg" name="bulkCovar" visibility="private" type="_rdhikJAREeOq6NMfztjeOg" association="_reDuEZAREeOq6NMfztjeOg"/>
        <ownedAttribute xmi:id="_rd9AZpAREeOq6NMfztjeOg" name="individualInfo" visibility="private">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd4u8JAREeOq6NMfztjeOg" name="getIndividualCorr" specification="_rc4CUJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd4u8ZAREeOq6NMfztjeOg" type="_rdhikJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>return individualCorr; &#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd5WAJAREeOq6NMfztjeOg" name="getIndividualCovar" specification="_rc4CUZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd5WAZAREeOq6NMfztjeOg" type="_rdhikJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>return individualCovar; &#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd5WApAREeOq6NMfztjeOg" name="getBulkCorr" specification="_rc4CUpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd5WA5AREeOq6NMfztjeOg" type="_rdhikJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>return bulkCorr; &#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd5WBJAREeOq6NMfztjeOg" name="getBulkCovar" specification="_rc4CU5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd5WBZAREeOq6NMfztjeOg" type="_rdhikJAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>return bulkCovar; &#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd5WBpAREeOq6NMfztjeOg" name="getBulkString" specification="_rc4pYJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd5WB5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return bulkInfo; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd5WCJAREeOq6NMfztjeOg" name="getIndividualString" specification="_rc4pYpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd5WCZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return individualInfo; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd5WCpAREeOq6NMfztjeOg" name="initHeaders" specification="_rc6ekJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>standardHeader = &quot;Nucleation value,number of initial nucleation events,volume increment for new nucleation event,nucleation value,probability of continuous nucleation,nucleation orientation strategy,nucleation axis 1 growth rate,nucleation axis 2 growth rate,nucleation axis 3 growth rate,crystal axis 1 initial size,crystal axis 2 initial size,crystal axis 3 initial size,nucleation location strategy,nucleation shape,termination strategy,termination strategy value,Experimental setup,experimental value,Sample container shape,container shape axis 1,container shape axis 2,container shape axis 3,natural log of d/h,xyz output file,xyz output?,transformation output file,transformation output?,time step,start time,max num crystals,alpha min,alpha max,which parameters are fit,number of fittable crystallites,this file name,alpha min fit,fractional error imposed,crystal index or bulk,nuc loc x,nuc loc y,nuc loc z,nuc time,kA,t0,n,kA err,t0 err,n err,sum of squares,zipped file name for fit output,degrees of freedom,crystallite size,fraction of whole,nucleation shape ordinal,total sample volume,crystallite axis 1,crystallite axis 2,crystallite axis 3,CM x,CM y,CM z,approximate dimensionality,anisotropy&quot;; &#xD;
		String[] arr = standardHeader.split(&quot;,&quot;);&#xD;
		standardHeader = StringConverter.arrayToTabString(arr) + &quot;\n&quot;;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd59EJAREeOq6NMfztjeOg" name="Analysis" specification="_rdl0AJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd59EZAREeOq6NMfztjeOg" name="fittingType" type="_VZ3eIpAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rd59EpAREeOq6NMfztjeOg" type="_ZfAuk5AREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>switch(fittingType) {&#xD;
		case sigmoidal: reg = new NonLinearFitting();&#xD;
			break;&#xD;
		case sharp_hancock: reg = new RegressionNonLinear();&#xD;
			break;&#xD;
		}&#xD;
		initHeaders();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd59E5AREeOq6NMfztjeOg" name="getNormalizedTimeAndAllData" specification="_rdmbEZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd59FJAREeOq6NMfztjeOg" name="s" type="_BN7wUJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rd59FZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rd59FpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>simul = s;&#xD;
		Sample sample = s.getSample();&#xD;
		SimulSetupParams ssp = s.getSSP();&#xD;
		double totalTime = s.getTime();&#xD;
		int timeSteps = (int) Math.round(totalTime / ssp.getTimeStep());&#xD;
		double[] time = new double[timeSteps];&#xD;
		// set up time array&#xD;
		for(int i = 0; i &lt; time.length; i++) {&#xD;
			time[i] = i * ssp.getTimeStep();&#xD;
		}&#xD;
		// set up data arrays&#xD;
		// find how many crystals grew&#xD;
		int grew = 0;&#xD;
		Iterator&lt;Crystal> iter = sample.getCrystalIterator();&#xD;
		Crystal c;&#xD;
		while(iter.hasNext()) {&#xD;
			c = iter.next();&#xD;
			if(c.getTotalSize() > 0) {&#xD;
				grew++;&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		double[][] data = getTimeAndAllData(timeSteps, grew, sample, ssp);&#xD;
		integrate(data);&#xD;
		normalize(data);&#xD;
		double[][] timeAndAllData = new double[data.length][data[0].length+1];&#xD;
		for(int i = 0; i &lt; timeAndAllData.length; i++) {&#xD;
			timeAndAllData[i][0] = time[i];&#xD;
			for(int j = 1; j &lt; timeAndAllData[i].length; j++) {&#xD;
				timeAndAllData[i][j] = data[i][j-1];&#xD;
			}&#xD;
		}&#xD;
		return timeAndAllData;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd59F5AREeOq6NMfztjeOg" name="initializeRegression" specification="_rduW4JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd59GJAREeOq6NMfztjeOg" name="time">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rd59GZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rd59GpAREeOq6NMfztjeOg" name="data">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rd59G5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rd59HJAREeOq6NMfztjeOg" name="isFittable">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rd59HZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rd59HpAREeOq6NMfztjeOg" name="parameters">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rd59H5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rd59IJAREeOq6NMfztjeOg" name="reg" type="_rdiJpJAREeOq6NMfztjeOg"/>
          <language>java</language>
          <body>double[][] timeAndData = new double[time.length][2];&#xD;
		for(int i= 0; i &lt; time.length; i++) {&#xD;
			timeAndData[i][0] = time[i];&#xD;
			timeAndData[i][1] = data[i];&#xD;
		}&#xD;
		Bounds[] xyBounds = new Bounds[2];&#xD;
		xyBounds[0] = new Bounds();&#xD;
		xyBounds[1] = new Bounds();&#xD;
		xyBounds[1].addBound(alphaMin, BoundingCondition.GREATER_THAN);&#xD;
		xyBounds[1].addBound(alphaMax, BoundingCondition.LESS_THAN_OR_EQUAL_TO);&#xD;
		r = reg;&#xD;
		model = new SharpHancockModel(parameters, isFittable, null);&#xD;
		r.setModel(model);&#xD;
		r.setData(timeAndData);&#xD;
		r.setBounds(xyBounds);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd59IZAREeOq6NMfztjeOg" name="dataTimeFitToString" specification="_rc7FoJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd59IpAREeOq6NMfztjeOg" name="converted">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rd59I5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rd59JJAREeOq6NMfztjeOg" name="fit">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rd59JZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rd59JpAREeOq6NMfztjeOg" name="params">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rd59J5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rd59KJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String longString = StringConverter.arrayToTabString(params) + &quot;\n&quot;;&#xD;
&#xD;
		if(converted.length &lt; converted[0].length) { &#xD;
			for(int i = 0; i &lt; converted[0].length; i++) {&#xD;
				longString += converted[0][i] + &quot;\t&quot; + converted[1][i] + &quot;\t&quot; + fit[i] + &quot;\n&quot;;&#xD;
			}&#xD;
		} else { &#xD;
			for(int i = 0; i &lt; converted.length; i++) {&#xD;
				longString += converted[i][0] + &quot;\t&quot; + converted[i][1] + &quot;\t&quot; + fit[i] + &quot;\n&quot;;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return longString;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd59KZAREeOq6NMfztjeOg" name="readNVals" specification="_rc7ssJAREeOq6NMfztjeOg">
          <language>java</language>
          <body>File f = new File(&quot;D:\\Documents referenced in lab notebooks\\Dill-10\\178\\EDD_10-178i.txt&quot;);&#xD;
		MyFileInputStream mfis = new MyFileInputStream(f);&#xD;
		Scanner s = mfis.getScanner();&#xD;
		Vector&lt;double[]> vals = new Vector&lt;double[]>();&#xD;
		&#xD;
		String[] line;&#xD;
		double val1, val2;&#xD;
		while(s.hasNextLine()) {&#xD;
			line = s.nextLine().split(&quot;\t&quot;);&#xD;
			val1 = Double.valueOf(line[0]);&#xD;
			val2 = Double.valueOf(line[1]);&#xD;
			vals.add(new double[] {val1, val2});&#xD;
		}&#xD;
		&#xD;
		nAsFuncOfAspectRatio = new double[vals.size()][2];&#xD;
		nAsFuncOfAspectRatio = vals.toArray(nAsFuncOfAspectRatio);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd59KpAREeOq6NMfztjeOg" name="linearInterpolate" specification="_rc7ssZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd59K5AREeOq6NMfztjeOg" name="aspectRatio">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rd59LJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double n1, n2, navg, asp1, asp2;&#xD;
&#xD;
		&#xD;
		if(nAsFuncOfAspectRatio == null) {&#xD;
			readNVals();&#xD;
		}&#xD;
		&#xD;
		double[][] nfunc = nAsFuncOfAspectRatio;&#xD;
		&#xD;
		int i = 0;&#xD;
		while(aspectRatio > nfunc[i][0]) {&#xD;
			i++;&#xD;
		}&#xD;
		if(i != 0) {&#xD;
			n1 = nfunc[i-1][1];&#xD;
			n2 = nfunc[i][1];&#xD;
			asp1 = nfunc[i-1][0];&#xD;
			asp2 = nfunc[i][0];&#xD;
		&#xD;
			double x = (aspectRatio - asp1) / (asp2 - asp1);&#xD;
			double n = n1 * (1-x) + n2 * x;&#xD;
			&#xD;
			return n;&#xD;
		} &#xD;
		return nfunc[0][1];&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd6kIJAREeOq6NMfztjeOg" name="getN" specification="_rc7stJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd6kIZAREeOq6NMfztjeOg" name="volume">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rd6kIpAREeOq6NMfztjeOg" name="h">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rd6kI5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double a = Math.sqrt(volume/h);&#xD;
		double aspectRatio = a/h;&#xD;
		&#xD;
		return linearInterpolate(aspectRatio);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd6kJJAREeOq6NMfztjeOg" name="analyze" specification="_rdnCIJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd6kJZAREeOq6NMfztjeOg" name="s" type="_BN7wUJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rd6kJpAREeOq6NMfztjeOg" name="fittingSelection" type="_VZ2QAJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rd6kJ5AREeOq6NMfztjeOg" name="dimensionalitySelection" type="_VZx-kJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rd6kKJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>simul = s;&#xD;
		int analysisNumber = simul.getSimulationIndex();&#xD;
		Sample sample = s.getSample();&#xD;
		SimulSetupParams ssp = s.getSSP();&#xD;
		double totalTime = s.getTime() + delayNucleationTimeBy;&#xD;
		int timeSteps = (int) Math.round(totalTime / ssp.getTimeStep());&#xD;
		double[] time = new double[timeSteps];&#xD;
		// set up time array&#xD;
		for(int i = 0; i &lt; time.length; i++) {&#xD;
			time[i] = i * ssp.getTimeStep();&#xD;
		}&#xD;
		boolean output = true;&#xD;
&#xD;
		String zipFolderName = ssp.getZipFile().getAbsolutePath();&#xD;
		zipFolderName = zipFolderName.substring(0, zipFolderName.lastIndexOf(&quot;.&quot;));&#xD;
		File fitFolder = new File(zipFolderName);&#xD;
		fitFolder.mkdirs();&#xD;
		&#xD;
		Vector&lt;Crystal> fittableXtals = new Vector&lt;Crystal>();&#xD;
		// set up data arrays&#xD;
		// find how many crystals grew&#xD;
		int grew = 0;&#xD;
		Iterator&lt;Crystal> iter = sample.getCrystalIterator();&#xD;
		Crystal c = null;&#xD;
		while(iter.hasNext()) {&#xD;
			c = iter.next();&#xD;
			if(c.getTotalSize() > 0) {&#xD;
				grew++;&#xD;
				fittableXtals.add(c);&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		/*JVector[][] sortedList = simul.getSample().getLatticePoints();&#xD;
		CrystalliteAnisotropy ca = new CrystalliteAnisotropy(sortedList);&#xD;
		ca.findAllPoints();&#xD;
		double[][] anisotropyDistances = ca.getDistances();&#xD;
		JVector[] anisotropyCM = ca.getAllCM();&#xD;
		*/&#xD;
		double[][] data = getTimeAndAllData(timeSteps, grew, sample, ssp);&#xD;
		integrate(data);&#xD;
		double[] max = Arrays.copyOf(data[data.length-1], data[data.length-1].length);&#xD;
		normalize(data);&#xD;
		addError(data, fractionError);&#xD;
		/*&#xD;
		for(int i = 0; i &lt; data.length; i++) {&#xD;
			System.out.println(Arrays.toString(data[i]));&#xD;
		}&#xD;
		 */&#xD;
		double t0_est=10+delayNucleationTimeBy, kA_est = ssp.getInit_k_factor(), n_est=ssp.getInit_n();//n=(77.+77.+8.)/77.;&#xD;
		boolean[] isFittable = {true, true, true};&#xD;
		switch(fittingSelection) {&#xD;
		case FIT_T_N: &#xD;
			isFittable = new boolean[] {false, true, true};&#xD;
			break;&#xD;
		case FIT_K_N: &#xD;
			isFittable = new boolean[] {true, false, true};&#xD;
			break;&#xD;
		case FIT_K_T: &#xD;
			isFittable = new boolean[] {true, true, false};&#xD;
			break;&#xD;
		case FIT_K_T_N:&#xD;
			isFittable = new boolean[] {true, true, true};&#xD;
			break;&#xD;
		case FIT_N:&#xD;
			isFittable = new boolean[] {false, false, true};&#xD;
			break;&#xD;
		case FIT_T:&#xD;
			isFittable = new boolean[] {false, true, false};&#xD;
			break;&#xD;
		case FIT_K:&#xD;
			isFittable = new boolean[] {true, false, false};&#xD;
			break;&#xD;
		case FIT_NONE:&#xD;
			isFittable = new boolean[] {false, false, false};&#xD;
			break;&#xD;
		}&#xD;
		numFittable = numFittable(isFittable);&#xD;
		individualCorr = new Matrix(numFittable, numFittable);&#xD;
		individualCovar = new Matrix(numFittable, numFittable);&#xD;
		double[] params = new double[] {kA_est, t0_est, n_est};&#xD;
		e.setParams(params);&#xD;
		//nlf = new NonLinearFitting(null, time, e, null, isFittable, ssp.alphaMin, ssp.alphaMax);&#xD;
		double[] stdDev;&#xD;
		String excel = standardHeader;&#xD;
		Matrix m = new Matrix(data);&#xD;
		Matrix mT = m.transpose();&#xD;
		String prefix, xtalInfo, simulInfo;&#xD;
		double[][] transposed = mT.getArray();&#xD;
		int vol;&#xD;
		int startVal = 0;&#xD;
		if(transposed.length == 2) {&#xD;
			startVal = 1;&#xD;
		}&#xD;
		int bulkVol = 0;&#xD;
		bulkInfo = &quot;&quot;;&#xD;
		individualInfo = &quot;&quot;;&#xD;
		int[] axes = sample.getUnitsPerAxis();&#xD;
		Matrix tempCorr, tempCovar;&#xD;
		String printFitName;&#xD;
		IndividualCrystalliteAnisotropy ica = null;&#xD;
		CrystalliteAnalysis ca = null;&#xD;
		long totalVolume = s.getTotalVolume();&#xD;
		JVector[] latticePoints;&#xD;
		int curVol = 0;&#xD;
		for(int i = transposed.length-1; i >= 0; i--) {&#xD;
			&#xD;
			vol = (int)max[i];&#xD;
			kA_est = Math.pow(vol, -1./3.)*ssp.getAxialGrowthRates()[0] * ssp.getInit_k_factor();&#xD;
			//kA_est = 0.01;&#xD;
			//e.setParam(kA_est, 0);&#xD;
			&#xD;
			//n = ((double) (4*axes[0]+axes[2])) /((double) (Math.max(2*axes[0], axes[2])));&#xD;
			//e.setParam(n, 2);&#xD;
			&#xD;
			if(i != transposed.length-1) {&#xD;
				c = fittableXtals.get(i);&#xD;
				latticePoints = c.getLatticePoints();&#xD;
				curVol = latticePoints.length;&#xD;
				double fractionalCrystalliteSize = ((double) curVol) / ((double) totalVolume);&#xD;
				if(fractionalCrystalliteSize >= 0.05) {&#xD;
					ca = new CrystalliteAnalysis(c);&#xD;
					ca.get50PercentCrystallizedLattice(tolerance);&#xD;
					ica = new IndividualCrystalliteAnisotropy(latticePoints);&#xD;
				} else {&#xD;
					ica = null;&#xD;
				}&#xD;
				t0_est = fittableXtals.get(i).getNucTime()+this.delayNucleationTimeBy;&#xD;
				switch(dimensionalitySelection) {&#xD;
				case FIXED_TO_VALUE:&#xD;
					n_est = ssp.getInit_n();&#xD;
					break;&#xD;
				case APPROXIMATE_BY_ACTUAL_SHAPE:&#xD;
					if(ica != null) {&#xD;
						n_est = ica.getApproximateDimensionality();&#xD;
						break;&#xD;
					} else {&#xD;
						n_est = 3;&#xD;
						break;&#xD;
					}&#xD;
				case APPROXIMATE_BY_SAMPLE_SHAPE:&#xD;
					double h = (double) sample.getUnitsPerAxis()[2];&#xD;
					double d = 2*Math.sqrt(vol/Math.PI/h);&#xD;
					n_est = linearInterpolate(d/h);&#xD;
					break;&#xD;
				}&#xD;
					//System.out.println(&quot;Crystallite volume: &quot; + vol + &quot; h: &quot; + h + &quot; d: &quot; + d + &quot; n_est: &quot; + n_est);&#xD;
			} else {&#xD;
				t0_est = 10+this.delayNucleationTimeBy;&#xD;
				switch(dimensionalitySelection) {&#xD;
				case FIXED_TO_VALUE:&#xD;
					n_est = ssp.getInit_n();&#xD;
					break;&#xD;
				case APPROXIMATE_BY_ACTUAL_SHAPE:&#xD;
				case APPROXIMATE_BY_SAMPLE_SHAPE:&#xD;
					double h = (double) sample.getUnitsPerAxis()[2];&#xD;
					double d = (double) sample.getUnitsPerAxis()[0];&#xD;
					n_est = linearInterpolate(d/h);&#xD;
					break;&#xD;
					//System.out.println(&quot;Total sample volume: &quot; + vol + &quot; h: &quot; + h + &quot; d: &quot; + d + &quot; n_est: &quot; + n_est);&#xD;
				default:&#xD;
					n_est = 3;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
			t0_est += t0Offset;&#xD;
			n_est += nOffset;&#xD;
			//kA_est = kAValue;&#xD;
			initializeRegression(time, transposed[i], isFittable, new double[] {kA_est, t0_est, n_est}, reg);&#xD;
			if(r instanceof NonLinearFitting) {&#xD;
				((NonLinearFitting) r).setIsFittable(Arrays.copyOf(isFittable, isFittable.length));&#xD;
				((NonLinearFitting) r).setEquation(new Avrami(new double[] {kA_est, t0_est, n_est}));&#xD;
				((NonLinearFitting) r).setData(transposed[i]);&#xD;
				((NonLinearFitting) r).setTime(time);&#xD;
				((NonLinearFitting) r).setAlphaMax(alphaMax);&#xD;
				((NonLinearFitting) r).setAlphaMin(alphaMin);&#xD;
			}&#xD;
			r.setXJMatrixPlugin(new XJMatrixPlugin_SharpHancockNonLinear());&#xD;
			//nlf.setData(transposed[i]);&#xD;
			int fittingProblems = 0;&#xD;
			try {&#xD;
				r.doFit();&#xD;
			} catch(RegressionException re) {&#xD;
				fittingProblems = 1;&#xD;
			}&#xD;
			//int fittingProblems = nlf.go();&#xD;
			double percentOfWhole;&#xD;
			String anisotropy = &quot;&quot;;&#xD;
			&#xD;
			switch(fittingProblems) {&#xD;
			case 0:&#xD;
				double[] fit = r.getFit();&#xD;
				params = model.getAllParameters();&#xD;
				stdDev = model.getAllStandardDeviations();&#xD;
				tempCovar = r.getCovariance();&#xD;
				tempCorr = r.getCorrelation();&#xD;
				double[][] converted = r.getConvertedData();&#xD;
				if(r instanceof NonLinearFitting) {&#xD;
					converted = new double[2][];&#xD;
					converted[0] = ((NonLinearFitting) r).getTime();&#xD;
					converted[1] = ((NonLinearFitting) r).getData();&#xD;
					params = ((NonLinearFitting) r).getParams();&#xD;
					stdDev = ((NonLinearFitting) r).getStdDev();&#xD;
					if(stdDev.length != isFittable.length) {&#xD;
						double[] oldStdDev = stdDev;&#xD;
						stdDev = new double[isFittable.length];&#xD;
						int idxNew = 0, idxOld = 0;&#xD;
						for(boolean b : isFittable) {&#xD;
							if(b)&#xD;
								stdDev[idxNew++] = oldStdDev[idxOld++];&#xD;
							else&#xD;
								stdDev[idxNew++] = -1;&#xD;
						}&#xD;
					}&#xD;
					tempCovar = ((NonLinearFitting) r).getCovar();&#xD;
					tempCorr = ((NonLinearFitting) r).getCorr();&#xD;
					fit = ((NonLinearFitting) r).getUnboundedFit();&#xD;
				}&#xD;
				printFitName = ssp.getFitsFile(s.getSimulationIndex()).getName() + &quot;_&quot;;&#xD;
				// if individual crystallite &#xD;
				if(i != transposed.length-1) {&#xD;
					&#xD;
					printFitName += i;&#xD;
					if(isValid(tempCovar)) {&#xD;
						individualCovar = individualCovar.plus(tempCovar);&#xD;
					}&#xD;
					if(isValid(tempCorr)) {&#xD;
						individualCorr = individualCorr.plus(tempCorr);&#xD;
					}&#xD;
					if(output) { mps.println(&quot;Crystal: &quot; + i); }&#xD;
					prefix = i + &quot;&quot;;&#xD;
					xtalInfo = getXtalInfo(fittableXtals.get(i));&#xD;
					percentOfWhole = ((double) curVol) / ((double) totalVolume);&#xD;
					String out = StringConverter.arrayToTabString(params);&#xD;
					out += StringConverter.arrayToTabString(stdDev);&#xD;
					if(stdDev.length != model.getAreParametersFittable().length) {&#xD;
						int numTabsToAdd = 2 - stdDev.length;&#xD;
						for(int idx = 0; idx &lt; numTabsToAdd; idx++) {&#xD;
							out+= &quot;\t&quot;;&#xD;
						}&#xD;
					}&#xD;
					out += getSumSq() + &quot;\t&quot; + curVol + &quot;\t&quot;;&#xD;
					out += totalVolume + &quot;\t&quot; + fittableXtals.get(i).getNucTime() + &quot;\n&quot;;&#xD;
					individualInfo += out;&#xD;
					if(ica != null) {&#xD;
						anisotropy = StringConverter.arrayToTabString(ica.getAxisLengths());&#xD;
						anisotropy += StringConverter.arrayToTabString(ica.getCM().toArray());&#xD;
						anisotropy += ica.getApproximateDimensionality() + &quot;\t&quot;;&#xD;
						anisotropy += ica.getAnisotropy() + &quot;\t&quot;;&#xD;
					} else {&#xD;
						anisotropy = &quot;&quot;;&#xD;
					}&#xD;
					double t0 = model.getSpecificParameter(ParameterOptions.t0);&#xD;
					double tnuc = fittableXtals.get(i).getNucTime();&#xD;
					if((t0-tnuc)/r.getDegreesOfFreedom() > .6) {&#xD;
						String print = getSimulInfo(ssp) + &quot;\t&quot; + fittableXtals.size() + &quot;\t&quot; + ssp.getFitsFile(s.getSimulationIndex()).getName() + &quot;\t&quot; + alphaMin + &quot;\t&quot; + fractionError + &quot;\t&quot; +  &#xD;
								prefix + &quot;\t&quot; + xtalInfo + &quot;\t&quot; + StringConverter.arrayToTabString(params) + &quot;\t&quot; + &#xD;
								StringConverter.arrayToTabString(stdDev) + &quot;\t&quot; + getSumSq() + &quot;\t&quot; + r.getDegreesOfFreedom() + &quot;\t&quot; + max[i] + &quot;\t&quot; + percentOfWhole + &quot;\t&quot; + &#xD;
								ssp.getNucShape().ordinal() + &quot;\t&quot; + bulkVol + &quot;\t&quot; + anisotropy + &quot;\n&quot;;&#xD;
						//printFit(numAnalyzed + &quot;.txt&quot;, nlf.getTimeDataFit(), print);&#xD;
					}&#xD;
				} &#xD;
				// if bulk&#xD;
				else {&#xD;
					printFitName += &quot;bulk&quot;;&#xD;
					if(isValid(tempCovar)) {&#xD;
						bulkCovar = individualCovar.plus(tempCovar);&#xD;
					}&#xD;
					if(isValid(tempCorr)) {&#xD;
						bulkCorr = individualCorr.plus(tempCorr);&#xD;
					}&#xD;
					if(output) {mps.println(&quot;Bulk: &quot;); }&#xD;
					prefix = &quot;bulk&quot;;&#xD;
					xtalInfo = getXtalInfo(null);&#xD;
					percentOfWhole = 1;&#xD;
					String out = StringConverter.arrayToTabString(params);&#xD;
					out += StringConverter.arrayToTabString(stdDev);&#xD;
					out += getSumSq() + &quot;\t&quot; + totalVolume;&#xD;
					bulkInfo = out;&#xD;
					bulkVol = (int) totalVolume;&#xD;
				}&#xD;
				try {&#xD;
					// make new print stream to output the fits to a file&#xD;
					MyPrintStream mps = new MyPrintStream(new File(fitFolder + File.separator + printFitName));&#xD;
					&#xD;
					// make a new entry in the zipped folder&#xD;
					zipPrinter.newEntry(printFitName);&#xD;
					&#xD;
					// get the data to print to file/zip&#xD;
					String dataTimeFit = dataTimeFitToString(converted, fit, params);&#xD;
					&#xD;
					// print the data to the zip file&#xD;
					zipPrinter.print(dataTimeFit);&#xD;
					&#xD;
					// print the data to the raw file&#xD;
					mps.println(dataTimeFit);&#xD;
					&#xD;
					// close&amp;flush the file print stream&#xD;
					mps.close();&#xD;
					&#xD;
					// and close the zip printer entry&#xD;
					zipPrinter.closeEntry();&#xD;
				} catch(ZipException e) {&#xD;
					e.printStackTrace();&#xD;
				} catch(IOException e) {&#xD;
					e.printStackTrace();&#xD;
				}&#xD;
				String sumsq = getSumSq() + &quot;&quot;;&#xD;
				if(sumsq.compareTo(&quot;&quot;) == 0) {&#xD;
					System.err.println(&quot;get sum of squares failed&quot;);&#xD;
				}&#xD;
				simulInfo = getSimulInfo(ssp);&#xD;
				excel += simulInfo + fittableXtals.size() + &quot;\t&quot; + ssp.getFitsFile(s.getSimulationIndex()).getName() + &quot;\t&quot; + alphaMin + &quot;\t&quot; + fractionError + &quot;\t&quot; + &#xD;
						prefix + &quot;\t&quot; + xtalInfo + &quot;\t&quot; + StringConverter.arrayToTabString(params) + &quot;\t&quot; + &#xD;
						StringConverter.arrayToTabString(stdDev) + &quot;\t&quot; + sumsq + &quot;\t&quot; + printFitName + &quot;\t&quot; + r.getDegreesOfFreedom() + &quot;\t&quot; + max[i] + &quot;\t&quot; + &#xD;
						percentOfWhole + &quot;\t&quot; + ssp.getNucShape().ordinal() + &quot;\t&quot; + bulkVol + &quot;\t&quot; + anisotropy + &quot;\n&quot;;&#xD;
				if(output) {&#xD;
					mps.println(ssp.getFittableParameterSelection().toString() + &quot;\t&quot; + StringConverter.arrayToTabString(params)); &#xD;
				}&#xD;
				if(output) {&#xD;
					mps.println(&quot;\tStandard Deviation of &quot; + ssp.getFittableParameterSelection().toString() + &quot;\t&quot; + StringConverter.arrayToTabString(stdDev)); &#xD;
				}&#xD;
				break;&#xD;
			default:&#xD;
				&#xD;
			}&#xD;
			&#xD;
		}&#xD;
		if(output) {mps.println(&quot;kA\tt0\tn\tkA-stdDev\tt0-stdDev\tsize\tnucShape&quot;); }&#xD;
		if(output) {mps.println(excel); }&#xD;
		return excel;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd6kKZAREeOq6NMfztjeOg" name="numFittable" specification="_rc8TwJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd6kKpAREeOq6NMfztjeOg" name="isFittable">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rd6kK5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rd6kLJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int numFittable = 0;&#xD;
		for(int i = 0; i &lt; isFittable.length; i++) {&#xD;
			if(isFittable[i]) { numFittable++; }&#xD;
		}&#xD;
		return numFittable;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd6kLZAREeOq6NMfztjeOg" name="isValid" specification="_rdu985AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd6kLpAREeOq6NMfztjeOg" name="m" type="_rdhikJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rd6kL5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if(m == null) { return false; }&#xD;
		double[][] d = m.getArray();&#xD;
		if(d.length != numFittable &amp;&amp; d[0].length != numFittable) {&#xD;
			return false;&#xD;
		}&#xD;
		double val;&#xD;
		for(int i = 0; i &lt; d.length; i++) {&#xD;
			for(int j = 0; j &lt; d[i].length; j++) {&#xD;
				val = d[i][j];&#xD;
				boolean isInf = Double.isInfinite(val);&#xD;
				boolean isNaN = Double.isNaN(val);&#xD;
				if(isInf || isNaN) {&#xD;
					return false;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return true;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd6kMJAREeOq6NMfztjeOg" name="getXtalInfo" specification="_rdnCJZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd6kMZAREeOq6NMfztjeOg" name="c" type="_VZj8IJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rd6kMpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String xtal = &quot;&quot;;&#xD;
		// nucLoc&#xD;
		if(c == null) &#xD;
			xtal += &quot;NA\tNA\tNA&quot;;&#xD;
		else&#xD;
			xtal += StringConverter.arrayToTabString(c.getNucLoc().toArray());&#xD;
		// nuc time&#xD;
		if(c == null) &#xD;
			xtal += &quot;\t10&quot;; &#xD;
		else &#xD;
			xtal += &quot;\t&quot; + c.getNucTime(); &#xD;
		&#xD;
		return xtal;&#xD;
		&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd6kM5AREeOq6NMfztjeOg" name="getSumSq" specification="_rc860JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd6kNJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return r.getSumOfSquares(); </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd7LMJAREeOq6NMfztjeOg" name="getN" specification="_rc860pAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd7LMZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return nlf.getParams()[2]; </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd7LMpAREeOq6NMfztjeOg" name="getVolume" specification="_rc861JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd7LM5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>return simul.getTotalVolume(); </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd7LNJAREeOq6NMfztjeOg" name="getSimulInfo" specification="_rdnpMJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd7LNZAREeOq6NMfztjeOg" name="ssp" type="_BPLtgJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rd7LNpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>String simul = &quot;&quot;;&#xD;
		// initial nucleation strategy&#xD;
		simul += ssp.getInitNuc().toString() + &quot;\t&quot; + ssp.getNucInitVal() + &quot;\t&quot; + ssp.getVolumeIncrement() + &quot;\t&quot;;&#xD;
		// continuous nucleation strategy&#xD;
		simul += ssp.getContNuc().toString() + &quot;\t&quot; + ssp.getNucContVal() + &quot;\t&quot;;&#xD;
		// nucleation orientation strategy&#xD;
		simul += ssp.getNucOrient().toString() + &quot;\t&quot;;&#xD;
		// axial growth rates&#xD;
		simul += StringConverter.arrayToTabString(ssp.getAxialGrowthRates()) + &quot;\t&quot;;&#xD;
		// initial nucleated crystalline dimensions&#xD;
		simul += StringConverter.arrayToTabString(ssp.getInitCrystalDimensions()) + &quot;\t&quot;;&#xD;
		// nucleated crystal orientation strategy&#xD;
		simul += ssp.getNucLoc().toString() + &quot;\t&quot;;&#xD;
		// nucleation shape&#xD;
		simul += ssp.getNucShape().toString() + &quot;\t&quot;;&#xD;
		// termination strategy&#xD;
		simul += ssp.getTerm().toString() + &quot;\t&quot; + ssp.getTermVal().toString() + &quot;\t&quot;;&#xD;
		// experimental sample type&#xD;
		simul += ssp.getExp().toString() + &quot;\t&quot;;&#xD;
		// experimental value&#xD;
		simul += ssp.getExpVal() + &quot;\t&quot;;&#xD;
		// sample shape&#xD;
		simul += ssp.getSampleShape().toString() + &quot;\t&quot;;&#xD;
		// sample units per axis&#xD;
		simul += StringConverter.arrayToTabString(ssp.getSampleUnitsPerAxis()) + &quot;\t&quot;;&#xD;
		// ln(d/h)&#xD;
		simul += (Math.log(ssp.getSampleUnitsPerAxis()[0]*2/ssp.getSampleUnitsPerAxis()[2])) + &quot;\t&quot;;&#xD;
		// xyz file&#xD;
		simul += ssp.getXYZsFolder().getAbsolutePath() + &quot;\t&quot; + ssp.isOutputtingXyz() + &quot;\t&quot;;&#xD;
		// trans file&#xD;
		simul += ssp.getTransformationsFolder().getAbsolutePath() + &quot;\t&quot; + ssp.isTransformed() + &quot;\t&quot;;&#xD;
		// delta t&#xD;
		simul += ssp.getTimeStep() + &quot;\t&quot;;&#xD;
		// start of simulation&#xD;
		simul += ssp.getStartTime() + &quot;\t&quot;;&#xD;
		// max num xtals&#xD;
		simul += ssp.getMaxNumCrystals() + &quot;\t&quot;;&#xD;
		// min value of alpha&#xD;
		simul += ssp.getAlphaMin() + &quot;\t&quot;;&#xD;
		// max value of alpha&#xD;
		simul += ssp.getAlphaMax() + &quot;\t&quot;;&#xD;
		// parameters that are being fit&#xD;
		simul += ssp.getFittableParameterSelection().toString() + &quot;\t&quot;;&#xD;
		return simul;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd7LN5AREeOq6NMfztjeOg" name="normalize" specification="_rc9h4JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd7LOJAREeOq6NMfztjeOg" name="integrated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rd7LOZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>double[] max = integrated[integrated.length-1];&#xD;
		for(int i = 1; i &lt; integrated.length; i++) {&#xD;
			for(int j = 0; j &lt; integrated[i].length; j++) {&#xD;
				integrated[i][j] /= max[j];&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd7LOpAREeOq6NMfztjeOg" name="addError" specification="_rc9h5JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd7LO5AREeOq6NMfztjeOg" name="normalized">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rd7LPJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rd7LPZAREeOq6NMfztjeOg" name="percentError">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <language>java</language>
          <body>double val;&#xD;
		for(int i = 1; i &lt; normalized.length; i++) {&#xD;
			for(int j = 0; j &lt; normalized[i].length; j++) {&#xD;
				val = rand.nextGaussian() * percentError;&#xD;
				normalized[i][j] += val; &#xD;
				if(normalized[i][j] &lt; 0) { normalized[i][j] = 0; }&#xD;
				if(normalized[i][j] > 1) { normalized[i][j] = 1; }&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd7LPpAREeOq6NMfztjeOg" name="integrate" specification="_rc-I8ZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd7LP5AREeOq6NMfztjeOg" name="data">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rd7LQJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>for(int i = 1; i &lt; data.length; i++) {&#xD;
			for(int j = 0; j &lt; data[i].length; j++) {&#xD;
				data[i][j] += data[i-1][j];&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd7yQJAREeOq6NMfztjeOg" name="getTimeAndAllData" specification="_rdnpM5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd7yQZAREeOq6NMfztjeOg" name="timeSteps">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rd7yQpAREeOq6NMfztjeOg" name="grew">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rd7yQ5AREeOq6NMfztjeOg" name="sample" type="_BPM7oJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rd7yRJAREeOq6NMfztjeOg" name="ssp" type="_BPLtgJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rd7yRZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rd7yRpAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>double[][] data = new double[timeSteps][grew+1];&#xD;
		double curTime = 0;&#xD;
		int xtalIdx = 0;&#xD;
		Crystal[] allXtals = sample.getCrystalArray();&#xD;
		Integer[] growth;&#xD;
		Vector&lt;Crystal> fittableXtals = new Vector&lt;Crystal>();&#xD;
		Crystal c;&#xD;
		for(int j = 0; j &lt; data[0].length-1; j++) {&#xD;
			do {&#xD;
				c = allXtals[xtalIdx++];&#xD;
			} while(c.getTotalSize() == 0);&#xD;
			growth = c.getGrowth();&#xD;
			fittableXtals.add(c);&#xD;
			int row = 0;&#xD;
			for(int i = 0; i &lt; data.length; i++) {&#xD;
				curTime = i*ssp.getTimeStep();&#xD;
				if(curTime &lt; (c.getNucTime()+delayNucleationTimeBy)) {&#xD;
					data[i][j] = 0;&#xD;
				} else {&#xD;
					data[i][j] = growth[row++];&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		// compile all rows into the total row in the last column&#xD;
		int bulkIdx = data[0].length-1;&#xD;
		int bulk = 0;&#xD;
//		int[] size = new int[data[0].length-1];&#xD;
		for(int i = 0; i &lt; data.length; i++) {&#xD;
			bulk = 0;&#xD;
			for(int j = 0; j &lt; data[0].length-1; j++) {&#xD;
				bulk += data[i][j];&#xD;
//				size[j] += data[i][j];&#xD;
			}&#xD;
			data[i][bulkIdx] = bulk;&#xD;
//			size[data.length-1] += bulk;&#xD;
		}&#xD;
		&#xD;
		for(int i = 0; i &lt; data.length; i++) {&#xD;
			//System.out.println(Arrays.toString(data[i]));&#xD;
		}&#xD;
		return data;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd7yR5AREeOq6NMfztjeOg" name="getParams" specification="_rc-wAJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd7ySJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return nlf.getParameters(); </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd7ySZAREeOq6NMfztjeOg" name="getError" specification="_rc-wApAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd7ySpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>return nlf.getError(); </body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd7yS5AREeOq6NMfztjeOg" name="getPs" specification="_rc-wBJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd7yTJAREeOq6NMfztjeOg" type="_BOtMYpAREeOq6NMfztjeOg" direction="return"/>
          <language>java</language>
          <body>return mps;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_rd7yTZAREeOq6NMfztjeOg" name="setPrintStream" specification="_rdoQQZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rd7yTpAREeOq6NMfztjeOg" name="ps" type="_BOtMYpAREeOq6NMfztjeOg"/>
          <language>java</language>
          <body>this.mps = ps;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_rc4CUJAREeOq6NMfztjeOg" name="getIndividualCorr" method="_rd4u8JAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rdtIwJAREeOq6NMfztjeOg" type="_rdhikJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rc4CUZAREeOq6NMfztjeOg" name="getIndividualCovar" method="_rd5WAJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rdtIwZAREeOq6NMfztjeOg" type="_rdhikJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rc4CUpAREeOq6NMfztjeOg" name="getBulkCorr" method="_rd5WApAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rdtIwpAREeOq6NMfztjeOg" type="_rdhikJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rc4CU5AREeOq6NMfztjeOg" name="getBulkCovar" method="_rd5WBJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rdtIw5AREeOq6NMfztjeOg" type="_rdhikJAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rc4pYJAREeOq6NMfztjeOg" name="getBulkString" method="_rd5WBpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rc4pYZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rc4pYpAREeOq6NMfztjeOg" name="getIndividualString" method="_rd5WCJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rc5QcJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rc53gJAREeOq6NMfztjeOg" name="Analysis">
          <eAnnotations xmi:id="_rc53gZAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_rc53gpAREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_rc53hJAREeOq6NMfztjeOg" type="_ZfAuk5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rc6ekJAREeOq6NMfztjeOg" name="initHeaders" visibility="private" method="_rd5WCpAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_rc7FoJAREeOq6NMfztjeOg" name="dataTimeFitToString" visibility="private" method="_rd59IZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rc7FoZAREeOq6NMfztjeOg" name="converted">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rc7FpZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rc7FopAREeOq6NMfztjeOg" name="fit">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rc7Fp5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rc7Fo5AREeOq6NMfztjeOg" name="params">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rc7FqJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rc7FpJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rc7ssJAREeOq6NMfztjeOg" name="readNVals" visibility="private" method="_rd59KZAREeOq6NMfztjeOg"/>
        <ownedOperation xmi:id="_rc7ssZAREeOq6NMfztjeOg" name="linearInterpolate" method="_rd59KpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rc7sspAREeOq6NMfztjeOg" name="aspectRatio">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rc7ss5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rc7stJAREeOq6NMfztjeOg" name="getN" visibility="private" method="_rd6kIJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rc7stZAREeOq6NMfztjeOg" name="volume">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rc7stpAREeOq6NMfztjeOg" name="h">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rc7st5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rc8TwJAREeOq6NMfztjeOg" name="numFittable" visibility="private" method="_rd6kKZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rc8TwZAREeOq6NMfztjeOg" name="isFittable">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rc8Tw5AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rc8TwpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rc860JAREeOq6NMfztjeOg" name="getSumSq" method="_rd6kM5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rc860ZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rc860pAREeOq6NMfztjeOg" name="getN" method="_rd7LMJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rc8605AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rc861JAREeOq6NMfztjeOg" name="getVolume" method="_rd7LMpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rc861ZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rc9h4JAREeOq6NMfztjeOg" name="normalize" visibility="private" method="_rd7LN5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rc9h4ZAREeOq6NMfztjeOg" name="integrated">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rc9h4pAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rc9h5JAREeOq6NMfztjeOg" name="addError" visibility="private" method="_rd7LOpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rc9h5ZAREeOq6NMfztjeOg" name="normalized">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rc9h55AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rc9h5pAREeOq6NMfztjeOg" name="percentError">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rc-I8ZAREeOq6NMfztjeOg" name="integrate" visibility="private" method="_rd7LPpAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rc-I8pAREeOq6NMfztjeOg" name="data">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rc-I85AREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rc-wAJAREeOq6NMfztjeOg" name="getParams" method="_rd7yR5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rc-wAZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rc-wApAREeOq6NMfztjeOg" name="getError" method="_rd7ySZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rc-wA5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rc-wBJAREeOq6NMfztjeOg" name="getPs" method="_rd7yS5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rdoQQJAREeOq6NMfztjeOg" type="_BOtMYpAREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rdl0AJAREeOq6NMfztjeOg" name="Analysis" method="_rd59EJAREeOq6NMfztjeOg">
          <eAnnotations xmi:id="_rdl0ApAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_rdl0A5AREeOq6NMfztjeOg" key="create"/>
          </eAnnotations>
          <ownedComment xmi:id="_rd9ncpAREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param whichFitting&lt;br>0 = sigmoidal fits&lt;br>1 = sharp-hancock</body>
          </ownedComment>
          <ownedParameter xmi:id="_rdl0AZAREeOq6NMfztjeOg" name="fittingType" type="_VZ3eIpAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rdmbEJAREeOq6NMfztjeOg" type="_ZfAuk5AREeOq6NMfztjeOg" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rdmbEZAREeOq6NMfztjeOg" name="getNormalizedTimeAndAllData" method="_rd59E5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rdmbEpAREeOq6NMfztjeOg" name="s" type="_BN7wUJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rdmbE5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdmbFJAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rdnCIJAREeOq6NMfztjeOg" name="analyze" method="_rd6kJJAREeOq6NMfztjeOg" raisedException="_BOvBkZAREeOq6NMfztjeOg">
          <ownedComment xmi:id="_rd9nc5AREeOq6NMfztjeOg">
            <body>&#xD;
	 * @param s&#xD;
	 * @param fittingSelection &lt;br> 0 = k &lt;br> 1 = tau &lt;br> 2 = n &lt;br> 3 = none &lt;br> 4 = k/tau fixed&lt;br>5 = k/n fixed&#xD;
	 * &lt;br>6 = tau/n fixed&lt;br>7 = all fixed&#xD;
	 * @param nAsFnAspectRatio true = use n as f(d/h) &lt;br> false = use n=ssp.init_n&#xD;
	 * @return&#xD;
	 * @throws IOException</body>
          </ownedComment>
          <ownedParameter xmi:id="_rdnCIZAREeOq6NMfztjeOg" name="s" type="_BN7wUJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rdnCIpAREeOq6NMfztjeOg" name="fittingSelection" type="_VZ2QAJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rdnCI5AREeOq6NMfztjeOg" name="dimensionalitySelection" type="_VZx-kJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rdnCJJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rdnCJZAREeOq6NMfztjeOg" name="getXtalInfo" visibility="private" method="_rd6kMJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rdnCJpAREeOq6NMfztjeOg" name="c" type="_VZj8IJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rdnCJ5AREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rdnpMJAREeOq6NMfztjeOg" name="getSimulInfo" visibility="private" method="_rd7LNJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rdnpMZAREeOq6NMfztjeOg" name="ssp" type="_BPLtgJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rdnpMpAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rdnpM5AREeOq6NMfztjeOg" name="getTimeAndAllData" visibility="private" method="_rd7yQJAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rdnpNJAREeOq6NMfztjeOg" name="timeSteps">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdnpNZAREeOq6NMfztjeOg" name="grew">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rdnpNpAREeOq6NMfztjeOg" name="sample" type="_BPM7oJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rdnpN5AREeOq6NMfztjeOg" name="ssp" type="_BPLtgJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rdnpOJAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdnpOZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_rdoQQZAREeOq6NMfztjeOg" name="setPrintStream" method="_rd7yTZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rdoQQpAREeOq6NMfztjeOg" name="ps" type="_BOtMYpAREeOq6NMfztjeOg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rduW4JAREeOq6NMfztjeOg" name="initializeRegression" visibility="private" method="_rd59F5AREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rduW4ZAREeOq6NMfztjeOg" name="time">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rduW5pAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rduW4pAREeOq6NMfztjeOg" name="data">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdu98JAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rduW45AREeOq6NMfztjeOg" name="isFittable">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdu98ZAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rduW5JAREeOq6NMfztjeOg" name="parameters">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_rdu98pAREeOq6NMfztjeOg" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_rduW5ZAREeOq6NMfztjeOg" name="reg" type="_rdiJpJAREeOq6NMfztjeOg"/>
        </ownedOperation>
        <ownedOperation xmi:id="_rdu985AREeOq6NMfztjeOg" name="isValid" method="_rd6kLZAREeOq6NMfztjeOg">
          <ownedParameter xmi:id="_rdu99JAREeOq6NMfztjeOg" name="m" type="_rdhikJAREeOq6NMfztjeOg"/>
          <ownedParameter xmi:id="_rdu99ZAREeOq6NMfztjeOg" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reAqwJAREeOq6NMfztjeOg" name="" memberEnd="_reAqwZAREeOq6NMfztjeOg _rdwzIJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_reAqwZAREeOq6NMfztjeOg" name="" type="_ZfAuk5AREeOq6NMfztjeOg" association="_reAqwJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reAqw5AREeOq6NMfztjeOg" name="" memberEnd="_reAqxJAREeOq6NMfztjeOg _rdyBRJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_reAqxJAREeOq6NMfztjeOg" name="" type="_ZfAuk5AREeOq6NMfztjeOg" association="_reAqw5AREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reBR0JAREeOq6NMfztjeOg" name="" memberEnd="_reBR0ZAREeOq6NMfztjeOg _rdyBRpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_reBR0ZAREeOq6NMfztjeOg" name="" type="_ZfAuk5AREeOq6NMfztjeOg" association="_reBR0JAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reBR05AREeOq6NMfztjeOg" name="" memberEnd="_reBR1JAREeOq6NMfztjeOg _rdyoUZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_reBR1JAREeOq6NMfztjeOg" name="" type="_ZfAuk5AREeOq6NMfztjeOg" association="_reBR05AREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reBR1pAREeOq6NMfztjeOg" name="" memberEnd="_reBR15AREeOq6NMfztjeOg _rdyoU5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_reBR15AREeOq6NMfztjeOg" name="" type="_ZfAuk5AREeOq6NMfztjeOg" association="_reBR1pAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reB44ZAREeOq6NMfztjeOg" name="" memberEnd="_reB44pAREeOq6NMfztjeOg _rdz2dZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_reB44pAREeOq6NMfztjeOg" name="" type="_ZfAuk5AREeOq6NMfztjeOg" association="_reB44ZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reB45JAREeOq6NMfztjeOg" name="" memberEnd="_reB45ZAREeOq6NMfztjeOg _rd0dgZAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_reB45ZAREeOq6NMfztjeOg" name="" type="_ZfAuk5AREeOq6NMfztjeOg" association="_reB45JAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reCf8ZAREeOq6NMfztjeOg" name="" memberEnd="_reCf8pAREeOq6NMfztjeOg _rd2Ss5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_reCf8pAREeOq6NMfztjeOg" name="" type="_ZfAuk5AREeOq6NMfztjeOg" association="_reCf8ZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reCf9JAREeOq6NMfztjeOg" name="" memberEnd="_reCf9ZAREeOq6NMfztjeOg _rd25wpAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_reCf9ZAREeOq6NMfztjeOg" name="" type="_ZfAuk5AREeOq6NMfztjeOg" association="_reCf9JAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reDHAZAREeOq6NMfztjeOg" name="" memberEnd="_reDHApAREeOq6NMfztjeOg _rd3g0JAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_reDHApAREeOq6NMfztjeOg" name="" type="_ZfAuk5AREeOq6NMfztjeOg" association="_reDHAZAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reDHBJAREeOq6NMfztjeOg" name="" memberEnd="_reDHBZAREeOq6NMfztjeOg _rd8ZUJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_reDHBZAREeOq6NMfztjeOg" name="" type="_ZfAuk5AREeOq6NMfztjeOg" association="_reDHBJAREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reDHB5AREeOq6NMfztjeOg" name="" memberEnd="_reDHCJAREeOq6NMfztjeOg _rd9AYJAREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_reDHCJAREeOq6NMfztjeOg" name="" type="_ZfAuk5AREeOq6NMfztjeOg" association="_reDHB5AREeOq6NMfztjeOg"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_reDuEZAREeOq6NMfztjeOg" name="" memberEnd="_reDuEpAREeOq6NMfztjeOg _rd9AY5AREeOq6NMfztjeOg">
        <ownedEnd xmi:id="_reDuEpAREeOq6NMfztjeOg" name="" type="_ZfAuk5AREeOq6NMfztjeOg" association="_reDuEZAREeOq6NMfztjeOg"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_ZejbkpAREeOq6NMfztjeOg" name="email">
      <packagedElement xmi:type="uml:Class" xmi:id="_ZfBVoZAREeOq6NMfztjeOg" name="SendMailTLS"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_dOvIoZAREeOq6NMfztjeOg" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_dOvIopAREeOq6NMfztjeOg" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_dOvvsJAREeOq6NMfztjeOg" name="border">
          <packagedElement xmi:type="uml:Interface" xmi:id="_dRPDBJAREeOq6NMfztjeOg" name="Border"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_dRPqEZAREeOq6NMfztjeOg" name="TitledBorder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRKxkJAREeOq6NMfztjeOg" name="BorderFactory"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRKxkpAREeOq6NMfztjeOg" name="Box"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRLYoZAREeOq6NMfztjeOg" name="BoxLayout"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRLYo5AREeOq6NMfztjeOg" name="ButtonGroup"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRL_sZAREeOq6NMfztjeOg" name="JButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRL_s5AREeOq6NMfztjeOg" name="JCheckBox"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRMmwJAREeOq6NMfztjeOg" name="JComponent"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRMmwpAREeOq6NMfztjeOg" name="JFileChooser"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRMmxJAREeOq6NMfztjeOg" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRNN0ZAREeOq6NMfztjeOg" name="JLabel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRNN05AREeOq6NMfztjeOg" name="JPanel"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRN04ZAREeOq6NMfztjeOg" name="JRadioButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRN045AREeOq6NMfztjeOg" name="JScrollPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dROb8ZAREeOq6NMfztjeOg" name="JTabbedPane"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dROb85AREeOq6NMfztjeOg" name="JTextArea"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRPDAJAREeOq6NMfztjeOg" name="JTextField"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_dRPDApAREeOq6NMfztjeOg" name="JToggleButton"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_feY3EJAREeOq6NMfztjeOg" name="UIManager"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_hSxl05AREeOq6NMfztjeOg" name="JProgressBar"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rcrOAJAREeOq6NMfztjeOg" name="jama">
      <packagedElement xmi:type="uml:Class" xmi:id="_rdhikJAREeOq6NMfztjeOg" name="Matrix"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rcscIJAREeOq6NMfztjeOg" name="_TESTING_regression">
      <packagedElement xmi:type="uml:Class" xmi:id="_rdiJoJAREeOq6NMfztjeOg" name="RegressionException"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rdiJopAREeOq6NMfztjeOg" name="RegressionNonLinear"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rdiJpJAREeOq6NMfztjeOg" name="RegressionXY"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rcscIZAREeOq6NMfztjeOg" name="_TESTING_regressionModel">
      <packagedElement xmi:type="uml:Package" xmi:id="_rcscIpAREeOq6NMfztjeOg" name="Bounds">
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_rdiws5AREeOq6NMfztjeOg" name="BoundingCondition"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_rcscI5AREeOq6NMfztjeOg" name="RegressionModel">
        <packagedElement xmi:type="uml:Enumeration" xmi:id="_rdjXwZAREeOq6NMfztjeOg" name="ParameterOptions"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_rdiwsZAREeOq6NMfztjeOg" name="Bounds"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rdiwtZAREeOq6NMfztjeOg" name="RegressionModel"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rdjXw5AREeOq6NMfztjeOg" name="SharpHancockModel"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rdj-0ZAREeOq6NMfztjeOg" name="XJMatrixPlugin_SharpHancockNonLinear"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rcscJJAREeOq6NMfztjeOg" name="equations_1d">
      <packagedElement xmi:type="uml:Class" xmi:id="_rdj-05AREeOq6NMfztjeOg" name="Avrami"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rdj-1ZAREeOq6NMfztjeOg" name="Equation1"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_rdkl4ZAREeOq6NMfztjeOg" name="SharpHancock"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_rcscJZAREeOq6NMfztjeOg" name="fitting">
      <packagedElement xmi:type="uml:Class" xmi:id="_rdkl45AREeOq6NMfztjeOg" name="NonLinearFitting"/>
    </packagedElement>
    <profileApplication xmi:id="_BN7wUZAREeOq6NMfztjeOg">
      <eAnnotations xmi:id="_BN7wUpAREeOq6NMfztjeOg" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BODsIJAREeOq6NMfztjeOg" base_Element="_BODFEJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_BOETMJAREeOq6NMfztjeOg" base_Element="_BODFEJAREeOq6NMfztjeOg">
    <annotations xmi:id="_BOETMZAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_BOtMYZAREeOq6NMfztjeOg" base_Element="_BOtMYJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BOtzcJAREeOq6NMfztjeOg" base_Element="_BOtMYpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BOtzcpAREeOq6NMfztjeOg" base_Element="_BOtzcZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BOuagJAREeOq6NMfztjeOg" base_Element="_BOtzc5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BOuagpAREeOq6NMfztjeOg" base_Element="_BOuagZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BOvBkJAREeOq6NMfztjeOg" base_Element="_BOuag5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BOvBkpAREeOq6NMfztjeOg" base_Element="_BOvBkZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BOvooZAREeOq6NMfztjeOg" base_Element="_BOvooJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BOvoo5AREeOq6NMfztjeOg" base_Element="_BOvoopAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BOwPsZAREeOq6NMfztjeOg" base_Element="_BOwPsJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BOw2wJAREeOq6NMfztjeOg" base_Element="_BOwPspAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BOw2wpAREeOq6NMfztjeOg" base_Element="_BOw2wZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BOxd0JAREeOq6NMfztjeOg" base_Element="_BOw2w5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BPLGcJAREeOq6NMfztjeOg" base_Element="_BPKfYZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_BPTCQZAREeOq6NMfztjeOg" dimensions="2" base_Element="_BPSbMpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPi54pAREeOq6NMfztjeOg" base_Element="_BPi54JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPjg8ZAREeOq6NMfztjeOg" base_Element="_BPjg8JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPkIAZAREeOq6NMfztjeOg" base_Element="_BPkIAJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPkvEZAREeOq6NMfztjeOg" base_Element="_BPkvEJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPlWIpAREeOq6NMfztjeOg" base_Element="_BPlWIZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPl9MpAREeOq6NMfztjeOg" base_Element="_BPl9MJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPmkQpAREeOq6NMfztjeOg" base_Element="_BPmkQJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPnLUZAREeOq6NMfztjeOg" base_Element="_BPmkQ5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPnyYJAREeOq6NMfztjeOg" base_Element="_BPnLUpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPnyYpAREeOq6NMfztjeOg" base_Element="_BPnyYZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPoZcZAREeOq6NMfztjeOg" base_Element="_BPoZcJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPpAgZAREeOq6NMfztjeOg" base_Element="_BPpAgJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPpnkZAREeOq6NMfztjeOg" base_Element="_BPpAgpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPqOoJAREeOq6NMfztjeOg" base_Element="_BPpnkpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPq1spAREeOq6NMfztjeOg" base_Element="_BPq1sJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPrcwZAREeOq6NMfztjeOg" base_Element="_BPq1s5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPsD0ZAREeOq6NMfztjeOg" base_Element="_BPrcwpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPsq4ZAREeOq6NMfztjeOg" base_Element="_BPsD0pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_BPtR8pAREeOq6NMfztjeOg" base_Element="_BPtR8JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BP9JkJAREeOq6NMfztjeOg" base_Element="_BP8igJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BP9Jk5AREeOq6NMfztjeOg" base_Element="_BP9JkZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BP9woJAREeOq6NMfztjeOg" base_Element="_BP9JlJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BP9wo5AREeOq6NMfztjeOg" base_Element="_BP9woZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BP-XsJAREeOq6NMfztjeOg" base_Element="_BP9wpJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BP-Xs5AREeOq6NMfztjeOg" base_Element="_BP-XsZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BP--wJAREeOq6NMfztjeOg" base_Element="_BP-XtJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_BP--w5AREeOq6NMfztjeOg" base_Element="_BP--wZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_K5--4JAREeOq6NMfztjeOg" base_Element="_K5-X0ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_K6II0JAREeOq6NMfztjeOg" base_Property="_K6HhwpAREeOq6NMfztjeOg" siblings="_K6LMIJAREeOq6NMfztjeOg _K6LMI5AREeOq6NMfztjeOg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K6II0ZAREeOq6NMfztjeOg" base_Element="_K6HhwpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_K6II1JAREeOq6NMfztjeOg" dimensions="3" base_Element="_K6II0pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K6Iv4JAREeOq6NMfztjeOg" base_Element="_K6II0pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_K6LMIZAREeOq6NMfztjeOg" base_Property="_K6LMIJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K6LMIpAREeOq6NMfztjeOg" base_Element="_K6LMIJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_K6LMJJAREeOq6NMfztjeOg" base_Property="_K6LMI5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_K6LMJZAREeOq6NMfztjeOg" base_Element="_K6LMI5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VZoNkpAREeOq6NMfztjeOg" base_Element="_VZnmhZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VZpbsJAREeOq6NMfztjeOg" base_Element="_VZo0o5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VZyloJAREeOq6NMfztjeOg" base_Element="_VZx-kJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VZ0a1ZAREeOq6NMfztjeOg" base_Element="_VZ0a0pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VZ2QAZAREeOq6NMfztjeOg" base_Element="_VZ2QAJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:StyledElement xmi:id="_VZ3eIZAREeOq6NMfztjeOg" base_Element="_VZ23GJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VZ3eI5AREeOq6NMfztjeOg" base_Element="_VZ3eIpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VZ56YJAREeOq6NMfztjeOg" base_Element="_VZ5TVJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VZ8WoJAREeOq6NMfztjeOg" base_Element="_VZ7vkJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VZ9kwZAREeOq6NMfztjeOg" base_Element="_VZ9kwJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VZ-L05AREeOq6NMfztjeOg" base_Element="_VZ-L0pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VaABBJAREeOq6NMfztjeOg" base_Element="_VaABAJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VaBPJJAREeOq6NMfztjeOg" base_Element="_VaBPIZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VaB2N5AREeOq6NMfztjeOg" dimensions="1" base_Element="_VaB2MpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VaCdRJAREeOq6NMfztjeOg" dimensions="1" base_Element="_VaCdQJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VaCdRpAREeOq6NMfztjeOg" dimensions="1" base_Element="_VaCdQZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VaDEUpAREeOq6NMfztjeOg" dimensions="1" base_Element="_VaCdR5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Generics xmi:id="_VaDrYpAREeOq6NMfztjeOg" genericsValue="Crystal" base_Element="_VaDrYZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VaEScpAREeOq6NMfztjeOg" base_Element="_VaDrY5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VaE5gpAREeOq6NMfztjeOg" dimensions="2" base_Element="_VaESdZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VaE5hpAREeOq6NMfztjeOg" dimensions="2" base_Element="_VaE5g5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VaIj4ZAREeOq6NMfztjeOg" base_Element="_VaIj4JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VbcygZAREeOq6NMfztjeOg" base_Element="_VbcygJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VbdZkJAREeOq6NMfztjeOg" base_Element="_VbcygpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VbdZkpAREeOq6NMfztjeOg" base_Element="_VbdZkZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vbgc4ZAREeOq6NMfztjeOg" base_Element="_Vbgc4JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VbhD8JAREeOq6NMfztjeOg" base_Element="_Vbgc4pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VblVYJAREeOq6NMfztjeOg" base_Element="_VbkuUJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VblVYpAREeOq6NMfztjeOg" base_Element="_VblVYZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vbl8cZAREeOq6NMfztjeOg" base_Element="_Vbl8cJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vbl8c5AREeOq6NMfztjeOg" base_Element="_Vbl8cpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VbtRMZAREeOq6NMfztjeOg" base_Element="_VbtRMJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vbt4QZAREeOq6NMfztjeOg" base_Element="_Vbt4QJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vbt4Q5AREeOq6NMfztjeOg" base_Element="_Vbt4QpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VbufUZAREeOq6NMfztjeOg" base_Element="_VbufUJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_Vb-W8pAREeOq6NMfztjeOg" base_Element="_Vb9v4ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vb--AJAREeOq6NMfztjeOg" base_Element="_Vb-W85AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Vb--BJAREeOq6NMfztjeOg" base_Element="_Vb--AZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_Vb_lEJAREeOq6NMfztjeOg" base_Element="_Vb--AZAREeOq6NMfztjeOg">
    <annotations xmi:id="_Vb_lEZAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_VcFEoJAREeOq6NMfztjeOg" base_Element="_VcEdkJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VcGSwZAREeOq6NMfztjeOg" base_Element="_VcGSwJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcQDwJAREeOq6NMfztjeOg" base_Element="_VcPcspAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcQDwpAREeOq6NMfztjeOg" base_Element="_VcQDwZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VcQDxZAREeOq6NMfztjeOg" dimensions="1" base_Element="_VcQDw5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcQq0JAREeOq6NMfztjeOg" base_Element="_VcQDw5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VcQq05AREeOq6NMfztjeOg" base_Element="_VcQq0ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcQq1JAREeOq6NMfztjeOg" base_Element="_VcQq0ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VcRR4JAREeOq6NMfztjeOg" base_Element="_VcQq1ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcRR4ZAREeOq6NMfztjeOg" base_Element="_VcQq1ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcRR45AREeOq6NMfztjeOg" base_Element="_VcRR4pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcRR5ZAREeOq6NMfztjeOg" base_Element="_VcRR5JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcR48pAREeOq6NMfztjeOg" base_Element="_VcR48JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Generics xmi:id="_VcR49JAREeOq6NMfztjeOg" genericsValue="Integer" base_Element="_VcR485AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcSgAJAREeOq6NMfztjeOg" base_Element="_VcR485AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcSgApAREeOq6NMfztjeOg" base_Element="_VcSgAZAREeOq6NMfztjeOg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_VcTHEJAREeOq6NMfztjeOg" name="getLatticePoints" method="_VcpFUJAREeOq6NMfztjeOg">
      <ownedParameter xmi:id="_VcTHEZAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcTHEpAREeOq6NMfztjeOg" value="*"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Generics xmi:id="_VcSgA5AREeOq6NMfztjeOg" genericsValue="JVector" base_Element="_VcSgAZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VcTHE5AREeOq6NMfztjeOg" base_Element="_VcTHEJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcTuI5AREeOq6NMfztjeOg" base_Element="_VcTuIpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcUVMJAREeOq6NMfztjeOg" base_Element="_VcTuJZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcUVMpAREeOq6NMfztjeOg" base_Element="_VcUVMZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Generics xmi:id="_VcU8QJAREeOq6NMfztjeOg" genericsValue="Short" base_Element="_VcUVM5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcU8QZAREeOq6NMfztjeOg" base_Element="_VcUVM5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VcU8RJAREeOq6NMfztjeOg" base_Element="_VcU8QpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcVjUZAREeOq6NMfztjeOg" base_Element="_VcVjUJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcVjU5AREeOq6NMfztjeOg" base_Element="_VcVjUpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcWKYJAREeOq6NMfztjeOg" base_Element="_VcVjVJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcWKYpAREeOq6NMfztjeOg" base_Element="_VcWKYZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcWKZJAREeOq6NMfztjeOg" base_Element="_VcWKY5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VcWxcpAREeOq6NMfztjeOg" base_Element="_VcWxcJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcWxc5AREeOq6NMfztjeOg" base_Element="_VcWxcJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VcXYgJAREeOq6NMfztjeOg" base_Element="_VcWxdZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VcXYg5AREeOq6NMfztjeOg" base_Element="_VcXYgZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcXYhJAREeOq6NMfztjeOg" base_Element="_VcXYgZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcXYhpAREeOq6NMfztjeOg" base_Element="_VcXYhZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_VcX_kpAREeOq6NMfztjeOg" base_Property="_VcX_kJAREeOq6NMfztjeOg" siblings="_Vc1SkpAREeOq6NMfztjeOg _Vc1SlpAREeOq6NMfztjeOg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcX_k5AREeOq6NMfztjeOg" base_Element="_VcX_kJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VcZNtZAREeOq6NMfztjeOg" dimensions="1" base_Element="_VcZNs5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcZNtpAREeOq6NMfztjeOg" base_Element="_VcZNs5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VcZ0wpAREeOq6NMfztjeOg" base_Element="_VcZ0wJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcZ0w5AREeOq6NMfztjeOg" base_Element="_VcZ0wJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Generics xmi:id="_Vcab0JAREeOq6NMfztjeOg" genericsValue="Crystal" base_Element="_VcZ0xJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Vcab0ZAREeOq6NMfztjeOg" base_Element="_VcZ0xJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Vcab05AREeOq6NMfztjeOg" base_Element="_Vcab0pAREeOq6NMfztjeOg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_Vcab1JAREeOq6NMfztjeOg" name="getTotalVolume" method="_Vcuk6pAREeOq6NMfztjeOg">
      <ownedParameter xmi:id="_Vcab1ZAREeOq6NMfztjeOg" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcbC4ZAREeOq6NMfztjeOg" base_Element="_VcbC4JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcbC45AREeOq6NMfztjeOg" base_Element="_VcbC4pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Vcc4EJAREeOq6NMfztjeOg" base_Element="_VccRAJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Vcc4F5AREeOq6NMfztjeOg" base_Element="_Vcc4E5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcdfJpAREeOq6NMfztjeOg" base_Element="_VcdfJJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VceGMpAREeOq6NMfztjeOg" base_Element="_VceGMJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VceGNZAREeOq6NMfztjeOg" base_Element="_VceGM5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcetQJAREeOq6NMfztjeOg" base_Element="_VceGNpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_Vcf7YpAREeOq6NMfztjeOg" dimensions="2" base_Element="_Vcf7YJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_Vcf7ZpAREeOq6NMfztjeOg" base_Element="_Vcf7ZJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VcgicpAREeOq6NMfztjeOg" base_Element="_VcgicJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VcgieJAREeOq6NMfztjeOg" base_Element="_VcgidpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VciXoJAREeOq6NMfztjeOg" base_Element="_VchwlZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_VciXpJAREeOq6NMfztjeOg" base_Element="_VciXopAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VciXp5AREeOq6NMfztjeOg" base_Element="_VciXppAREeOq6NMfztjeOg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_Vci-sZAREeOq6NMfztjeOg" name="getFolderOutput" method="_VcxoM5AREeOq6NMfztjeOg">
      <ownedParameter xmi:id="_Vci-tJAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_Vci-spAREeOq6NMfztjeOg" name="setFolderOutput" method="_VcxoNZAREeOq6NMfztjeOg">
      <ownedParameter xmi:id="_Vci-s5AREeOq6NMfztjeOg" name="folderOutput" type="_BOtzc5AREeOq6NMfztjeOg"/>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcjlwZAREeOq6NMfztjeOg" base_Element="_Vci-tZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcjlxJAREeOq6NMfztjeOg" base_Element="_VcjlwpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VckM0JAREeOq6NMfztjeOg" base_Element="_VcjlxZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VckM05AREeOq6NMfztjeOg" base_Element="_VckM0ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Vckz4JAREeOq6NMfztjeOg" base_Element="_VckM1pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Vcla8JAREeOq6NMfztjeOg" base_Element="_Vckz5ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Vcla85AREeOq6NMfztjeOg" base_Element="_Vcla8ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcmpEZAREeOq6NMfztjeOg" base_Element="_VcmCBpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_VcmpE5AREeOq6NMfztjeOg" base_Element="_VcmpEpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Vcn3MJAREeOq6NMfztjeOg" base_Element="_VcnQJZAREeOq6NMfztjeOg"/>
  <uml:OpaqueBehavior xmi:id="_VcpFUJAREeOq6NMfztjeOg" name="getLatticePoints" specification="_VcTHEJAREeOq6NMfztjeOg">
    <ownedParameter xmi:id="_VcpFUZAREeOq6NMfztjeOg" type="_BOtMYJAREeOq6NMfztjeOg" direction="return">
      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_VcpFUpAREeOq6NMfztjeOg" value="*"/>
    </ownedParameter>
    <language>java</language>
    <body>JVector[] points = new JVector[latticePoints.size()];&#xD;
		points = latticePoints.toArray(points);&#xD;
		return points;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_VcsvupAREeOq6NMfztjeOg" name="toString" specification="_VZ23GJAREeOq6NMfztjeOg">
    <ownedParameter xmi:id="_Vcsvu5AREeOq6NMfztjeOg" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>switch(this) {&#xD;
		case FIT_K:&#xD;
			return &quot;Fit k&quot;;&#xD;
		case FIT_K_N:&#xD;
			return &quot;Fit k n&quot;;&#xD;
		case FIT_K_T:&#xD;
			return &quot;Fit k t&quot;;&#xD;
		case FIT_K_T_N:&#xD;
			return &quot;Fit k t n&quot;;&#xD;
		case FIT_N:&#xD;
			return &quot;Fit n&quot;;&#xD;
		case FIT_NONE:&#xD;
			return &quot;Fit none&quot;;&#xD;
		case FIT_T:&#xD;
			return &quot;Fit t&quot;;&#xD;
		case FIT_T_N:&#xD;
			return &quot;Fit t n&quot;;&#xD;
		default:&#xD;
			return &quot;Fit none&quot;;&#xD;
		}&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_Vcuk6pAREeOq6NMfztjeOg" name="getTotalVolume" specification="_Vcab1JAREeOq6NMfztjeOg">
    <ownedParameter xmi:id="_Vcuk65AREeOq6NMfztjeOg" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </ownedParameter>
    <language>java</language>
    <body>if(totalVolume == 0) {&#xD;
			calculateTotalVolume();&#xD;
		}&#xD;
		return totalVolume; &#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_VcxoM5AREeOq6NMfztjeOg" name="getFolderOutput" specification="_Vci-sZAREeOq6NMfztjeOg">
    <ownedParameter xmi:id="_VcxoNJAREeOq6NMfztjeOg" type="_BOtzc5AREeOq6NMfztjeOg" direction="return"/>
    <language>java</language>
    <body>setFolderOutput(folderOutput);&#xD;
		return folderOutput;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_VcxoNZAREeOq6NMfztjeOg" name="setFolderOutput" specification="_Vci-spAREeOq6NMfztjeOg">
    <ownedParameter xmi:id="_VcxoNpAREeOq6NMfztjeOg" name="folderOutput" type="_BOtzc5AREeOq6NMfztjeOg"/>
    <language>java</language>
    <body>folderOutput.mkdir();&#xD;
		this.folderOutput = folderOutput;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_Vc0EcpAREeOq6NMfztjeOg" name="terminate" specification="_Vb3CMJAREeOq6NMfztjeOg">
    <ownedParameter xmi:id="_Vc0Ec5AREeOq6NMfztjeOg" name="sp" type="_BPLtgJAREeOq6NMfztjeOg"/>
    <ownedParameter xmi:id="_Vc0EdJAREeOq6NMfztjeOg" name="val">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </ownedParameter>
    <ownedParameter xmi:id="_Vc0EdZAREeOq6NMfztjeOg" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </ownedParameter>
    <language>java</language>
    <body>switch(sp.getTerm()) {&#xD;
		case FractionComplete:&#xD;
			if( val &lt; (Double) sp.getTermVal()) {&#xD;
				return false;&#xD;
			}&#xD;
			return true;&#xD;
		case TimeElapsed:&#xD;
			if( val &lt; (Double) sp.getTermVal()) {&#xD;
				return false;&#xD;
			}&#xD;
			return true;&#xD;
		}&#xD;
		throw new RuntimeException(&quot;Terminiation Parameter: &quot; + sp.getTerm().toString() + &quot; does not have a corresponding &quot; +&#xD;
				&quot;option in the method: terminate(SimulParams sp, Object val) in the class: Termination&quot;);&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_Vc1Sk5AREeOq6NMfztjeOg" base_Property="_Vc1SkpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Vc1SlJAREeOq6NMfztjeOg" base_Element="_Vc1SkpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_Vc15oJAREeOq6NMfztjeOg" base_Property="_Vc1SlpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Vc15oZAREeOq6NMfztjeOg" base_Element="_Vc1SlpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vc8AQpAREeOq6NMfztjeOg" base_Element="_Vc8AQJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vc8nUpAREeOq6NMfztjeOg" base_Element="_Vc8nUJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vc8nVZAREeOq6NMfztjeOg" base_Element="_Vc8nU5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vc9OYpAREeOq6NMfztjeOg" base_Element="_Vc9OYJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vc9OZZAREeOq6NMfztjeOg" base_Element="_Vc9OY5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vc91cJAREeOq6NMfztjeOg" base_Element="_Vc9OZpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vc91c5AREeOq6NMfztjeOg" base_Element="_Vc91cZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vc-cgJAREeOq6NMfztjeOg" base_Element="_Vc91dJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vc-cg5AREeOq6NMfztjeOg" base_Element="_Vc-cgZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vc_DkJAREeOq6NMfztjeOg" base_Element="_Vc-chJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vc_Dk5AREeOq6NMfztjeOg" base_Element="_Vc_DkZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vc_qoJAREeOq6NMfztjeOg" base_Element="_Vc_DlJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_Vc_qo5AREeOq6NMfztjeOg" base_Element="_Vc_qoZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VdARsJAREeOq6NMfztjeOg" base_Element="_Vc_qpJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VdARs5AREeOq6NMfztjeOg" base_Element="_VdARsZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VdA4wJAREeOq6NMfztjeOg" base_Element="_VdARtJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VdA4w5AREeOq6NMfztjeOg" base_Element="_VdA4wZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VdBf0JAREeOq6NMfztjeOg" base_Element="_VdA4xJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VdBf05AREeOq6NMfztjeOg" base_Element="_VdBf0ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VdCG4JAREeOq6NMfztjeOg" base_Element="_VdBf1JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VdCG45AREeOq6NMfztjeOg" base_Element="_VdCG4ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VdCt8JAREeOq6NMfztjeOg" base_Element="_VdCG5JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VdCt85AREeOq6NMfztjeOg" base_Element="_VdCt8ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VdDVAJAREeOq6NMfztjeOg" base_Element="_VdCt9JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_VdDVA5AREeOq6NMfztjeOg" base_Element="_VdDVAZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_ZfAHgZAREeOq6NMfztjeOg" base_Element="_ZfAHgJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_ZfAukJAREeOq6NMfztjeOg" base_Element="_ZfAHgpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_ZfAukpAREeOq6NMfztjeOg" base_Element="_ZfAukZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_ZfBVopAREeOq6NMfztjeOg" base_Element="_ZfBVoZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfDx4pAREeOq6NMfztjeOg" base_Element="_ZfDK05AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_ZfDx45AREeOq6NMfztjeOg" base_Element="_ZfDK05AREeOq6NMfztjeOg">
    <annotations xmi:id="_ZfDx5JAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfIDUZAREeOq6NMfztjeOg" base_Element="_ZfIDUJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfIqYJAREeOq6NMfztjeOg" base_Element="_ZfIDUpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_ZfIqYpAREeOq6NMfztjeOg" base_Property="_ZfIqYZAREeOq6NMfztjeOg" siblings="_ZfPYFpAREeOq6NMfztjeOg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfIqY5AREeOq6NMfztjeOg" base_Element="_ZfIqYZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfIqZZAREeOq6NMfztjeOg" base_Element="_ZfIqZJAREeOq6NMfztjeOg">
    <associatedElement xmi:type="uml:Operation" xmi:id="_ZfJRcZAREeOq6NMfztjeOg" name="getTotalVolume" method="_ZfNi4JAREeOq6NMfztjeOg">
      <ownedParameter xmi:id="_ZfJRcpAREeOq6NMfztjeOg" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:MultiDeclaration xmi:id="_ZfJRcJAREeOq6NMfztjeOg" base_Property="_ZfIqZJAREeOq6NMfztjeOg" siblings="_ZfP_IpAREeOq6NMfztjeOg" root="true"/>
  <UMLLabProfile:Generics xmi:id="_ZfJ4gJAREeOq6NMfztjeOg" genericsValue="Simulation" base_Element="_ZfJRc5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfJ4gZAREeOq6NMfztjeOg" base_Element="_ZfJRc5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfJ4hJAREeOq6NMfztjeOg" base_Element="_ZfJ4gpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfKfkJAREeOq6NMfztjeOg" base_Element="_ZfJ4hZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_ZfKfkpAREeOq6NMfztjeOg" base_Property="_ZfKfkZAREeOq6NMfztjeOg" siblings="_ZfP_JZAREeOq6NMfztjeOg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfKfk5AREeOq6NMfztjeOg" base_Element="_ZfKfkZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfKflZAREeOq6NMfztjeOg" base_Element="_ZfKflJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfLGoZAREeOq6NMfztjeOg" base_Element="_ZfLGoJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfLGo5AREeOq6NMfztjeOg" base_Element="_ZfLGopAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfLGppAREeOq6NMfztjeOg" base_Element="_ZfLGpJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfLtspAREeOq6NMfztjeOg" base_Element="_ZfLtsJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfLttZAREeOq6NMfztjeOg" base_Element="_ZfLts5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfMUwJAREeOq6NMfztjeOg" base_Element="_ZfLttpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfMUw5AREeOq6NMfztjeOg" base_Element="_ZfMUwZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfMUxpAREeOq6NMfztjeOg" base_Element="_ZfMUxJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfM70pAREeOq6NMfztjeOg" base_Element="_ZfM70JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfM71ZAREeOq6NMfztjeOg" base_Element="_ZfM705AREeOq6NMfztjeOg"/>
  <uml:OpaqueBehavior xmi:id="_ZfNi4JAREeOq6NMfztjeOg" name="getTotalVolume" specification="_ZfJRcZAREeOq6NMfztjeOg">
    <ownedParameter xmi:id="_ZfNi4ZAREeOq6NMfztjeOg" direction="return">
      <name xsi:nil="true"/>
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </ownedParameter>
    <language>java</language>
    <body>if(totalVolume == 0) {&#xD;
			return sp.getApproxVolume();&#xD;
		}&#xD;
		return totalVolume; &#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:MultiDeclaration xmi:id="_ZfP_IJAREeOq6NMfztjeOg" base_Property="_ZfPYFpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfP_IZAREeOq6NMfztjeOg" base_Element="_ZfPYFpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_ZfP_I5AREeOq6NMfztjeOg" base_Property="_ZfP_IpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfP_JJAREeOq6NMfztjeOg" base_Element="_ZfP_IpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_ZfQmMJAREeOq6NMfztjeOg" base_Property="_ZfP_JZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_ZfQmMZAREeOq6NMfztjeOg" base_Element="_ZfP_JZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_ZfSbYpAREeOq6NMfztjeOg" base_Element="_ZfSbYJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_ZfTCcJAREeOq6NMfztjeOg" base_Element="_ZfSbY5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_ZfTCc5AREeOq6NMfztjeOg" base_Element="_ZfTCcZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_ZfTpgJAREeOq6NMfztjeOg" base_Element="_ZfTCdJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_ZfTpg5AREeOq6NMfztjeOg" base_Element="_ZfTpgZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_ZfUQkJAREeOq6NMfztjeOg" base_Element="_ZfTphJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_ZfUQk5AREeOq6NMfztjeOg" base_Element="_ZfUQkZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_ZfUQlpAREeOq6NMfztjeOg" base_Element="_ZfUQlJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRHuQJAREeOq6NMfztjeOg" base_Element="_dRHHMJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRHuQpAREeOq6NMfztjeOg" base_Element="_dRHuQZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRIVUJAREeOq6NMfztjeOg" base_Element="_dRHuQ5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRIVUpAREeOq6NMfztjeOg" base_Element="_dRIVUZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRI8YJAREeOq6NMfztjeOg" base_Element="_dRIVU5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRI8YpAREeOq6NMfztjeOg" base_Element="_dRI8YZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRJjcJAREeOq6NMfztjeOg" base_Element="_dRI8Y5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRJjcpAREeOq6NMfztjeOg" base_Element="_dRJjcZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRKKgJAREeOq6NMfztjeOg" base_Element="_dRJjc5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRKKgpAREeOq6NMfztjeOg" base_Element="_dRKKgZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRKKhJAREeOq6NMfztjeOg" base_Element="_dRKKg5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRKxkZAREeOq6NMfztjeOg" base_Element="_dRKxkJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRLYoJAREeOq6NMfztjeOg" base_Element="_dRKxkpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRLYopAREeOq6NMfztjeOg" base_Element="_dRLYoZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRL_sJAREeOq6NMfztjeOg" base_Element="_dRLYo5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRL_spAREeOq6NMfztjeOg" base_Element="_dRL_sZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRL_tJAREeOq6NMfztjeOg" base_Element="_dRL_s5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRMmwZAREeOq6NMfztjeOg" base_Element="_dRMmwJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRMmw5AREeOq6NMfztjeOg" base_Element="_dRMmwpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRNN0JAREeOq6NMfztjeOg" base_Element="_dRMmxJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRNN0pAREeOq6NMfztjeOg" base_Element="_dRNN0ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRN04JAREeOq6NMfztjeOg" base_Element="_dRNN05AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRN04pAREeOq6NMfztjeOg" base_Element="_dRN04ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dROb8JAREeOq6NMfztjeOg" base_Element="_dRN045AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dROb8pAREeOq6NMfztjeOg" base_Element="_dROb8ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dROb9JAREeOq6NMfztjeOg" base_Element="_dROb85AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRPDAZAREeOq6NMfztjeOg" base_Element="_dRPDAJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRPDA5AREeOq6NMfztjeOg" base_Element="_dRPDApAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRPqEJAREeOq6NMfztjeOg" base_Element="_dRPDBJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dRPqEpAREeOq6NMfztjeOg" base_Element="_dRPqEZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRTUcJAREeOq6NMfztjeOg" base_Element="_dRStYJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_dRTUcZAREeOq6NMfztjeOg" base_Element="_dRStYJAREeOq6NMfztjeOg">
    <annotations xmi:id="_dRTUcpAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRTUdZAREeOq6NMfztjeOg" base_Element="_dRTUc5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_dRT7gJAREeOq6NMfztjeOg" base_Element="_dRTUc5AREeOq6NMfztjeOg">
    <annotations xmi:id="_dRT7gZAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRUik5AREeOq6NMfztjeOg" base_Element="_dRUikJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_dRVJoJAREeOq6NMfztjeOg" base_Element="_dRUikJAREeOq6NMfztjeOg">
    <annotations xmi:id="_dRVJoZAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRoroJAREeOq6NMfztjeOg" base_Element="_dRoEkZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_dRoroZAREeOq6NMfztjeOg" base_Element="_dRoEkZAREeOq6NMfztjeOg">
    <annotations xmi:id="_dRoropAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRtkIZAREeOq6NMfztjeOg" base_Element="_dRtkIJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRtkI5AREeOq6NMfztjeOg" base_Element="_dRtkIpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRuLMJAREeOq6NMfztjeOg" base_Element="_dRtkJJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRuLMpAREeOq6NMfztjeOg" base_Element="_dRuLMZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRuLNJAREeOq6NMfztjeOg" base_Element="_dRuLM5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRuyQJAREeOq6NMfztjeOg" base_Element="_dRuLNZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRuyQpAREeOq6NMfztjeOg" base_Element="_dRuyQZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dRuyRJAREeOq6NMfztjeOg" base_Property="_dRuyQ5AREeOq6NMfztjeOg" siblings="_dR80sJAREeOq6NMfztjeOg _dR80s5AREeOq6NMfztjeOg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRuyRZAREeOq6NMfztjeOg" base_Element="_dRuyQ5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dRvZUZAREeOq6NMfztjeOg" base_Property="_dRvZUJAREeOq6NMfztjeOg" siblings="_dR9bwJAREeOq6NMfztjeOg _dR9bw5AREeOq6NMfztjeOg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRvZUpAREeOq6NMfztjeOg" base_Element="_dRvZUJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dRvZVJAREeOq6NMfztjeOg" base_Property="_dRvZU5AREeOq6NMfztjeOg" siblings="_dR9bxpAREeOq6NMfztjeOg _dR-C0pAREeOq6NMfztjeOg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRwAYJAREeOq6NMfztjeOg" base_Element="_dRvZU5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dRwAYpAREeOq6NMfztjeOg" base_Property="_dRwAYZAREeOq6NMfztjeOg" siblings="_dR-C1ZAREeOq6NMfztjeOg _dR-p4ZAREeOq6NMfztjeOg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRwAY5AREeOq6NMfztjeOg" base_Element="_dRwAYZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dRwncJAREeOq6NMfztjeOg" base_Property="_dRwAZJAREeOq6NMfztjeOg" siblings="_dR-p5JAREeOq6NMfztjeOg _dR-p55AREeOq6NMfztjeOg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRwncZAREeOq6NMfztjeOg" base_Element="_dRwAZJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRwnc5AREeOq6NMfztjeOg" base_Element="_dRwncpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRxOgJAREeOq6NMfztjeOg" base_Element="_dRwndJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRxOgpAREeOq6NMfztjeOg" base_Element="_dRxOgZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRxOhZAREeOq6NMfztjeOg" base_Element="_dRxOg5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRx1kpAREeOq6NMfztjeOg" base_Element="_dRx1kJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRx1lZAREeOq6NMfztjeOg" base_Element="_dRx1k5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRycoZAREeOq6NMfztjeOg" base_Element="_dRx1lpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRycpJAREeOq6NMfztjeOg" base_Element="_dRycopAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRzDsJAREeOq6NMfztjeOg" base_Element="_dRycpZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRzDs5AREeOq6NMfztjeOg" base_Element="_dRzDsZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRzDtpAREeOq6NMfztjeOg" base_Element="_dRzDtJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRzqwZAREeOq6NMfztjeOg" base_Element="_dRzDt5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRzqw5AREeOq6NMfztjeOg" base_Element="_dRzqwpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dRzqxZAREeOq6NMfztjeOg" base_Element="_dRzqxJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR0R0pAREeOq6NMfztjeOg" base_Element="_dR0R0JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR044ZAREeOq6NMfztjeOg" base_Element="_dR0R1ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR045JAREeOq6NMfztjeOg" base_Element="_dR044pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR1f8JAREeOq6NMfztjeOg" base_Element="_dR045ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR1f8pAREeOq6NMfztjeOg" base_Element="_dR1f8ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dR1f9JAREeOq6NMfztjeOg" base_Property="_dR1f85AREeOq6NMfztjeOg" siblings="_dR_Q85AREeOq6NMfztjeOg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR1f9ZAREeOq6NMfztjeOg" base_Element="_dR1f85AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR2HApAREeOq6NMfztjeOg" base_Element="_dR2HAJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dR80sZAREeOq6NMfztjeOg" base_Property="_dR80sJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR80spAREeOq6NMfztjeOg" base_Element="_dR80sJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dR80tJAREeOq6NMfztjeOg" base_Property="_dR80s5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR80tZAREeOq6NMfztjeOg" base_Element="_dR80s5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dR9bwZAREeOq6NMfztjeOg" base_Property="_dR9bwJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR9bwpAREeOq6NMfztjeOg" base_Element="_dR9bwJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dR9bxJAREeOq6NMfztjeOg" base_Property="_dR9bw5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR9bxZAREeOq6NMfztjeOg" base_Element="_dR9bw5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dR-C0JAREeOq6NMfztjeOg" base_Property="_dR9bxpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR-C0ZAREeOq6NMfztjeOg" base_Element="_dR9bxpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dR-C05AREeOq6NMfztjeOg" base_Property="_dR-C0pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR-C1JAREeOq6NMfztjeOg" base_Element="_dR-C0pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dR-C1pAREeOq6NMfztjeOg" base_Property="_dR-C1ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR-p4JAREeOq6NMfztjeOg" base_Element="_dR-C1ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dR-p4pAREeOq6NMfztjeOg" base_Property="_dR-p4ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR-p45AREeOq6NMfztjeOg" base_Element="_dR-p4ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dR-p5ZAREeOq6NMfztjeOg" base_Property="_dR-p5JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR-p5pAREeOq6NMfztjeOg" base_Element="_dR-p5JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dR_Q8JAREeOq6NMfztjeOg" base_Property="_dR-p55AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR_Q8ZAREeOq6NMfztjeOg" base_Element="_dR-p55AREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_dR_Q9JAREeOq6NMfztjeOg" base_Property="_dR_Q85AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_dR_Q9ZAREeOq6NMfztjeOg" base_Element="_dR_Q85AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSDiYpAREeOq6NMfztjeOg" base_Element="_dSDiYJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSEJcJAREeOq6NMfztjeOg" base_Element="_dSDiY5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSEJc5AREeOq6NMfztjeOg" base_Element="_dSEJcZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSEwgJAREeOq6NMfztjeOg" base_Element="_dSEJdJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSEwg5AREeOq6NMfztjeOg" base_Element="_dSEwgZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSEwhpAREeOq6NMfztjeOg" base_Element="_dSEwhJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSFXkpAREeOq6NMfztjeOg" base_Element="_dSFXkJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSFXlZAREeOq6NMfztjeOg" base_Element="_dSFXk5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSF-oJAREeOq6NMfztjeOg" base_Element="_dSFXlpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSF-o5AREeOq6NMfztjeOg" base_Element="_dSF-oZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSGlsJAREeOq6NMfztjeOg" base_Element="_dSF-pJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSGls5AREeOq6NMfztjeOg" base_Element="_dSGlsZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSHMwJAREeOq6NMfztjeOg" base_Element="_dSGltJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSHMw5AREeOq6NMfztjeOg" base_Element="_dSHMwZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSHz0JAREeOq6NMfztjeOg" base_Element="_dSHMxJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSHz05AREeOq6NMfztjeOg" base_Element="_dSHz0ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSIa4JAREeOq6NMfztjeOg" base_Element="_dSHz1JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSIa45AREeOq6NMfztjeOg" base_Element="_dSIa4ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSIa5pAREeOq6NMfztjeOg" base_Element="_dSIa5JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSJB8JAREeOq6NMfztjeOg" base_Element="_dSIa55AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSJB85AREeOq6NMfztjeOg" base_Element="_dSJB8ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSJpAJAREeOq6NMfztjeOg" base_Element="_dSJB9JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSJpA5AREeOq6NMfztjeOg" base_Element="_dSJpAZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSKQEJAREeOq6NMfztjeOg" base_Element="_dSJpBJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSKQE5AREeOq6NMfztjeOg" base_Element="_dSKQEZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSKQFpAREeOq6NMfztjeOg" base_Element="_dSKQFJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSK3IpAREeOq6NMfztjeOg" base_Element="_dSK3IJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSK3JZAREeOq6NMfztjeOg" base_Element="_dSK3I5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSLeMpAREeOq6NMfztjeOg" base_Element="_dSLeMJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSLeNZAREeOq6NMfztjeOg" base_Element="_dSLeM5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSMFQJAREeOq6NMfztjeOg" base_Element="_dSLeNpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSMFQ5AREeOq6NMfztjeOg" base_Element="_dSMFQZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSMsUJAREeOq6NMfztjeOg" base_Element="_dSMFRJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSMsU5AREeOq6NMfztjeOg" base_Element="_dSMsUZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSMsVpAREeOq6NMfztjeOg" base_Element="_dSMsVJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_dSNTYpAREeOq6NMfztjeOg" base_Element="_dSNTYJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_feY3EZAREeOq6NMfztjeOg" base_Element="_feY3EJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_hSw-wZAREeOq6NMfztjeOg" base_Element="_hSw-wJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_hSxl0JAREeOq6NMfztjeOg" base_Element="_hSw-wpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_hSxl0pAREeOq6NMfztjeOg" base_Element="_hSxl0ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_hSyM4JAREeOq6NMfztjeOg" base_Element="_hSxl05AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hSzbA5AREeOq6NMfztjeOg" base_Element="_hSzbAJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_hSzbBJAREeOq6NMfztjeOg" base_Element="_hSzbAJAREeOq6NMfztjeOg">
    <annotations xmi:id="_hSzbBZAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS2eUJAREeOq6NMfztjeOg" base_Element="_hS13QJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS2eUpAREeOq6NMfztjeOg" base_Element="_hS2eUZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS2eVJAREeOq6NMfztjeOg" base_Element="_hS2eU5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS3FYZAREeOq6NMfztjeOg" base_Element="_hS3FYJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS3FY5AREeOq6NMfztjeOg" base_Element="_hS3FYpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_hS3FZZAREeOq6NMfztjeOg" base_Property="_hS3FZJAREeOq6NMfztjeOg" siblings="_hS6vwJAREeOq6NMfztjeOg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS3scJAREeOq6NMfztjeOg" base_Element="_hS3FZJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS3scpAREeOq6NMfztjeOg" base_Element="_hS3scZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS3sdZAREeOq6NMfztjeOg" base_Element="_hS3sc5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS4TgpAREeOq6NMfztjeOg" base_Element="_hS4TgJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS4ThZAREeOq6NMfztjeOg" base_Element="_hS4Tg5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS46kZAREeOq6NMfztjeOg" base_Element="_hS4ThpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS46k5AREeOq6NMfztjeOg" base_Element="_hS46kpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_hS6vwZAREeOq6NMfztjeOg" base_Property="_hS6vwJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_hS6vwpAREeOq6NMfztjeOg" base_Element="_hS6vwJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_hS8k8pAREeOq6NMfztjeOg" base_Element="_hS8k8JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_hS8k9ZAREeOq6NMfztjeOg" base_Element="_hS8k85AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_hS9MApAREeOq6NMfztjeOg" base_Element="_hS9MAJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_hS9MBZAREeOq6NMfztjeOg" base_Element="_hS9MA5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_hS9zEJAREeOq6NMfztjeOg" base_Element="_hS9MBpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_hS9zE5AREeOq6NMfztjeOg" base_Element="_hS9zEZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_hS-aIJAREeOq6NMfztjeOg" base_Element="_hS9zFJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_hS-aI5AREeOq6NMfztjeOg" base_Element="_hS-aIZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_hS_BMJAREeOq6NMfztjeOg" base_Element="_hS-aJJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n50LQ5AREeOq6NMfztjeOg" base_Element="_n5zkMJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n50LRJAREeOq6NMfztjeOg" base_Element="_n5zkMJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n50LRpAREeOq6NMfztjeOg" base_Element="_n50LQJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_n50yUJAREeOq6NMfztjeOg" base_Element="_n5zkMJAREeOq6NMfztjeOg">
    <annotations xmi:id="_n50yUZAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n50yVJAREeOq6NMfztjeOg" base_Element="_n50yUpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n50yVpAREeOq6NMfztjeOg" base_Element="_n50yU5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_n51ZYJAREeOq6NMfztjeOg" base_Element="_n50yUpAREeOq6NMfztjeOg">
    <annotations xmi:id="_n51ZYZAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n52AcZAREeOq6NMfztjeOg" base_Element="_n51ZYpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n52Ac5AREeOq6NMfztjeOg" base_Element="_n51ZY5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_n52AdJAREeOq6NMfztjeOg" base_Element="_n51ZYpAREeOq6NMfztjeOg">
    <annotations xmi:id="_n52AdZAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_n55DxJAREeOq6NMfztjeOg" base_Element="_n55DwJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n55q0JAREeOq6NMfztjeOg" base_Element="_n55DwJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n55q0pAREeOq6NMfztjeOg" base_Element="_n55DwZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_n55q05AREeOq6NMfztjeOg" base_Element="_n55DwJAREeOq6NMfztjeOg">
    <annotations xmi:id="_n55q1JAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n56R4ZAREeOq6NMfztjeOg" base_Element="_n55q1ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n56R45AREeOq6NMfztjeOg" base_Element="_n56R4JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_n56R5JAREeOq6NMfztjeOg" base_Element="_n55q1ZAREeOq6NMfztjeOg">
    <annotations xmi:id="_n56R5ZAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n56485AREeOq6NMfztjeOg" base_Element="_n5648JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n5649ZAREeOq6NMfztjeOg" base_Element="_n5648ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_n57gAJAREeOq6NMfztjeOg" base_Element="_n5648JAREeOq6NMfztjeOg">
    <annotations xmi:id="_n57gAZAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_n57gBpAREeOq6NMfztjeOg" base_Element="_n57gApAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n57gCJAREeOq6NMfztjeOg" base_Element="_n57gA5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n59VM5AREeOq6NMfztjeOg" base_Element="_n59VMZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n59VNZAREeOq6NMfztjeOg" base_Element="_n59VMpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n5_KY5AREeOq6NMfztjeOg" base_Element="_n5_KYJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n5_xcpAREeOq6NMfztjeOg" base_Element="_n5_KZJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n6AYgZAREeOq6NMfztjeOg" base_Element="_n5_xdZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n6A_kZAREeOq6NMfztjeOg" base_Element="_n6AYg5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n6Db0pAREeOq6NMfztjeOg" base_Element="_n6C0wJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n6Ep8JAREeOq6NMfztjeOg" base_Element="_VbhD85AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n6F4EpAREeOq6NMfztjeOg" base_Element="_n6FRAJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n6F4E5AREeOq6NMfztjeOg" base_Element="_n6FRAJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n6F4FZAREeOq6NMfztjeOg" base_Element="_n6FRAZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_n6F4FpAREeOq6NMfztjeOg" base_Element="_n6FRAJAREeOq6NMfztjeOg">
    <annotations xmi:id="_n6GfIJAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n6GfI5AREeOq6NMfztjeOg" base_Element="_n6GfIZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n6GfJZAREeOq6NMfztjeOg" base_Element="_n6GfIpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_n6HGMJAREeOq6NMfztjeOg" base_Element="_n6GfIZAREeOq6NMfztjeOg">
    <annotations xmi:id="_n6HGMZAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n6HtQJAREeOq6NMfztjeOg" base_Element="_n6HGMpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n6HtQpAREeOq6NMfztjeOg" base_Element="_n6HGM5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_n6HtQ5AREeOq6NMfztjeOg" base_Element="_n6HGMpAREeOq6NMfztjeOg">
    <annotations xmi:id="_n6HtRJAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_n6IUUZAREeOq6NMfztjeOg" dimensions="2" base_Element="_n6HtRZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n6IUVpAREeOq6NMfztjeOg" dimensions="2" base_Element="_n6IUUpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n6sVBJAREeOq6NMfztjeOg" base_Element="_n6sVAJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n6sVBpAREeOq6NMfztjeOg" base_Element="_n6sVAZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_n6s8EJAREeOq6NMfztjeOg" base_Element="_n6sVAJAREeOq6NMfztjeOg">
    <annotations xmi:id="_n6s8EZAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_n6uKMJAREeOq6NMfztjeOg" base_Element="_n6tjJZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_n6uKMpAREeOq6NMfztjeOg" base_Element="_n6uKMZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n6vYUJAREeOq6NMfztjeOg" base_Element="_n6uxRZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n6vYUpAREeOq6NMfztjeOg" base_Element="_n6uxRpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_n6vYU5AREeOq6NMfztjeOg" base_Element="_n6uxRZAREeOq6NMfztjeOg">
    <annotations xmi:id="_n6vYVJAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_n6xNgZAREeOq6NMfztjeOg" base_Element="_n6wmdZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n6x0lpAREeOq6NMfztjeOg" base_Element="_n6x0k5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n6zCtJAREeOq6NMfztjeOg" base_Element="_n6zCsJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n6zCtpAREeOq6NMfztjeOg" base_Element="_n6zCsZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Annotations xmi:id="_n6zCt5AREeOq6NMfztjeOg" base_Element="_n6zCsJAREeOq6NMfztjeOg">
    <annotations xmi:id="_n6zCuJAREeOq6NMfztjeOg" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n62GApAREeOq6NMfztjeOg" base_Element="_n62GAZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n62GBJAREeOq6NMfztjeOg" base_Element="_n62GA5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_n62tEJAREeOq6NMfztjeOg" base_Element="_n62GBZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n62tEZAREeOq6NMfztjeOg" base_Element="_n62GBZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_n62tFpAREeOq6NMfztjeOg" base_Element="_n62tEpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_n69awJAREeOq6NMfztjeOg" base_Element="_n68zsJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_n69aw5AREeOq6NMfztjeOg" base_Element="_n69awZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_n69axpAREeOq6NMfztjeOg" base_Element="_n69axJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rc53g5AREeOq6NMfztjeOg" base_Element="_rc53gJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_rc7FppAREeOq6NMfztjeOg" dimensions="2" base_Element="_rc7FoZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_rc9h45AREeOq6NMfztjeOg" dimensions="2" base_Element="_rc9h4ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_rc-I8JAREeOq6NMfztjeOg" dimensions="2" base_Element="_rc9h5ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_rc-I9JAREeOq6NMfztjeOg" dimensions="2" base_Element="_rc-I8pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_rdhikZAREeOq6NMfztjeOg" base_Element="_rdhikJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_rdiJoZAREeOq6NMfztjeOg" base_Element="_rdiJoJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_rdiJo5AREeOq6NMfztjeOg" base_Element="_rdiJopAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_rdiwsJAREeOq6NMfztjeOg" base_Element="_rdiJpJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_rdiwspAREeOq6NMfztjeOg" base_Element="_rdiwsZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_rdiwtJAREeOq6NMfztjeOg" base_Element="_rdiws5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_rdjXwJAREeOq6NMfztjeOg" base_Element="_rdiwtZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_rdjXwpAREeOq6NMfztjeOg" base_Element="_rdjXwZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_rdj-0JAREeOq6NMfztjeOg" base_Element="_rdjXw5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_rdj-0pAREeOq6NMfztjeOg" base_Element="_rdj-0ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_rdj-1JAREeOq6NMfztjeOg" base_Element="_rdj-05AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_rdkl4JAREeOq6NMfztjeOg" base_Element="_rdj-1ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_rdkl4pAREeOq6NMfztjeOg" base_Element="_rdkl4ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_rdkl5JAREeOq6NMfztjeOg" base_Element="_rdkl45AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_rdmbFZAREeOq6NMfztjeOg" dimensions="2" base_Element="_rdmbEZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_rdnpOpAREeOq6NMfztjeOg" dimensions="2" base_Element="_rdnpM5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_rdxaMJAREeOq6NMfztjeOg" base_Property="_rdwzIJAREeOq6NMfztjeOg" siblings="_rd8ZUJAREeOq6NMfztjeOg _rd9AYJAREeOq6NMfztjeOg _rd9AY5AREeOq6NMfztjeOg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rdxaMZAREeOq6NMfztjeOg" base_Element="_rdwzIJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rdyBQJAREeOq6NMfztjeOg" base_Element="_rdxaMpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rdyBQ5AREeOq6NMfztjeOg" base_Element="_rdyBQZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rdyBRZAREeOq6NMfztjeOg" base_Element="_rdyBRJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rdyoUJAREeOq6NMfztjeOg" base_Element="_rdyBRpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rdyoUpAREeOq6NMfztjeOg" base_Element="_rdyoUZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rdyoVJAREeOq6NMfztjeOg" base_Element="_rdyoU5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_rdzPYJAREeOq6NMfztjeOg" base_Property="_rdyoVZAREeOq6NMfztjeOg" siblings="_rd9AZpAREeOq6NMfztjeOg" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rdzPYZAREeOq6NMfztjeOg" base_Element="_rdyoVZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rdzPZJAREeOq6NMfztjeOg" base_Element="_rdzPYpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rdz2cZAREeOq6NMfztjeOg" base_Element="_rdzPZZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rdz2dJAREeOq6NMfztjeOg" base_Element="_rdz2cpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd0dgJAREeOq6NMfztjeOg" base_Element="_rdz2dZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd0dg5AREeOq6NMfztjeOg" base_Element="_rd0dgZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd0dhpAREeOq6NMfztjeOg" base_Element="_rd0dhJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd1EkJAREeOq6NMfztjeOg" base_Element="_rd0dh5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd1Ek5AREeOq6NMfztjeOg" base_Element="_rd1EkZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd1ElpAREeOq6NMfztjeOg" base_Element="_rd1ElJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd1roZAREeOq6NMfztjeOg" base_Element="_rd1El5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd1rpJAREeOq6NMfztjeOg" base_Element="_rd1ropAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd1rp5AREeOq6NMfztjeOg" base_Element="_rd1rpZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd2SspAREeOq6NMfztjeOg" base_Element="_rd2SsJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd2StZAREeOq6NMfztjeOg" base_Element="_rd2Ss5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Array xmi:id="_rd25wJAREeOq6NMfztjeOg" dimensions="2" base_Element="_rd2StpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd25wZAREeOq6NMfztjeOg" base_Element="_rd2StpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd25w5AREeOq6NMfztjeOg" base_Element="_rd25wpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd25xpAREeOq6NMfztjeOg" base_Element="_rd25xJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd3g0ZAREeOq6NMfztjeOg" base_Element="_rd3g0JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd3g05AREeOq6NMfztjeOg" base_Element="_rd3g0pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd3g1pAREeOq6NMfztjeOg" base_Element="_rd3g1JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_rd8ZUZAREeOq6NMfztjeOg" base_Property="_rd8ZUJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd8ZUpAREeOq6NMfztjeOg" base_Element="_rd8ZUJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_rd9AYZAREeOq6NMfztjeOg" base_Property="_rd9AYJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd9AYpAREeOq6NMfztjeOg" base_Element="_rd9AYJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_rd9AZJAREeOq6NMfztjeOg" base_Property="_rd9AY5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd9AZZAREeOq6NMfztjeOg" base_Element="_rd9AY5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_rd9ncJAREeOq6NMfztjeOg" base_Property="_rd9AZpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_rd9ncZAREeOq6NMfztjeOg" base_Element="_rd9AZpAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_reAqwpAREeOq6NMfztjeOg" base_Element="_reAqwJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_reAqxZAREeOq6NMfztjeOg" base_Element="_reAqw5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_reBR0pAREeOq6NMfztjeOg" base_Element="_reBR0JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_reBR1ZAREeOq6NMfztjeOg" base_Element="_reBR05AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_reB44JAREeOq6NMfztjeOg" base_Element="_reBR1pAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_reB445AREeOq6NMfztjeOg" base_Element="_reB44ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_reCf8JAREeOq6NMfztjeOg" base_Element="_reB45JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_reCf85AREeOq6NMfztjeOg" base_Element="_reCf8ZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_reDHAJAREeOq6NMfztjeOg" base_Element="_reCf9JAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_reDHA5AREeOq6NMfztjeOg" base_Element="_reDHAZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_reDHBpAREeOq6NMfztjeOg" base_Element="_reDHBJAREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_reDuEJAREeOq6NMfztjeOg" base_Element="_reDHB5AREeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_reDuE5AREeOq6NMfztjeOg" base_Element="_reDuEZAREeOq6NMfztjeOg"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_XHwRYJATEeOq6NMfztjeOg" base_Element="_XHvqUJATEeOq6NMfztjeOg"/>
  <UMLLabProfile:Reference xmi:id="_XH7QgpATEeOq6NMfztjeOg" base_Element="_XH7QgJATEeOq6NMfztjeOg"/>
</xmi:XMI>
